{"version":3,"sources":["./node_modules/@angular/material/__ivy_ngcc__/fesm2015/checkbox.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/dialog.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/progress-spinner.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/toolbar.js","./node_modules/ngx-mat-select-search/__ivy_ngcc__/fesm2015/ngx-mat-select-search.js","./node_modules/rxjs-compat/_esm2015/ReplaySubject.js","./src/app/pages/dashboard/dashboard.component.ts","./src/app/pages/dashboard/dashboard.component.html","./src/app/pages/modal/modal.component.ts","./src/app/pages/modal/modal.component.html","./src/app/pages/pages-menu.ts","./src/app/pages/pages-routing.module.ts","./src/app/pages/pages.component.ts","./src/app/pages/pages.module.ts","./src/app/pages/patients/patients.component.ts","./src/app/pages/patients/patients.component.html","./src/app/pages/tables/access-control/access-control.component.ts","./src/app/pages/tables/access-control/access-control.component.html","./src/app/pages/tables/contact-list/contact-list.component.ts","./src/app/pages/tables/contact-list/contact-list.component.html","./src/app/pages/tables/contact-list/delete-popup/delete-popup.component.ts","./src/app/pages/tables/contact-list/delete-popup/delete-popup.component.html","./src/app/pages/tables/contact-list/edit-popup/edit-popup.component.ts","./src/app/pages/tables/contact-list/edit-popup/edit-popup.component.html","./src/app/pages/tables/language-speak/delete-popup/delete-popup.component.ts","./src/app/pages/tables/language-speak/delete-popup/delete-popup.component.html","./src/app/pages/tables/language-speak/edit-popup/edit-popup.component.ts","./src/app/pages/tables/language-speak/edit-popup/edit-popup.component.html","./src/app/pages/tables/language-speak/language-speak.component.ts","./src/app/pages/tables/language-speak/language-speak.component.html","./src/app/pages/tables/payment-settings/payment-settings.component.ts","./src/app/pages/tables/payment-settings/payment-settings.component.html","./src/app/pages/tables/specilization/modal/modal.component.ts","./src/app/pages/tables/specilization/modal/modal.component.html","./src/app/pages/tables/specilization/specilization.component.ts","./src/app/pages/tables/specilization/specilization.component.html","./src/app/pages/tables/tables-routing.module.ts","./src/app/pages/tables/tables.component.ts","./src/app/pages/tables/tables.module.ts","./src/app/pages/tables/users/users.component.ts","./src/app/pages/tables/users/users.component.html","./src/app/pages/tables/verifi-check-list/verifi-check-list.component.ts","./src/app/pages/tables/verifi-check-list/verifi-check-list.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiD;AACa;AACqL;AACtJ;AACsD;AACtE;AACpB;;AAEzD;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACwC;AACI;AACK;AACA;;AAEjD;AACA,yBAAyB,SAAS,sBAAsB;AACxD;AACA,sCAAsC;AACtC,WAAW,EAKV;AACD;AACA;AACA,UAAU;AACV;AACA,yCAAyC,4DAAc;AACvD;AACA;AACA,CAAC;AACD;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,sCAAsC,4DAAc;;AAEpD;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAWV;AACD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,WAAW,EAGV;AACD,WAAW,EAAE;AACb,8BAA8B,4EAAa,CAAC,yEAAU,CAAC,iFAAkB,CAAC,4EAAa;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,eAAe;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,uCAAuC,0DAAY;AACnD;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,oBAAoB;AACpB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,WAAW,0BAA0B,QAAQ;AAChE;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,yBAAyB,kBAAkB,mFAAqB,QAAQ;AACxE;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,0BAA0B;AAC1B;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mBAAmB,sBAAsB;AACzC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,yBAAyB,4BAA4B;AACrD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,8BAA8B,mFAAqB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EA+HV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,qBAAqB,mEAAO;AAC5B;AACA;AACA;AACA,QAAQ,iEAAK,eAAe,iEAAK,EAAE,sCAAsC;AACzE,QAAQ,iEAAK,UAAU,iEAAK,EAAE,oBAAoB;AAClD,QAAQ,sEAAU,eAAe,mEAAO,qCAAqC,iEAAK,EAAE,gCAAgC;AACpH,QAAQ,sEAAU,yBAAyB,mEAAO,wCAAwC,iEAAK,EAAE,aAAa;AAC9G;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,oEAAgB;AACjD;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,0DAAY;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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EAAE;AACb;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA,oEAAoE,WAAW;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4CAAO;AACvC;AACA;AACA;AACA,gCAAgC,4CAAO;AACvC;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,6DAAM;AAC7D,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,4EAA4E,2DAAI;AAChF;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,uDAAuD,6DAAM;AAC7D,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,2EAA2E,2DAAI;AAC/E,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,EAAE;AACnD;AACA,SAAS;AACT;AACA,kBAAkB,6DAAM;AACxB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,qCAAqC,6DAAM,2BAA2B,6EAAc;AACpF,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,4DAA4D,6DAAM;AAClE,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,gDAAgD,2DAAI;AACpD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,WAAW,EAwDV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,UAAU;AACV;AACA,4BAA4B,4DAAc;AAC1C;AACA;AACA,UAAU;AACV;AACA,uCAAuC,4DAAc;AACrD;AACA;AACA,UAAU;AACV;AACA,uCAAuC,4DAAc;AACrD;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,WAAW,4DAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,4CAAO;AACrD,2CAA2C,4CAAO;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,EAAE,KAAK,kDAAK;AACtD,oBAAoB;AACpB;AACA;AACA;AACA,sCAAsC,gEAAS;AAC/C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,2CAA2C,UAAU;AACrD;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB,0BAA0B,kEAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,yBAAyB,sDAAQ;AACjC;AACA,yBAAyB,6CAA6C;AACtE,SAAS;AACT,mBAAmB,EAAE;AACrB,oCAAoC,mEAAe;AACnD,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,8CAA8C,yDAAW;AACzD,qDAAqD,kEAAc,qCAAqC,EAAE,yBAAyB,EAAE,MAAM,oCAAoC;AAC/K;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,yEAAyE,mEAAe;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,aAAa,yDAAyD;AACtE,aAAa,kDAAkD;AAC/D,aAAa;AACb;AACA;AACA,gDAAgD,gEAAc;AAC9D;AACA,yBAAyB,gEAAc;AACvC,2BAA2B,kCAAkC,+CAAE;AAC/D,aAAa;AACb;AACA,eAAe,sDAAQ,SAAS,oDAAoD;AACpF;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AAC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BAA8B,gDAAgD;AAC7F,aAAa,gCAAgC,8CAA8C;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,uBAAuB;AAC3C;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,yBAAyB,kFAAoB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,4BAA4B,kFAAoB;AAChD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gDAAgD,kFAAoB;AACpE;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,0BAA0B,4EAAc;AACxC;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oEAAoE,2CAA2C;AAC/G;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,sBAAsB,QAAQ,GAAG,QAAQ;AACzC;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6DAAK,KAAK,iEAAS;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kBAAkB,4DAAI;AACtB,kBAAkB,iEAAS;AAC3B;AACA;AACA,uDAAuD,iEAAS;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iEAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA,uCAAuC,iEAAS;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kBAAkB,iEAAS;AAC3B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,+BAA+B,iEAAS;AACxC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,uDAAC,qBAAqB,uDAAC;AACrD,8BAA8B,0DAAI,qBAAqB,0DAAI;AAC3D,+BAA+B,2DAAK;AACpC,wEAAwE,0DAAI,sBAAsB,yDAAG;AACrG;AACA;AACA;AACA,0EAA0E,4DAAM;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,8DAAQ,sBAAsB,gEAAU;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,8DAAM,mDAAmD,2DAAG,kDAAkD,iEAAS;AACnK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iEAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4FAA6B;AAC5D;AACA;AACA;AACA;AACA,uDAAuD,gFAAuB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gFAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,iEAAS,aAAa,4DAAI,0BAA0B,gDAAgD,KAAK,oDAAoD,IAAI,iEAAS;AACtN;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,4CAA4C,+DAAwB,CAAC,kEAAS,GAAG,+DAAwB,CAAC,+DAAwB,GAAG,+DAAwB,CAAC,oEAAoB,GAAG,+DAAwB,CAAC,gEAAS,MAAM,+DAAwB,CAAC,+DAAoB,GAAG,+DAAwB,CAA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","file":"pages-pages-module-es2015.js","sourcesContent":["import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, NgZone, Attribute, Optional, Inject, Input, Output, ViewChild, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default `mat-checkbox` options that can be overridden.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"input\"];\nconst _c1 = function () { return { enterDuration: 150 }; };\nconst _c2 = [\"*\"];\nfunction MatCheckboxDefaultOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    MatCheckboxDefaultOptions.prototype.color;\n    /** @type {?|undefined} */\n    MatCheckboxDefaultOptions.prototype.clickAction;\n}\n/**\n * Injection token to be used to override the default options for `mat-checkbox`.\n * @type {?}\n */\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\n    providedIn: 'root',\n    factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n        clickAction: 'check-indeterminate',\n    };\n}\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n * @deprecated Injection token will be removed, use `MAT_CHECKBOX_DEFAULT_OPTIONS` instead.\n * \\@breaking-change 10.0.0\n * @type {?}\n */\nconst MAT_CHECKBOX_CLICK_ACTION = new InjectionToken('mat-checkbox-click-action');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Increasing integer for generating unique ids for checkbox components.\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * \\@docs-private\n * @type {?}\n */\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatCheckbox)),\n    multi: true\n};\n/** @enum {number} */\nconst TransitionCheckState = {\n    /** The initial state of the component before any user interaction. */\n    Init: 0,\n    /** The state representing the component when it's becoming checked. */\n    Checked: 1,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked: 2,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate: 3,\n};\n/**\n * Change event object emitted by MatCheckbox.\n */\nclass MatCheckboxChange {\n}\nif (false) {\n    /**\n     * The source MatCheckbox of the event.\n     * @type {?}\n     */\n    MatCheckboxChange.prototype.source;\n    /**\n     * The new `checked` value of the checkbox.\n     * @type {?}\n     */\n    MatCheckboxChange.prototype.checked;\n}\n// Boilerplate for applying mixins to MatCheckbox.\n/**\n * \\@docs-private\n */\nclass MatCheckboxBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatCheckboxBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatCheckboxMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatCheckboxBase))));\n/**\n * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A MatCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n * See: https://material.io/design/components/selection-controls.html\n */\nclass MatCheckbox extends _MatCheckboxMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _focusMonitor\n     * @param {?} _ngZone\n     * @param {?} tabIndex\n     * @param {?} _clickAction\n     * @param {?=} _animationMode\n     * @param {?=} _options\n     */\n    constructor(elementRef, _changeDetectorRef, _focusMonitor, _ngZone, tabIndex, _clickAction, _animationMode, _options) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._focusMonitor = _focusMonitor;\n        this._ngZone = _ngZone;\n        this._clickAction = _clickAction;\n        this._animationMode = _animationMode;\n        this._options = _options;\n        /**\n         * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n         * take precedence so this may be omitted.\n         */\n        this.ariaLabel = '';\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        this._uniqueId = `mat-checkbox-${++nextUniqueId}`;\n        /**\n         * A unique id for the checkbox input. If none is supplied, it will be auto-generated.\n         */\n        this.id = this._uniqueId;\n        /**\n         * Whether the label should appear after or before the checkbox. Defaults to 'after'\n         */\n        this.labelPosition = 'after';\n        /**\n         * Name value will be applied to the input element if present\n         */\n        this.name = null;\n        /**\n         * Event emitted when the checkbox's `checked` value changes.\n         */\n        this.change = new EventEmitter();\n        /**\n         * Event emitted when the checkbox's `indeterminate` value changes.\n         */\n        this.indeterminateChange = new EventEmitter();\n        /**\n         * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n         * \\@docs-private\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._currentAnimationClass = '';\n        this._currentCheckState = 0 /* Init */;\n        this._controlValueAccessorChangeFn = (/**\n         * @return {?}\n         */\n        () => { });\n        this._checked = false;\n        this._disabled = false;\n        this._indeterminate = false;\n        this._options = this._options || {};\n        if (this._options.color) {\n            this.color = this._options.color;\n        }\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this._focusMonitor.monitor(elementRef, true).subscribe((/**\n         * @param {?} focusOrigin\n         * @return {?}\n         */\n        focusOrigin => {\n            if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state change\n                // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n                // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n                // telling the form control it has been touched until the next tick.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._onTouched();\n                    _changeDetectorRef.markForCheck();\n                }));\n            }\n        }));\n        // TODO: Remove this after the `_clickAction` parameter is removed as an injection parameter.\n        this._clickAction = this._clickAction || this._options.clickAction;\n    }\n    /**\n     * Returns the unique id for the visual hidden input.\n     * @return {?}\n     */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /**\n     * Whether the checkbox is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._syncIndeterminate(this._indeterminate);\n    }\n    // TODO: Delete next major revision.\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() { }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Whether the checkbox is checked.\n     * @return {?}\n     */\n    get checked() { return this._checked; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set checked(value) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this.disabled) {\n            this._disabled = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     * @return {?}\n     */\n    get indeterminate() { return this._indeterminate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set indeterminate(value) {\n        /** @type {?} */\n        const changed = value != this._indeterminate;\n        this._indeterminate = coerceBooleanProperty(value);\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(3 /* Indeterminate */);\n            }\n            else {\n                this._transitionCheckState(this.checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n        this._syncIndeterminate(this._indeterminate);\n    }\n    /**\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /**\n     * Method being called whenever the label text changes.\n     * @return {?}\n     */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n        // component will be only marked for check, but no actual change detection runs automatically.\n        // Instead of going back into the zone in order to trigger a change detection which causes\n        // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n        // an explicit change detection for the checkbox view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * @return {?}\n     */\n    _getAriaChecked() {\n        if (this.checked) {\n            return 'true';\n        }\n        return this.indeterminate ? 'mixed' : 'false';\n    }\n    /**\n     * @private\n     * @param {?} newState\n     * @return {?}\n     */\n    _transitionCheckState(newState) {\n        /** @type {?} */\n        let oldState = this._currentCheckState;\n        /** @type {?} */\n        let element = this._elementRef.nativeElement;\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n        this._currentCheckState = newState;\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n            // Remove the animation class to avoid animation when the checkbox is moved between containers\n            /** @type {?} */\n            const animationClass = this._currentAnimationClass;\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    element.classList.remove(animationClass);\n                }), 1000);\n            }));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        /** @type {?} */\n        const event = new MatCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n    /**\n     * Toggles the `checked` state of the checkbox.\n     * @return {?}\n     */\n    toggle() {\n        this.checked = !this.checked;\n    }\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param {?} event\n     * @return {?}\n     */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                }));\n            }\n            this.toggle();\n            this._transitionCheckState(this._checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n        else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mat-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n    /**\n     * Focuses the checkbox.\n     * @param {?=} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'keyboard', options) {\n        this._focusMonitor.focusVia(this._inputElement, origin, options);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onInteractionEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n    /**\n     * @private\n     * @param {?} oldState\n     * @param {?} newState\n     * @return {?}\n     */\n    _getAnimationClassForCheckStateTransition(oldState, newState) {\n        // Don't transition if animations are disabled.\n        if (this._animationMode === 'NoopAnimations') {\n            return '';\n        }\n        /** @type {?} */\n        let animSuffix = '';\n        switch (oldState) {\n            case 0 /* Init */:\n                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                // [checked] bound to it.\n                if (newState === 1 /* Checked */) {\n                    animSuffix = 'unchecked-checked';\n                }\n                else if (newState == 3 /* Indeterminate */) {\n                    animSuffix = 'unchecked-indeterminate';\n                }\n                else {\n                    return '';\n                }\n                break;\n            case 2 /* Unchecked */:\n                animSuffix = newState === 1 /* Checked */ ?\n                    'unchecked-checked' : 'unchecked-indeterminate';\n                break;\n            case 1 /* Checked */:\n                animSuffix = newState === 2 /* Unchecked */ ?\n                    'checked-unchecked' : 'checked-indeterminate';\n                break;\n            case 3 /* Indeterminate */:\n                animSuffix = newState === 1 /* Checked */ ?\n                    'indeterminate-checked' : 'indeterminate-unchecked';\n                break;\n        }\n        return `mat-checkbox-anim-${animSuffix}`;\n    }\n    /**\n     * Syncs the indeterminate value with the checkbox DOM node.\n     *\n     * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n     * property is supported on an element boils down to `if (propName in element)`. Domino's\n     * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n     * server-side rendering.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _syncIndeterminate(value) {\n        /** @type {?} */\n        const nativeCheckbox = this._inputElement;\n        if (nativeCheckbox) {\n            nativeCheckbox.nativeElement.indeterminate = value;\n        }\n    }\n}\nMatCheckbox.ɵfac = function MatCheckbox_Factory(t) { return new (t || MatCheckbox)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_CHECKBOX_CLICK_ACTION, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_CHECKBOX_DEFAULT_OPTIONS, 8)); };\nMatCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCheckbox, selectors: [[\"mat-checkbox\"]], viewQuery: function MatCheckbox_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(MatRipple, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n    } }, hostAttrs: [1, \"mat-checkbox\"], hostVars: 12, hostBindings: function MatCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-indeterminate\", ctx.indeterminate)(\"mat-checkbox-checked\", ctx.checked)(\"mat-checkbox-disabled\", ctx.disabled)(\"mat-checkbox-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], id: \"id\", labelPosition: \"labelPosition\", name: \"name\", required: \"required\", checked: \"checked\", disabled: \"disabled\", indeterminate: \"indeterminate\", value: \"value\" }, outputs: { change: \"change\", indeterminateChange: \"indeterminateChange\" }, exportAs: [\"matCheckbox\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 17, vars: 19, consts: [[1, \"mat-checkbox-layout\"], [\"label\", \"\"], [1, \"mat-checkbox-inner-container\"], [\"type\", \"checkbox\", 1, \"mat-checkbox-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"checked\", \"disabled\", \"tabIndex\", \"change\", \"click\"], [\"input\", \"\"], [\"matRipple\", \"\", 1, \"mat-checkbox-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleRadius\", \"matRippleCentered\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-checkbox-persistent-ripple\"], [1, \"mat-checkbox-frame\"], [1, \"mat-checkbox-background\"], [\"version\", \"1.1\", \"focusable\", \"false\", \"viewBox\", \"0 0 24 24\", 0, \"xml\", \"space\", \"preserve\", 1, \"mat-checkbox-checkmark\"], [\"fill\", \"none\", \"stroke\", \"white\", \"d\", \"M4.1,12.7 9,17.6 20.3,6.3\", 1, \"mat-checkbox-checkmark-path\"], [1, \"mat-checkbox-mixedmark\"], [1, \"mat-checkbox-label\", 3, \"cdkObserveContent\"], [\"checkboxLabel\", \"\"], [2, \"display\", \"none\"]], template: function MatCheckbox_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"input\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"change\", function MatCheckbox_Template_input_change_3_listener($event) { return ctx._onInteractionEvent($event); })(\"click\", function MatCheckbox_Template_input_click_3_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵelement(6, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(7, \"div\", 7);\n        ɵngcc0.ɵɵelementStart(8, \"div\", 8);\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(9, \"svg\", 9);\n        ɵngcc0.ɵɵelement(10, \"path\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelement(11, \"div\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(12, \"span\", 12, 13);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatCheckbox_Template_span_cdkObserveContent_12_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(14, \"span\", 14);\n        ɵngcc0.ɵɵtext(15, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(16);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        const _r2 = ɵngcc0.ɵɵreference(13);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-inner-container-no-side-margin\", !_r2.textContent || !_r2.textContent.trim());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"value\", ctx.value)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel || null)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-checked\", ctx._getAriaChecked());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleRadius\", 20)(\"matRippleCentered\", true)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(18, _c1));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox.cdk-keyboard-focused .cdk-high-contrast-active .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCheckbox.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_CHECKBOX_CLICK_ACTION,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_CHECKBOX_DEFAULT_OPTIONS,] }] }\n];\nMatCheckbox.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    id: [{ type: Input }],\n    required: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    name: [{ type: Input }],\n    change: [{ type: Output }],\n    indeterminateChange: [{ type: Output }],\n    value: [{ type: Input }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }],\n    ripple: [{ type: ViewChild, args: [MatRipple,] }],\n    checked: [{ type: Input }],\n    disabled: [{ type: Input }],\n    indeterminate: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckbox, [{\n        type: Component,\n        args: [{\n                selector: 'mat-checkbox',\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-checkbox-layout\\\" #label>\\n  <div class=\\\"mat-checkbox-inner-container\\\"\\n       [class.mat-checkbox-inner-container-no-side-margin]=\\\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\\\">\\n    <input #input\\n           class=\\\"mat-checkbox-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [checked]=\\\"checked\\\"\\n           [attr.value]=\\\"value\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-checked]=\\\"_getAriaChecked()\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n    <div matRipple class=\\\"mat-checkbox-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n      <div class=\\\"mat-ripple-element mat-checkbox-persistent-ripple\\\"></div>\\n    </div>\\n    <div class=\\\"mat-checkbox-frame\\\"></div>\\n    <div class=\\\"mat-checkbox-background\\\">\\n      <svg version=\\\"1.1\\\"\\n           focusable=\\\"false\\\"\\n           class=\\\"mat-checkbox-checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           xml:space=\\\"preserve\\\">\\n        <path class=\\\"mat-checkbox-checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              stroke=\\\"white\\\"\\n              d=\\\"M4.1,12.7 9,17.6 20.3,6.3\\\"/>\\n      </svg>\\n      <!-- Element for rendering the indeterminate state checkbox. -->\\n      <div class=\\\"mat-checkbox-mixedmark\\\"></div>\\n    </div>\\n  </div>\\n  <span class=\\\"mat-checkbox-label\\\" #checkboxLabel (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                exportAs: 'matCheckbox',\n                host: {\n                    'class': 'mat-checkbox',\n                    '[id]': 'id',\n                    '[attr.tabindex]': 'null',\n                    '[class.mat-checkbox-indeterminate]': 'indeterminate',\n                    '[class.mat-checkbox-checked]': 'checked',\n                    '[class.mat-checkbox-disabled]': 'disabled',\n                    '[class.mat-checkbox-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                },\n                providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n                inputs: ['disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox.cdk-keyboard-focused .cdk-high-contrast-active .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_CHECKBOX_CLICK_ACTION]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_CHECKBOX_DEFAULT_OPTIONS]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], indeterminateChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], indeterminate: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }], ripple: [{\n            type: ViewChild,\n            args: [MatRipple]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_required;\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_indeterminate;\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n     * take precedence so this may be omitted.\n     * @type {?}\n     */\n    MatCheckbox.prototype.ariaLabel;\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     * @type {?}\n     */\n    MatCheckbox.prototype.ariaLabelledby;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._uniqueId;\n    /**\n     * A unique id for the checkbox input. If none is supplied, it will be auto-generated.\n     * @type {?}\n     */\n    MatCheckbox.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._required;\n    /**\n     * Whether the label should appear after or before the checkbox. Defaults to 'after'\n     * @type {?}\n     */\n    MatCheckbox.prototype.labelPosition;\n    /**\n     * Name value will be applied to the input element if present\n     * @type {?}\n     */\n    MatCheckbox.prototype.name;\n    /**\n     * Event emitted when the checkbox's `checked` value changes.\n     * @type {?}\n     */\n    MatCheckbox.prototype.change;\n    /**\n     * Event emitted when the checkbox's `indeterminate` value changes.\n     * @type {?}\n     */\n    MatCheckbox.prototype.indeterminateChange;\n    /**\n     * The value attribute of the native input element\n     * @type {?}\n     */\n    MatCheckbox.prototype.value;\n    /**\n     * The native `<input type=\"checkbox\">` element\n     * @type {?}\n     */\n    MatCheckbox.prototype._inputElement;\n    /**\n     * Reference to the ripple instance of the checkbox.\n     * @type {?}\n     */\n    MatCheckbox.prototype.ripple;\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatCheckbox.prototype._onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._currentAnimationClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._currentCheckState;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._controlValueAccessorChangeFn;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._checked;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._indeterminate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._ngZone;\n    /**\n     * @deprecated `_clickAction` parameter to be removed, use\n     * `MAT_CHECKBOX_DEFAULT_OPTIONS`\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._clickAction;\n    /** @type {?} */\n    MatCheckbox.prototype._animationMode;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._options;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox-required-validator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatCheckboxRequiredValidator)),\n    multi: true\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n */\nclass MatCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\nMatCheckboxRequiredValidator.ɵfac = function MatCheckboxRequiredValidator_Factory(t) { return ɵMatCheckboxRequiredValidator_BaseFactory(t || MatCheckboxRequiredValidator); };\nMatCheckboxRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCheckboxRequiredValidator, selectors: [[\"mat-checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatCheckboxRequiredValidator_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCheckboxRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckboxRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-checkbox[required][formControlName],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\n                providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This module is used by both original and MDC-based checkbox implementations.\n */\n// tslint:disable-next-line:class-name\nclass _MatCheckboxRequiredValidatorModule {\n}\n_MatCheckboxRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatCheckboxRequiredValidatorModule });\n_MatCheckboxRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatCheckboxRequiredValidatorModule_Factory(t) { return new (t || _MatCheckboxRequiredValidatorModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatCheckboxRequiredValidatorModule, { declarations: [MatCheckboxRequiredValidator], exports: [MatCheckboxRequiredValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatCheckboxRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatCheckboxRequiredValidator],\n                declarations: [MatCheckboxRequiredValidator]\n            }]\n    }], null, null); })();\nclass MatCheckboxModule {\n}\nMatCheckboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCheckboxModule });\nMatCheckboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCheckboxModule_Factory(t) { return new (t || MatCheckboxModule)(); }, imports: [[\n            MatRippleModule, MatCommonModule, ObserversModule,\n            _MatCheckboxRequiredValidatorModule\n        ],\n        MatCommonModule,\n        _MatCheckboxRequiredValidatorModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCheckboxModule, { declarations: function () { return [MatCheckbox]; }, imports: function () { return [MatRippleModule, MatCommonModule, ObserversModule,\n        _MatCheckboxRequiredValidatorModule]; }, exports: function () { return [MatCheckbox,\n        MatCommonModule,\n        _MatCheckboxRequiredValidatorModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckboxModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatRippleModule, MatCommonModule, ObserversModule,\n                    _MatCheckboxRequiredValidatorModule\n                ],\n                exports: [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule],\n                declarations: [MatCheckbox]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHECKBOX_CLICK_ACTION, MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, _MatCheckboxRequiredValidatorModule };\n\n//# sourceMappingURL=checkbox.js.map","import { Overlay, OverlayConfig, OverlayContainer, OverlayModule } from '@angular/cdk/overlay';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Inject, ViewChild, InjectionToken, Injector, TemplateRef, Injectable, SkipSelf, Directive, Input, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { DOCUMENT, Location } from '@angular/common';\nimport { Subject, defer, of } from 'rxjs';\nimport { filter, take, startWith } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { FocusTrapFactory } from '@angular/cdk/a11y';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Possible overrides for a dialog's position.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/overlay';\nimport * as ɵngcc4 from '@angular/common';\n\nfunction MatDialogContainer_ng_template_0_Template(rf, ctx) { }\nfunction DialogPosition() { }\nif (false) {\n    /**\n     * Override for the dialog's top position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.top;\n    /**\n     * Override for the dialog's bottom position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.bottom;\n    /**\n     * Override for the dialog's left position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.left;\n    /**\n     * Override for the dialog's right position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.right;\n}\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n * @template D\n */\nclass MatDialogConfig {\n    constructor() {\n        /**\n         * The ARIA role of the dialog element.\n         */\n        this.role = 'dialog';\n        /**\n         * Custom class for the overlay pane.\n         */\n        this.panelClass = '';\n        /**\n         * Whether the dialog has a backdrop.\n         */\n        this.hasBackdrop = true;\n        /**\n         * Custom class for the backdrop.\n         */\n        this.backdropClass = '';\n        /**\n         * Whether the user can use escape or clicking on the backdrop to close the modal.\n         */\n        this.disableClose = false;\n        /**\n         * Width of the dialog.\n         */\n        this.width = '';\n        /**\n         * Height of the dialog.\n         */\n        this.height = '';\n        /**\n         * Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw.\n         */\n        this.maxWidth = '80vw';\n        /**\n         * Data being injected into the child component.\n         */\n        this.data = null;\n        /**\n         * ID of the element that describes the dialog.\n         */\n        this.ariaDescribedBy = null;\n        /**\n         * ID of the element that labels the dialog.\n         */\n        this.ariaLabelledBy = null;\n        /**\n         * Aria label to assign to the dialog element.\n         */\n        this.ariaLabel = null;\n        /**\n         * Whether the dialog should focus the first focusable element on open.\n         */\n        this.autoFocus = true;\n        /**\n         * Whether the dialog should restore focus to the\n         * previously-focused element, after it's closed.\n         */\n        this.restoreFocus = true;\n        /**\n         * Whether the dialog should close when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.closeOnNavigation = true;\n        // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n    }\n}\nif (false) {\n    /**\n     * Where the attached component should live in Angular's *logical* component tree.\n     * This affects what is available for injection and the change detection order for the\n     * component instantiated inside of the dialog. This does not affect where the dialog\n     * content will be rendered.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.viewContainerRef;\n    /**\n     * ID for the dialog. If omitted, a unique one will be generated.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.id;\n    /**\n     * The ARIA role of the dialog element.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.role;\n    /**\n     * Custom class for the overlay pane.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.panelClass;\n    /**\n     * Whether the dialog has a backdrop.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.hasBackdrop;\n    /**\n     * Custom class for the backdrop.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.backdropClass;\n    /**\n     * Whether the user can use escape or clicking on the backdrop to close the modal.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.disableClose;\n    /**\n     * Width of the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.width;\n    /**\n     * Height of the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.height;\n    /**\n     * Min-width of the dialog. If a number is provided, assumes pixel units.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.minWidth;\n    /**\n     * Min-height of the dialog. If a number is provided, assumes pixel units.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.minHeight;\n    /**\n     * Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.maxWidth;\n    /**\n     * Max-height of the dialog. If a number is provided, assumes pixel units.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.maxHeight;\n    /**\n     * Position overrides.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.position;\n    /**\n     * Data being injected into the child component.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.data;\n    /**\n     * Layout direction for the dialog's content.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.direction;\n    /**\n     * ID of the element that describes the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.ariaDescribedBy;\n    /**\n     * ID of the element that labels the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.ariaLabelledBy;\n    /**\n     * Aria label to assign to the dialog element.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.ariaLabel;\n    /**\n     * Whether the dialog should focus the first focusable element on open.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.autoFocus;\n    /**\n     * Whether the dialog should restore focus to the\n     * previously-focused element, after it's closed.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.restoreFocus;\n    /**\n     * Scroll strategy to be used for the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.scrollStrategy;\n    /**\n     * Whether the dialog should close when the user goes backwards/forwards in history.\n     * Note that this usually doesn't include clicking on links (unless the user is using\n     * the `HashLocationStrategy`).\n     * @type {?}\n     */\n    MatDialogConfig.prototype.closeOnNavigation;\n    /**\n     * Alternate `ComponentFactoryResolver` to use when resolving the associated component.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.componentFactoryResolver;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by MatDialog.\n * \\@docs-private\n * @type {?}\n */\nconst matDialogAnimations = {\n    /**\n     * Animation that is applied on the dialog container by defalt.\n     */\n    dialogContainer: trigger('dialogContainer', [\n        // Note: The `enter` animation transitions to `transform: none`, because for some reason\n        // specifying the transform explicitly, causes IE both to blur the dialog content and\n        // decimate the animation performance. Leaving it as `none` solves both issues.\n        state('void, exit', style({ opacity: 0, transform: 'scale(0.7)' })),\n        state('enter', style({ transform: 'none' })),\n        transition('* => enter', animate('150ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'none', opacity: 1 }))),\n        transition('* => void, * => exit', animate('75ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({ opacity: 0 }))),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Throws an exception for the case when a ComponentPortal is\n * attached to a DomPortalOutlet without an origin.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatDialogContentAlreadyAttachedError() {\n    throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Internal component that wraps user-provided dialog content.\n * Animation is based on https://material.io/guidelines/motion/choreography.html.\n * \\@docs-private\n */\nclass MatDialogContainer extends BasePortalOutlet {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     * @param {?} _changeDetectorRef\n     * @param {?} _document\n     * @param {?} _config\n     */\n    constructor(_elementRef, _focusTrapFactory, _changeDetectorRef, _document, _config) {\n        super();\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._config = _config;\n        /**\n         * Element that was focused before the dialog was opened. Save this to restore upon close.\n         */\n        this._elementFocusedBeforeDialogWasOpened = null;\n        /**\n         * State of the dialog animation.\n         */\n        this._state = 'enter';\n        /**\n         * Emits when an animation state changes.\n         */\n        this._animationStateChanged = new EventEmitter();\n        /**\n         * Attaches a DOM portal to the dialog container.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * \\@breaking-change 10.0.0\n         */\n        this.attachDomPortal = (/**\n         * @param {?} portal\n         * @return {?}\n         */\n        (portal) => {\n            if (this._portalOutlet.hasAttached()) {\n                throwMatDialogContentAlreadyAttachedError();\n            }\n            this._setupFocusTrap();\n            return this._portalOutlet.attachDomPortal(portal);\n        });\n        this._ariaLabelledBy = _config.ariaLabelledBy || null;\n        this._document = _document;\n    }\n    /**\n     * Attach a ComponentPortal as content to this dialog container.\n     * @template T\n     * @param {?} portal Portal to be attached as the dialog content.\n     * @return {?}\n     */\n    attachComponentPortal(portal) {\n        if (this._portalOutlet.hasAttached()) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        this._setupFocusTrap();\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /**\n     * Attach a TemplatePortal as content to this dialog container.\n     * @template C\n     * @param {?} portal Portal to be attached as the dialog content.\n     * @return {?}\n     */\n    attachTemplatePortal(portal) {\n        if (this._portalOutlet.hasAttached()) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        this._setupFocusTrap();\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /**\n     * Moves focus back into the dialog if it was moved out.\n     * @return {?}\n     */\n    _recaptureFocus() {\n        if (!this._containsFocus()) {\n            /** @type {?} */\n            const focusWasTrapped = this._focusTrap.focusInitialElement();\n            if (!focusWasTrapped) {\n                this._elementRef.nativeElement.focus();\n            }\n        }\n    }\n    /**\n     * Moves the focus inside the focus trap.\n     * @private\n     * @return {?}\n     */\n    _trapFocus() {\n        // If we were to attempt to focus immediately, then the content of the dialog would not yet be\n        // ready in instances where change detection has to run first. To deal with this, we simply\n        // wait for the microtask queue to be empty.\n        if (this._config.autoFocus) {\n            this._focusTrap.focusInitialElementWhenReady();\n        }\n        else if (!this._containsFocus()) {\n            // Otherwise ensure that focus is on the dialog container. It's possible that a different\n            // component tried to move focus while the open animation was running. See:\n            // https://github.com/angular/components/issues/16215. Note that we only want to do this\n            // if the focus isn't inside the dialog already, because it's possible that the consumer\n            // turned off `autoFocus` in order to move focus themselves.\n            this._elementRef.nativeElement.focus();\n        }\n    }\n    /**\n     * Restores focus to the element that was focused before the dialog opened.\n     * @private\n     * @return {?}\n     */\n    _restoreFocus() {\n        /** @type {?} */\n        const toFocus = this._elementFocusedBeforeDialogWasOpened;\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this._config.restoreFocus && toFocus && typeof toFocus.focus === 'function') {\n            /** @type {?} */\n            const activeElement = this._document.activeElement;\n            /** @type {?} */\n            const element = this._elementRef.nativeElement;\n            // Make sure that focus is still inside the dialog or is on the body (usually because a\n            // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n            // the consumer moved it themselves before the animation was done, in which case we shouldn't\n            // do anything.\n            if (!activeElement || activeElement === this._document.body || activeElement === element ||\n                element.contains(activeElement)) {\n                toFocus.focus();\n            }\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /**\n     * Sets up the focus trand and saves a reference to the\n     * element that was focused before the dialog was opened.\n     * @private\n     * @return {?}\n     */\n    _setupFocusTrap() {\n        if (!this._focusTrap) {\n            this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        }\n        if (this._document) {\n            this._elementFocusedBeforeDialogWasOpened = (/** @type {?} */ (this._document.activeElement));\n            // Note that there is no focus method when rendering on the server.\n            if (this._elementRef.nativeElement.focus) {\n                // Move focus onto the dialog immediately in order to prevent the user from accidentally\n                // opening multiple dialogs at the same time. Needs to be async, because the element\n                // may not be focusable immediately.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => this._elementRef.nativeElement.focus()));\n            }\n        }\n    }\n    /**\n     * Returns whether focus is inside the dialog.\n     * @private\n     * @return {?}\n     */\n    _containsFocus() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        const activeElement = this._document.activeElement;\n        return element === activeElement || element.contains(activeElement);\n    }\n    /**\n     * Callback, invoked whenever an animation on the host completes.\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationDone(event) {\n        if (event.toState === 'enter') {\n            this._trapFocus();\n        }\n        else if (event.toState === 'exit') {\n            this._restoreFocus();\n        }\n        this._animationStateChanged.emit(event);\n    }\n    /**\n     * Callback, invoked when an animation on the host starts.\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationStart(event) {\n        this._animationStateChanged.emit(event);\n    }\n    /**\n     * Starts the dialog exit animation.\n     * @return {?}\n     */\n    _startExitAnimation() {\n        this._state = 'exit';\n        // Mark the container for check so it can react if the\n        // view container is using OnPush change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n}\nMatDialogContainer.ɵfac = function MatDialogContainer_Factory(t) { return new (t || MatDialogContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MatDialogConfig)); };\nMatDialogContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDialogContainer, selectors: [[\"mat-dialog-container\"]], viewQuery: function MatDialogContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkPortalOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n    } }, hostAttrs: [\"tabindex\", \"-1\", \"aria-modal\", \"true\", 1, \"mat-dialog-container\"], hostVars: 6, hostBindings: function MatDialogContainer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@dialogContainer.start\", function MatDialogContainer_animation_dialogContainer_start_HostBindingHandler($event) { return ctx._onAnimationStart($event); })(\"@dialogContainer.done\", function MatDialogContainer_animation_dialogContainer_done_HostBindingHandler($event) { return ctx._onAnimationDone($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx._id)(\"role\", ctx._config.role)(\"aria-labelledby\", ctx._config.ariaLabel ? null : ctx._ariaLabelledBy)(\"aria-label\", ctx._config.ariaLabel)(\"aria-describedby\", ctx._config.ariaDescribedBy || null);\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@dialogContainer\", ctx._state);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkPortalOutlet\", \"\"]], template: function MatDialogContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatDialogContainer_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n    } }, directives: [ɵngcc2.CdkPortalOutlet], styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], encapsulation: 2, data: { animation: [matDialogAnimations.dialogContainer] } });\n/** @nocollapse */\nMatDialogContainer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDialogConfig }\n];\nMatDialogContainer.propDecorators = {\n    _portalOutlet: [{ type: ViewChild, args: [CdkPortalOutlet, { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-dialog-container',\n                template: \"<ng-template cdkPortalOutlet></ng-template>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // Using OnPush for dialogs caused some G3 sync issues. Disabled until we can track them down.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matDialogAnimations.dialogContainer],\n                host: {\n                    'class': 'mat-dialog-container',\n                    'tabindex': '-1',\n                    'aria-modal': 'true',\n                    '[attr.id]': '_id',\n                    '[attr.role]': '_config.role',\n                    '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledBy',\n                    '[attr.aria-label]': '_config.ariaLabel',\n                    '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                    '[@dialogContainer]': '_state',\n                    '(@dialogContainer.start)': '_onAnimationStart($event)',\n                    '(@dialogContainer.done)': '_onAnimationDone($event)'\n                },\n                styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusTrapFactory }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDialogConfig }]; }, { _portalOutlet: [{\n            type: ViewChild,\n            args: [CdkPortalOutlet, { static: true }]\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._document;\n    /**\n     * The portal outlet inside of this container into which the dialog content will be loaded.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._portalOutlet;\n    /**\n     * The class that traps and manages focus within the dialog.\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._focusTrap;\n    /**\n     * Element that was focused before the dialog was opened. Save this to restore upon close.\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._elementFocusedBeforeDialogWasOpened;\n    /**\n     * State of the dialog animation.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._state;\n    /**\n     * Emits when an animation state changes.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._animationStateChanged;\n    /**\n     * ID of the element that should be considered as the dialog's label.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._ariaLabelledBy;\n    /**\n     * ID for the container DOM element.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._id;\n    /**\n     * Attaches a DOM portal to the dialog container.\n     * \\@param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatDialogContainer.prototype.attachDomPortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._focusTrapFactory;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._changeDetectorRef;\n    /**\n     * The dialog configuration.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(jelbourn): resizing\n// Counter for unique dialog ids.\n/** @type {?} */\nlet uniqueId = 0;\n/** @enum {number} */\nconst MatDialogState = {\n    OPEN: 0, CLOSING: 1, CLOSED: 2,\n};\n/**\n * Reference to a dialog opened via the MatDialog service.\n * @template T, R\n */\nclass MatDialogRef {\n    /**\n     * @param {?} _overlayRef\n     * @param {?} _containerInstance\n     * @param {?=} id\n     */\n    constructor(_overlayRef, _containerInstance, id = `mat-dialog-${uniqueId++}`) {\n        this._overlayRef = _overlayRef;\n        this._containerInstance = _containerInstance;\n        this.id = id;\n        /**\n         * Whether the user is allowed to close the dialog.\n         */\n        this.disableClose = this._containerInstance._config.disableClose;\n        /**\n         * Subject for notifying the user that the dialog has finished opening.\n         */\n        this._afterOpened = new Subject();\n        /**\n         * Subject for notifying the user that the dialog has finished closing.\n         */\n        this._afterClosed = new Subject();\n        /**\n         * Subject for notifying the user that the dialog has started closing.\n         */\n        this._beforeClosed = new Subject();\n        /**\n         * Current state of the dialog.\n         */\n        this._state = 0 /* OPEN */;\n        // Pass the id along to the container.\n        _containerInstance._id = id;\n        // Emit when opening animation completes\n        _containerInstance._animationStateChanged.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.phaseName === 'done' && event.toState === 'enter')), take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        }));\n        // Dispose overlay when closing animation is complete\n        _containerInstance._animationStateChanged.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.phaseName === 'done' && event.toState === 'exit')), take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            clearTimeout(this._closeFallbackTimeout);\n            this._finishDialogClose();\n        }));\n        _overlayRef.detachments().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._beforeClosed.next(this._result);\n            this._beforeClosed.complete();\n            this._afterClosed.next(this._result);\n            this._afterClosed.complete();\n            this.componentInstance = (/** @type {?} */ (null));\n            this._overlayRef.dispose();\n        }));\n        _overlayRef.keydownEvents()\n            .pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n        })))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.preventDefault();\n            this.close();\n        }));\n        _overlayRef.backdropClick().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.disableClose) {\n                this._containerInstance._recaptureFocus();\n            }\n            else {\n                this.close();\n            }\n        }));\n    }\n    /**\n     * Close the dialog.\n     * @param {?=} dialogResult Optional result to return to the dialog opener.\n     * @return {?}\n     */\n    close(dialogResult) {\n        this._result = dialogResult;\n        // Transition the backdrop in parallel to the dialog.\n        this._containerInstance._animationStateChanged.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.phaseName === 'start')), take(1))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this._beforeClosed.next(dialogResult);\n            this._beforeClosed.complete();\n            this._overlayRef.detachBackdrop();\n            // The logic that disposes of the overlay depends on the exit animation completing, however\n            // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n            // timeout which will clean everything up if the animation hasn't fired within the specified\n            // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n            // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n            this._closeFallbackTimeout = setTimeout((/**\n             * @return {?}\n             */\n            () => this._finishDialogClose()), event.totalTime + 100);\n        }));\n        this._containerInstance._startExitAnimation();\n        this._state = 1 /* CLOSING */;\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished opening.\n     * @return {?}\n     */\n    afterOpened() {\n        return this._afterOpened.asObservable();\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished closing.\n     * @return {?}\n     */\n    afterClosed() {\n        return this._afterClosed.asObservable();\n    }\n    /**\n     * Gets an observable that is notified when the dialog has started closing.\n     * @return {?}\n     */\n    beforeClosed() {\n        return this._beforeClosed.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     * @return {?}\n     */\n    backdropClick() {\n        return this._overlayRef.backdropClick();\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     * @return {?}\n     */\n    keydownEvents() {\n        return this._overlayRef.keydownEvents();\n    }\n    /**\n     * Updates the dialog's position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} position New dialog position.\n     * @return {THIS}\n     */\n    updatePosition(position) {\n        /** @type {?} */\n        let strategy = (/** @type {?} */ (this))._getPositionStrategy();\n        if (position && (position.left || position.right)) {\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\n        }\n        else {\n            strategy.centerHorizontally();\n        }\n        if (position && (position.top || position.bottom)) {\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n        }\n        else {\n            strategy.centerVertically();\n        }\n        (/** @type {?} */ (this))._overlayRef.updatePosition();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} width New width of the dialog.\n     * @param {?=} height New height of the dialog.\n     * @return {THIS}\n     */\n    updateSize(width = '', height = '') {\n        (/** @type {?} */ (this))._getPositionStrategy().width(width).height(height);\n        (/** @type {?} */ (this))._overlayRef.updatePosition();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Add a CSS class or an array of classes to the overlay pane.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} classes\n     * @return {THIS}\n     */\n    addPanelClass(classes) {\n        (/** @type {?} */ (this))._overlayRef.addPanelClass(classes);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Remove a CSS class or an array of classes from the overlay pane.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} classes\n     * @return {THIS}\n     */\n    removePanelClass(classes) {\n        (/** @type {?} */ (this))._overlayRef.removePanelClass(classes);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Gets the current state of the dialog's lifecycle.\n     * @return {?}\n     */\n    getState() {\n        return this._state;\n    }\n    /**\n     * Finishes the dialog close by updating the state of the dialog\n     * and disposing the overlay.\n     * @private\n     * @return {?}\n     */\n    _finishDialogClose() {\n        this._state = 2 /* CLOSED */;\n        this._overlayRef.dispose();\n    }\n    /**\n     * Fetches the position strategy object from the overlay ref.\n     * @private\n     * @return {?}\n     */\n    _getPositionStrategy() {\n        return (/** @type {?} */ (this._overlayRef.getConfig().positionStrategy));\n    }\n}\nif (false) {\n    /**\n     * The instance of component opened into the dialog.\n     * @type {?}\n     */\n    MatDialogRef.prototype.componentInstance;\n    /**\n     * Whether the user is allowed to close the dialog.\n     * @type {?}\n     */\n    MatDialogRef.prototype.disableClose;\n    /**\n     * Subject for notifying the user that the dialog has finished opening.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._afterOpened;\n    /**\n     * Subject for notifying the user that the dialog has finished closing.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._afterClosed;\n    /**\n     * Subject for notifying the user that the dialog has started closing.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._beforeClosed;\n    /**\n     * Result to be passed to afterClosed.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._result;\n    /**\n     * Handle to the timeout that's running as a fallback in case the exit animation doesn't fire.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._closeFallbackTimeout;\n    /**\n     * Current state of the dialog.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._state;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._overlayRef;\n    /** @type {?} */\n    MatDialogRef.prototype._containerInstance;\n    /** @type {?} */\n    MatDialogRef.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to access the data that was passed in to a dialog.\n * @type {?}\n */\nconst MAT_DIALOG_DATA = new InjectionToken('MatDialogData');\n/**\n * Injection token that can be used to specify default dialog options.\n * @type {?}\n */\nconst MAT_DIALOG_DEFAULT_OPTIONS = new InjectionToken('mat-dialog-default-options');\n/**\n * Injection token that determines the scroll handling while the dialog is open.\n * @type {?}\n */\nconst MAT_DIALOG_SCROLL_STRATEGY = new InjectionToken('mat-dialog-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_DIALOG_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.block());\n}\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.block());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Service to open Material Design modal dialogs.\n */\nclass MatDialog {\n    /**\n     * @param {?} _overlay\n     * @param {?} _injector\n     * @param {?} _location\n     * @param {?} _defaultOptions\n     * @param {?} scrollStrategy\n     * @param {?} _parentDialog\n     * @param {?} _overlayContainer\n     */\n    constructor(_overlay, _injector, \n    /**\n     * @deprecated `_location` parameter to be removed.\n     * @breaking-change 10.0.0\n     */\n    _location, _defaultOptions, scrollStrategy, _parentDialog, _overlayContainer) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._defaultOptions = _defaultOptions;\n        this._parentDialog = _parentDialog;\n        this._overlayContainer = _overlayContainer;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new Subject();\n        this._afterOpenedAtThisLevel = new Subject();\n        this._ariaHiddenElements = new Map();\n        // TODO (jelbourn): tighten the typing right-hand side of this expression.\n        /**\n         * Stream that emits when all open dialog have finished closing.\n         * Will emit on subscribe if there are no open dialogs to begin with.\n         */\n        this.afterAllClosed = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => this.openDialogs.length ?\n            this._afterAllClosed :\n            this._afterAllClosed.pipe(startWith(undefined))))));\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * Keeps track of the currently-open dialogs.\n     * @return {?}\n     */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /**\n     * Stream that emits when a dialog has been opened.\n     * @return {?}\n     */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    /**\n     * @return {?}\n     */\n    get _afterAllClosed() {\n        /** @type {?} */\n        const parent = this._parentDialog;\n        return parent ? parent._afterAllClosed : this._afterAllClosedAtThisLevel;\n    }\n    /**\n     * Opens a modal dialog containing the given component.\n     * @template T, D, R\n     * @param {?} componentOrTemplateRef Type of the component to load into the dialog,\n     *     or a TemplateRef to instantiate as the dialog content.\n     * @param {?=} config Extra configuration options.\n     * @return {?} Reference to the newly-opened dialog.\n     */\n    open(componentOrTemplateRef, config) {\n        config = _applyConfigDefaults(config, this._defaultOptions || new MatDialogConfig());\n        if (config.id && this.getDialogById(config.id)) {\n            throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n        }\n        /** @type {?} */\n        const overlayRef = this._createOverlay(config);\n        /** @type {?} */\n        const dialogContainer = this._attachDialogContainer(overlayRef, config);\n        /** @type {?} */\n        const dialogRef = this._attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config);\n        // If this is the first dialog that we're opening, hide all the non-overlay content.\n        if (!this.openDialogs.length) {\n            this._hideNonDialogContentFromAssistiveTechnology();\n        }\n        this.openDialogs.push(dialogRef);\n        dialogRef.afterClosed().subscribe((/**\n         * @return {?}\n         */\n        () => this._removeOpenDialog(dialogRef)));\n        this.afterOpened.next(dialogRef);\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     * @return {?}\n     */\n    closeAll() {\n        this._closeDialogs(this.openDialogs);\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param {?} id ID to use when looking up the dialog.\n     * @return {?}\n     */\n    getDialogById(id) {\n        return this.openDialogs.find((/**\n         * @param {?} dialog\n         * @return {?}\n         */\n        dialog => dialog.id === id));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // Only close the dialogs at this level on destroy\n        // since the parent service may still be active.\n        this._closeDialogs(this._openDialogsAtThisLevel);\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n    }\n    /**\n     * Creates the overlay into which the dialog will be loaded.\n     * @private\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to the OverlayRef for the created overlay.\n     */\n    _createOverlay(config) {\n        /** @type {?} */\n        const overlayConfig = this._getOverlayConfig(config);\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an overlay config from a dialog config.\n     * @private\n     * @param {?} dialogConfig The dialog configuration.\n     * @return {?} The overlay configuration.\n     */\n    _getOverlayConfig(dialogConfig) {\n        /** @type {?} */\n        const state = new OverlayConfig({\n            positionStrategy: this._overlay.position().global(),\n            scrollStrategy: dialogConfig.scrollStrategy || this._scrollStrategy(),\n            panelClass: dialogConfig.panelClass,\n            hasBackdrop: dialogConfig.hasBackdrop,\n            direction: dialogConfig.direction,\n            minWidth: dialogConfig.minWidth,\n            minHeight: dialogConfig.minHeight,\n            maxWidth: dialogConfig.maxWidth,\n            maxHeight: dialogConfig.maxHeight,\n            disposeOnNavigation: dialogConfig.closeOnNavigation\n        });\n        if (dialogConfig.backdropClass) {\n            state.backdropClass = dialogConfig.backdropClass;\n        }\n        return state;\n    }\n    /**\n     * Attaches an MatDialogContainer to a dialog's already-created overlay.\n     * @private\n     * @param {?} overlay Reference to the dialog's underlying overlay.\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to a ComponentRef for the attached container.\n     */\n    _attachDialogContainer(overlay, config) {\n        /** @type {?} */\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        /** @type {?} */\n        const injector = Injector.create({\n            parent: userInjector || this._injector,\n            providers: [{ provide: MatDialogConfig, useValue: config }]\n        });\n        /** @type {?} */\n        const containerPortal = new ComponentPortal(MatDialogContainer, config.viewContainerRef, injector, config.componentFactoryResolver);\n        /** @type {?} */\n        const containerRef = overlay.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Attaches the user-provided component to the already-created MatDialogContainer.\n     * @private\n     * @template T, R\n     * @param {?} componentOrTemplateRef The type of component being loaded into the dialog,\n     *     or a TemplateRef to instantiate as the content.\n     * @param {?} dialogContainer Reference to the wrapping MatDialogContainer.\n     * @param {?} overlayRef Reference to the overlay in which the dialog resides.\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to the MatDialogRef that should be returned to the user.\n     */\n    _attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config) {\n        // Create a reference to the dialog we're creating in order to give the user a handle\n        // to modify and close it.\n        /** @type {?} */\n        const dialogRef = new MatDialogRef(overlayRef, dialogContainer, config.id);\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, (/** @type {?} */ (null)), (/** @type {?} */ ({ $implicit: config.data, dialogRef }))));\n        }\n        else {\n            /** @type {?} */\n            const injector = this._createInjector(config, dialogRef, dialogContainer);\n            /** @type {?} */\n            const contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector));\n            dialogRef.componentInstance = contentRef.instance;\n        }\n        dialogRef\n            .updateSize(config.width, config.height)\n            .updatePosition(config.position);\n        return dialogRef;\n    }\n    /**\n     * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n     * of a dialog to close itself and, optionally, to return a value.\n     * @private\n     * @template T\n     * @param {?} config Config object that is used to construct the dialog.\n     * @param {?} dialogRef Reference to the dialog.\n     * @param {?} dialogContainer\n     * @return {?} The custom injector that can be used inside the dialog.\n     */\n    _createInjector(config, dialogRef, dialogContainer) {\n        /** @type {?} */\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        // The MatDialogContainer is injected in the portal as the MatDialogContainer and the dialog's\n        // content are created out of the same ViewContainerRef and as such, are siblings for injector\n        // purposes. To allow the hierarchy that is expected, the MatDialogContainer is explicitly\n        // added to the injection tokens.\n        /** @type {?} */\n        const providers = [\n            { provide: MatDialogContainer, useValue: dialogContainer },\n            { provide: MAT_DIALOG_DATA, useValue: config.data },\n            { provide: MatDialogRef, useValue: dialogRef }\n        ];\n        if (config.direction &&\n            (!userInjector || !userInjector.get(Directionality, null))) {\n            providers.push({\n                provide: Directionality,\n                useValue: { value: config.direction, change: of() }\n            });\n        }\n        return Injector.create({ parent: userInjector || this._injector, providers });\n    }\n    /**\n     * Removes a dialog from the array of open dialogs.\n     * @private\n     * @param {?} dialogRef Dialog to be removed.\n     * @return {?}\n     */\n    _removeOpenDialog(dialogRef) {\n        /** @type {?} */\n        const index = this.openDialogs.indexOf(dialogRef);\n        if (index > -1) {\n            this.openDialogs.splice(index, 1);\n            // If all the dialogs were closed, remove/restore the `aria-hidden`\n            // to a the siblings and emit to the `afterAllClosed` stream.\n            if (!this.openDialogs.length) {\n                this._ariaHiddenElements.forEach((/**\n                 * @param {?} previousValue\n                 * @param {?} element\n                 * @return {?}\n                 */\n                (previousValue, element) => {\n                    if (previousValue) {\n                        element.setAttribute('aria-hidden', previousValue);\n                    }\n                    else {\n                        element.removeAttribute('aria-hidden');\n                    }\n                }));\n                this._ariaHiddenElements.clear();\n                this._afterAllClosed.next();\n            }\n        }\n    }\n    /**\n     * Hides all of the content that isn't an overlay from assistive technology.\n     * @private\n     * @return {?}\n     */\n    _hideNonDialogContentFromAssistiveTechnology() {\n        /** @type {?} */\n        const overlayContainer = this._overlayContainer.getContainerElement();\n        // Ensure that the overlay container is attached to the DOM.\n        if (overlayContainer.parentElement) {\n            /** @type {?} */\n            const siblings = overlayContainer.parentElement.children;\n            for (let i = siblings.length - 1; i > -1; i--) {\n                /** @type {?} */\n                let sibling = siblings[i];\n                if (sibling !== overlayContainer &&\n                    sibling.nodeName !== 'SCRIPT' &&\n                    sibling.nodeName !== 'STYLE' &&\n                    !sibling.hasAttribute('aria-live')) {\n                    this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            }\n        }\n    }\n    /**\n     * Closes all of the dialogs in an array.\n     * @private\n     * @param {?} dialogs\n     * @return {?}\n     */\n    _closeDialogs(dialogs) {\n        /** @type {?} */\n        let i = dialogs.length;\n        while (i--) {\n            // The `_openDialogs` property isn't updated after close until the rxjs subscription\n            // runs on the next microtask, in addition to modifying the array as we're going\n            // through it. We loop through all of them and call close without assuming that\n            // they'll be removed from the list instantaneously.\n            dialogs[i].close();\n        }\n    }\n}\nMatDialog.ɵfac = function MatDialog_Factory(t) { return new (t || MatDialog)(ɵngcc0.ɵɵinject(ɵngcc3.Overlay), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc4.Location, 8), ɵngcc0.ɵɵinject(MAT_DIALOG_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵinject(MAT_DIALOG_SCROLL_STRATEGY), ɵngcc0.ɵɵinject(MatDialog, 12), ɵngcc0.ɵɵinject(ɵngcc3.OverlayContainer)); };\nMatDialog.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: MatDialog, factory: MatDialog.ɵfac });\n/** @nocollapse */\nMatDialog.ctorParameters = () => [\n    { type: Overlay },\n    { type: Injector },\n    { type: Location, decorators: [{ type: Optional }] },\n    { type: MatDialogConfig, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DIALOG_DEFAULT_OPTIONS,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_SCROLL_STRATEGY,] }] },\n    { type: MatDialog, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: OverlayContainer }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialog, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc3.Overlay }, { type: ɵngcc0.Injector }, { type: ɵngcc4.Location, decorators: [{\n                type: Optional\n            }] }, { type: MatDialogConfig, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DIALOG_DEFAULT_OPTIONS]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DIALOG_SCROLL_STRATEGY]\n            }] }, { type: MatDialog, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc3.OverlayContainer }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._openDialogsAtThisLevel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._afterAllClosedAtThisLevel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._afterOpenedAtThisLevel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._ariaHiddenElements;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._scrollStrategy;\n    /**\n     * Stream that emits when all open dialog have finished closing.\n     * Will emit on subscribe if there are no open dialogs to begin with.\n     * @type {?}\n     */\n    MatDialog.prototype.afterAllClosed;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._injector;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._defaultOptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._parentDialog;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._overlayContainer;\n}\n/**\n * Applies default options to the dialog config.\n * @param {?=} config Config to be modified.\n * @param {?=} defaultOptions Default options provided.\n * @return {?} The new configuration object.\n */\nfunction _applyConfigDefaults(config, defaultOptions) {\n    return Object.assign(Object.assign({}, defaultOptions), config);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-content-directives.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter used to generate unique IDs for dialog elements.\n * @type {?}\n */\nlet dialogElementUid = 0;\n/**\n * Button that will close the current dialog.\n */\nclass MatDialogClose {\n    /**\n     * @param {?} dialogRef\n     * @param {?} _elementRef\n     * @param {?} _dialog\n     */\n    constructor(dialogRef, _elementRef, _dialog) {\n        this.dialogRef = dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /**\n         * Default to \"button\" to prevents accidental form submits.\n         */\n        this.type = 'button';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this.dialogRef) {\n            // When this directive is included in a dialog via TemplateRef (rather than being\n            // in a Component), the DialogRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the DialogRef by\n            // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n            // be resolved at constructor time.\n            this.dialogRef = (/** @type {?} */ (getClosestDialog(this._elementRef, this._dialog.openDialogs)));\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n        if (proxiedChange) {\n            this.dialogResult = proxiedChange.currentValue;\n        }\n    }\n}\nMatDialogClose.ɵfac = function MatDialogClose_Factory(t) { return new (t || MatDialogClose)(ɵngcc0.ɵɵdirectiveInject(MatDialogRef, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatDialog)); };\nMatDialogClose.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogClose, selectors: [[\"\", \"mat-dialog-close\", \"\"], [\"\", \"matDialogClose\", \"\"]], hostVars: 2, hostBindings: function MatDialogClose_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatDialogClose_click_HostBindingHandler() { return ctx.dialogRef.close(ctx.dialogResult); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.ariaLabel || null)(\"type\", ctx.type);\n    } }, inputs: { type: \"type\", dialogResult: [\"mat-dialog-close\", \"dialogResult\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], _matDialogClose: [\"matDialogClose\", \"_matDialogClose\"] }, exportAs: [\"matDialogClose\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatDialogClose.ctorParameters = () => [\n    { type: MatDialogRef, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: MatDialog }\n];\nMatDialogClose.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    type: [{ type: Input }],\n    dialogResult: [{ type: Input, args: ['mat-dialog-close',] }],\n    _matDialogClose: [{ type: Input, args: ['matDialogClose',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogClose, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-dialog-close], [matDialogClose]',\n                exportAs: 'matDialogClose',\n                host: {\n                    '(click)': 'dialogRef.close(dialogResult)',\n                    '[attr.aria-label]': 'ariaLabel || null',\n                    '[attr.type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: MatDialogRef, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: MatDialog }]; }, { type: [{\n            type: Input\n        }], dialogResult: [{\n            type: Input,\n            args: ['mat-dialog-close']\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], _matDialogClose: [{\n            type: Input,\n            args: ['matDialogClose']\n        }] }); })();\nif (false) {\n    /**\n     * Screenreader label for the button.\n     * @type {?}\n     */\n    MatDialogClose.prototype.ariaLabel;\n    /**\n     * Default to \"button\" to prevents accidental form submits.\n     * @type {?}\n     */\n    MatDialogClose.prototype.type;\n    /**\n     * Dialog close input.\n     * @type {?}\n     */\n    MatDialogClose.prototype.dialogResult;\n    /** @type {?} */\n    MatDialogClose.prototype._matDialogClose;\n    /** @type {?} */\n    MatDialogClose.prototype.dialogRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogClose.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogClose.prototype._dialog;\n}\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nclass MatDialogTitle {\n    /**\n     * @param {?} _dialogRef\n     * @param {?} _elementRef\n     * @param {?} _dialog\n     */\n    constructor(_dialogRef, _elementRef, _dialog) {\n        this._dialogRef = _dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        this.id = `mat-dialog-title-${dialogElementUid++}`;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this._dialogRef) {\n            this._dialogRef = (/** @type {?} */ (getClosestDialog(this._elementRef, this._dialog.openDialogs)));\n        }\n        if (this._dialogRef) {\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const container = this._dialogRef._containerInstance;\n                if (container && !container._ariaLabelledBy) {\n                    container._ariaLabelledBy = this.id;\n                }\n            }));\n        }\n    }\n}\nMatDialogTitle.ɵfac = function MatDialogTitle_Factory(t) { return new (t || MatDialogTitle)(ɵngcc0.ɵɵdirectiveInject(MatDialogRef, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatDialog)); };\nMatDialogTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogTitle, selectors: [[\"\", \"mat-dialog-title\", \"\"], [\"\", \"matDialogTitle\", \"\"]], hostAttrs: [1, \"mat-dialog-title\"], hostVars: 1, hostBindings: function MatDialogTitle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" }, exportAs: [\"matDialogTitle\"] });\n/** @nocollapse */\nMatDialogTitle.ctorParameters = () => [\n    { type: MatDialogRef, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: MatDialog }\n];\nMatDialogTitle.propDecorators = {\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogTitle, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-dialog-title], [matDialogTitle]',\n                exportAs: 'matDialogTitle',\n                host: {\n                    'class': 'mat-dialog-title',\n                    '[id]': 'id'\n                }\n            }]\n    }], function () { return [{ type: MatDialogRef, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: MatDialog }]; }, { id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDialogTitle.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogTitle.prototype._dialogRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogTitle.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogTitle.prototype._dialog;\n}\n/**\n * Scrollable content container of a dialog.\n */\nclass MatDialogContent {\n}\nMatDialogContent.ɵfac = function MatDialogContent_Factory(t) { return new (t || MatDialogContent)(); };\nMatDialogContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogContent, selectors: [[\"\", \"mat-dialog-content\", \"\"], [\"mat-dialog-content\"], [\"\", \"matDialogContent\", \"\"]], hostAttrs: [1, \"mat-dialog-content\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogContent, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\n                host: { 'class': 'mat-dialog-content' }\n            }]\n    }], null, null); })();\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nclass MatDialogActions {\n}\nMatDialogActions.ɵfac = function MatDialogActions_Factory(t) { return new (t || MatDialogActions)(); };\nMatDialogActions.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogActions, selectors: [[\"\", \"mat-dialog-actions\", \"\"], [\"mat-dialog-actions\"], [\"\", \"matDialogActions\", \"\"]], hostAttrs: [1, \"mat-dialog-actions\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogActions, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\n                host: { 'class': 'mat-dialog-actions' }\n            }]\n    }], null, null); })();\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param {?} element Element relative to which to look for a dialog.\n * @param {?} openDialogs References to the currently-open dialogs.\n * @return {?}\n */\nfunction getClosestDialog(element, openDialogs) {\n    /** @type {?} */\n    let parent = element.nativeElement.parentElement;\n    while (parent && !parent.classList.contains('mat-dialog-container')) {\n        parent = parent.parentElement;\n    }\n    return parent ? openDialogs.find((/**\n     * @param {?} dialog\n     * @return {?}\n     */\n    dialog => dialog.id === (/** @type {?} */ (parent)).id)) : null;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDialogModule {\n}\nMatDialogModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatDialogModule });\nMatDialogModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatDialogModule_Factory(t) { return new (t || MatDialogModule)(); }, providers: [\n        MatDialog,\n        MAT_DIALOG_SCROLL_STRATEGY_PROVIDER,\n    ], imports: [[\n            OverlayModule,\n            PortalModule,\n            MatCommonModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDialogModule, { declarations: function () { return [MatDialogContainer,\n        MatDialogClose,\n        MatDialogTitle,\n        MatDialogActions,\n        MatDialogContent]; }, imports: function () { return [OverlayModule,\n        PortalModule,\n        MatCommonModule]; }, exports: function () { return [MatDialogContainer,\n        MatDialogClose,\n        MatDialogTitle,\n        MatDialogContent,\n        MatDialogActions,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    OverlayModule,\n                    PortalModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    MatDialogContainer,\n                    MatDialogClose,\n                    MatDialogTitle,\n                    MatDialogContent,\n                    MatDialogActions,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatDialogContainer,\n                    MatDialogClose,\n                    MatDialogTitle,\n                    MatDialogActions,\n                    MatDialogContent,\n                ],\n                providers: [\n                    MatDialog,\n                    MAT_DIALOG_SCROLL_STRATEGY_PROVIDER,\n                ],\n                entryComponents: [MatDialogContainer]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS, MAT_DIALOG_SCROLL_STRATEGY, MAT_DIALOG_SCROLL_STRATEGY_FACTORY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, MatDialog, MatDialogActions, MatDialogClose, MatDialogConfig, MatDialogContainer, MatDialogContent, MatDialogModule, MatDialogRef, MatDialogTitle, matDialogAnimations, throwMatDialogContentAlreadyAttachedError };\n\n//# sourceMappingURL=dialog.js.map","import { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { _getShadowRoot, Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-spinner/progress-spinner.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base reference size of the spinner.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/common';\n\nfunction MatProgressSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r0.diameter)(\"stroke-dashoffset\", ctx_r0._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r0._strokeCircumference, \"px\")(\"stroke-width\", ctx_r0._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r0._circleRadius);\n} }\nfunction MatProgressSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r1._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r1._strokeCircumference, \"px\")(\"stroke-width\", ctx_r1._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r1._circleRadius);\n} }\nfunction MatSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r0.diameter)(\"stroke-dashoffset\", ctx_r0._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r0._strokeCircumference, \"px\")(\"stroke-width\", ctx_r0._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r0._circleRadius);\n} }\nfunction MatSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r1._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r1._strokeCircumference, \"px\")(\"stroke-width\", ctx_r1._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r1._circleRadius);\n} }\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n * \\@docs-private\n * @type {?}\n */\nconst BASE_STROKE_WIDTH = 10;\n// Boilerplate for applying mixins to MatProgressSpinner.\n/**\n * \\@docs-private\n */\nclass MatProgressSpinnerBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatProgressSpinnerBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatProgressSpinnerMixinBase = mixinColor(MatProgressSpinnerBase, 'primary');\n/**\n * Default `mat-progress-spinner` options that can be overridden.\n * @record\n */\nfunction MatProgressSpinnerDefaultOptions() { }\nif (false) {\n    /**\n     * Diameter of the spinner.\n     * @type {?|undefined}\n     */\n    MatProgressSpinnerDefaultOptions.prototype.diameter;\n    /**\n     * Width of the spinner's stroke.\n     * @type {?|undefined}\n     */\n    MatProgressSpinnerDefaultOptions.prototype.strokeWidth;\n    /**\n     * Whether the animations should be force to be enabled, ignoring if the current environment is\n     * using NoopAnimationsModule.\n     * @type {?|undefined}\n     */\n    MatProgressSpinnerDefaultOptions.prototype._forceAnimations;\n}\n/**\n * Injection token to be used to override the default options for `mat-progress-spinner`.\n * @type {?}\n */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n// .0001 percentage difference is necessary in order to avoid unwanted animation frames\n// for example because the animation duration is 4 seconds, .1% accounts to 4ms\n// which are enough to see the flicker described in\n// https://github.com/angular/components/issues/8984\n/** @type {?} */\nconst INDETERMINATE_ANIMATION_TEMPLATE = `\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n    12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n\n    25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n    37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n\n    50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n    62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n\n    75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n    87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n  }\n`;\n/**\n * `<mat-progress-spinner>` component.\n */\nclass MatProgressSpinner extends _MatProgressSpinnerMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} platform\n     * @param {?} _document\n     * @param {?} animationMode\n     * @param {?=} defaults\n     */\n    constructor(_elementRef, platform, _document, animationMode, defaults) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._document = _document;\n        this._diameter = BASE_SIZE;\n        this._value = 0;\n        this._fallbackAnimation = false;\n        /**\n         * Mode of the progress circle\n         */\n        this.mode = 'determinate';\n        /** @type {?} */\n        const trackedDiameters = MatProgressSpinner._diameters;\n        // The base size is already inserted via the component's structural styles. We still\n        // need to track it so we don't end up adding the same styles again.\n        if (!trackedDiameters.has(_document.head)) {\n            trackedDiameters.set(_document.head, new Set([BASE_SIZE]));\n        }\n        this._fallbackAnimation = platform.EDGE || platform.TRIDENT;\n        this._noopAnimations = animationMode === 'NoopAnimations' &&\n            (!!defaults && !defaults._forceAnimations);\n        if (defaults) {\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n    }\n    /**\n     * The diameter of the progress spinner (will set width and height of svg).\n     * @return {?}\n     */\n    get diameter() { return this._diameter; }\n    /**\n     * @param {?} size\n     * @return {?}\n     */\n    set diameter(size) {\n        this._diameter = coerceNumberProperty(size);\n        // If this is set before `ngOnInit`, the style root may not have been resolved yet.\n        if (!this._fallbackAnimation && this._styleRoot) {\n            this._attachStyleNode();\n        }\n    }\n    /**\n     * Stroke width of the progress spinner.\n     * @return {?}\n     */\n    get strokeWidth() {\n        return this._strokeWidth || this.diameter / 10;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set strokeWidth(value) {\n        this._strokeWidth = coerceNumberProperty(value);\n    }\n    /**\n     * Value of the progress circle.\n     * @return {?}\n     */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        this._value = Math.max(0, Math.min(100, coerceNumberProperty(newValue)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        // Note that we need to look up the root node in ngOnInit, rather than the constructor, because\n        // Angular seems to create the element outside the shadow root and then moves it inside, if the\n        // node is inside an `ngIf` and a ShadowDom-encapsulated component.\n        this._styleRoot = _getShadowRoot(element) || this._document.head;\n        this._attachStyleNode();\n        // On IE and Edge, we can't animate the `stroke-dashoffset`\n        // reliably so we fall back to a non-spec animation.\n        /** @type {?} */\n        const animationClass = `mat-progress-spinner-indeterminate${this._fallbackAnimation ? '-fallback' : ''}-animation`;\n        element.classList.add(animationClass);\n    }\n    /**\n     * The radius of the spinner, adjusted for stroke width.\n     * @return {?}\n     */\n    get _circleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /**\n     * The view box of the spinner's svg element.\n     * @return {?}\n     */\n    get _viewBox() {\n        /** @type {?} */\n        const viewBox = this._circleRadius * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /**\n     * The stroke circumference of the svg circle.\n     * @return {?}\n     */\n    get _strokeCircumference() {\n        return 2 * Math.PI * this._circleRadius;\n    }\n    /**\n     * The dash offset of the svg circle.\n     * @return {?}\n     */\n    get _strokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return this._strokeCircumference * (100 - this._value) / 100;\n        }\n        // In fallback mode set the circle to 80% and rotate it with CSS.\n        if (this._fallbackAnimation && this.mode === 'indeterminate') {\n            return this._strokeCircumference * 0.2;\n        }\n        return null;\n    }\n    /**\n     * Stroke width of the circle in percent.\n     * @return {?}\n     */\n    get _circleStrokeWidth() {\n        return this.strokeWidth / this.diameter * 100;\n    }\n    /**\n     * Dynamically generates a style tag containing the correct animation for this diameter.\n     * @private\n     * @return {?}\n     */\n    _attachStyleNode() {\n        /** @type {?} */\n        const styleRoot = this._styleRoot;\n        /** @type {?} */\n        const currentDiameter = this._diameter;\n        /** @type {?} */\n        const diameters = MatProgressSpinner._diameters;\n        /** @type {?} */\n        let diametersForElement = diameters.get(styleRoot);\n        if (!diametersForElement || !diametersForElement.has(currentDiameter)) {\n            /** @type {?} */\n            const styleTag = this._document.createElement('style');\n            styleTag.setAttribute('mat-spinner-animation', currentDiameter + '');\n            styleTag.textContent = this._getAnimationText();\n            styleRoot.appendChild(styleTag);\n            if (!diametersForElement) {\n                diametersForElement = new Set();\n                diameters.set(styleRoot, diametersForElement);\n            }\n            diametersForElement.add(currentDiameter);\n        }\n    }\n    /**\n     * Generates animation styles adjusted for the spinner's diameter.\n     * @private\n     * @return {?}\n     */\n    _getAnimationText() {\n        return INDETERMINATE_ANIMATION_TEMPLATE\n            // Animation should begin at 5% and end at 80%\n            .replace(/START_VALUE/g, `${0.95 * this._strokeCircumference}`)\n            .replace(/END_VALUE/g, `${0.2 * this._strokeCircumference}`)\n            .replace(/DIAMETER/g, `${this.diameter}`);\n    }\n}\nMatProgressSpinner.ɵfac = function MatProgressSpinner_Factory(t) { return new (t || MatProgressSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatProgressSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatProgressSpinner, selectors: [[\"mat-progress-spinner\"]], hostAttrs: [\"role\", \"progressbar\", 1, \"mat-progress-spinner\"], hostVars: 10, hostBindings: function MatProgressSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuemin\", ctx.mode === \"determinate\" ? 0 : null)(\"aria-valuemax\", ctx.mode === \"determinate\" ? 100 : null)(\"aria-valuenow\", ctx.mode === \"determinate\" ? ctx.value : null)(\"mode\", ctx.mode);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\", mode: \"mode\", diameter: \"diameter\", strokeWidth: \"strokeWidth\", value: \"value\" }, exportAs: [\"matProgressSpinner\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatProgressSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatProgressSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatProgressSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._viewBox);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/**\n * Tracks diameters of existing instances to de-dupe generated styles (default d = 100).\n * We need to keep track of which elements the diameters were attached to, because for\n * elements in the Shadow DOM the style tags are attached to the shadow root, rather\n * than the document head.\n */\nMatProgressSpinner._diameters = new WeakMap();\n/** @nocollapse */\nMatProgressSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\nMatProgressSpinner.propDecorators = {\n    diameter: [{ type: Input }],\n    strokeWidth: [{ type: Input }],\n    mode: [{ type: Input }],\n    value: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-progress-spinner',\n                exportAs: 'matProgressSpinner',\n                host: {\n                    'role': 'progressbar',\n                    'class': 'mat-progress-spinner',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter',\n                    '[attr.aria-valuemin]': 'mode === \"determinate\" ? 0 : null',\n                    '[attr.aria-valuemax]': 'mode === \"determinate\" ? 100 : null',\n                    '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                    '[attr.mode]': 'mode'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_viewBox\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + diameter\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, { mode: [{\n            type: Input\n        }], diameter: [{\n            type: Input\n        }], strokeWidth: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Tracks diameters of existing instances to de-dupe generated styles (default d = 100).\n     * We need to keep track of which elements the diameters were attached to, because for\n     * elements in the Shadow DOM the style tags are attached to the shadow root, rather\n     * than the document head.\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner._diameters;\n    /** @type {?} */\n    MatProgressSpinner.ngAcceptInputType_diameter;\n    /** @type {?} */\n    MatProgressSpinner.ngAcceptInputType_strokeWidth;\n    /** @type {?} */\n    MatProgressSpinner.ngAcceptInputType_value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._diameter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._strokeWidth;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._fallbackAnimation;\n    /**\n     * Element to which we should add the generated style tags for the indeterminate animation.\n     * For most elements this is the document, but for the ones in the Shadow DOM we need to\n     * use the shadow root.\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._styleRoot;\n    /**\n     * Whether the _mat-animation-noopable class should be applied, disabling animations.\n     * @type {?}\n     */\n    MatProgressSpinner.prototype._noopAnimations;\n    /**\n     * Mode of the progress circle\n     * @type {?}\n     */\n    MatProgressSpinner.prototype.mode;\n    /** @type {?} */\n    MatProgressSpinner.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._document;\n}\n/**\n * `<mat-spinner>` component.\n *\n * This is a component definition to be used as a convenience reference to create an\n * indeterminate `<mat-progress-spinner>` instance.\n */\nclass MatSpinner extends MatProgressSpinner {\n    /**\n     * @param {?} elementRef\n     * @param {?} platform\n     * @param {?} document\n     * @param {?} animationMode\n     * @param {?=} defaults\n     */\n    constructor(elementRef, platform, document, animationMode, defaults) {\n        super(elementRef, platform, document, animationMode, defaults);\n        this.mode = 'indeterminate';\n    }\n}\nMatSpinner.ɵfac = function MatSpinner_Factory(t) { return new (t || MatSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSpinner, selectors: [[\"mat-spinner\"]], hostAttrs: [\"role\", \"progressbar\", \"mode\", \"indeterminate\", 1, \"mat-spinner\", \"mat-progress-spinner\"], hostVars: 6, hostBindings: function MatSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._viewBox);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-spinner',\n                host: {\n                    'role': 'progressbar',\n                    'mode': 'indeterminate',\n                    'class': 'mat-spinner mat-progress-spinner',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_viewBox\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + diameter\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-spinner/progress-spinner-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatProgressSpinnerModule {\n}\nMatProgressSpinnerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatProgressSpinnerModule });\nMatProgressSpinnerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatProgressSpinnerModule_Factory(t) { return new (t || MatProgressSpinnerModule)(); }, imports: [[MatCommonModule, CommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatProgressSpinnerModule, { declarations: function () { return [MatProgressSpinner,\n        MatSpinner]; }, imports: function () { return [MatCommonModule, CommonModule]; }, exports: function () { return [MatProgressSpinner,\n        MatSpinner,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinnerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, CommonModule],\n                exports: [\n                    MatProgressSpinner,\n                    MatSpinner,\n                    MatCommonModule\n                ],\n                declarations: [\n                    MatProgressSpinner,\n                    MatSpinner\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-spinner/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n\n//# sourceMappingURL=progress-spinner.js.map","import { Directive, isDevMode, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Inject, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/toolbar/toolbar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatToolbar.\n/**\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\n\nconst _c0 = [\"*\", [[\"mat-toolbar-row\"]]];\nconst _c1 = [\"*\", \"mat-toolbar-row\"];\nclass MatToolbarBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatToolbarBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatToolbarMixinBase = mixinColor(MatToolbarBase);\nclass MatToolbarRow {\n}\nMatToolbarRow.ɵfac = function MatToolbarRow_Factory(t) { return new (t || MatToolbarRow)(); };\nMatToolbarRow.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatToolbarRow, selectors: [[\"mat-toolbar-row\"]], hostAttrs: [1, \"mat-toolbar-row\"], exportAs: [\"matToolbarRow\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatToolbarRow, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-toolbar-row',\n                exportAs: 'matToolbarRow',\n                host: { 'class': 'mat-toolbar-row' }\n            }]\n    }], null, null); })();\nclass MatToolbar extends _MatToolbarMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _platform\n     * @param {?=} document\n     */\n    constructor(elementRef, _platform, document) {\n        super(elementRef);\n        this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (!isDevMode() || !this._platform.isBrowser) {\n            return;\n        }\n        this._checkToolbarMixedModes();\n        this._toolbarRows.changes.subscribe((/**\n         * @return {?}\n         */\n        () => this._checkToolbarMixedModes()));\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     * @private\n     * @return {?}\n     */\n    _checkToolbarMixedModes() {\n        if (!this._toolbarRows.length) {\n            return;\n        }\n        // Check if there are any other DOM nodes that can display content but aren't inside of\n        // a <mat-toolbar-row> element.\n        /** @type {?} */\n        const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n            .filter((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => !(node.classList && node.classList.contains('mat-toolbar-row'))))\n            .filter((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8)))\n            .some((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => !!(node.textContent && node.textContent.trim())));\n        if (isCombinedUsage) {\n            throwToolbarMixedModesError();\n        }\n    }\n}\nMatToolbar.ɵfac = function MatToolbar_Factory(t) { return new (t || MatToolbar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatToolbar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatToolbar, selectors: [[\"mat-toolbar\"]], contentQueries: function MatToolbar_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatToolbarRow, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._toolbarRows = _t);\n    } }, hostAttrs: [1, \"mat-toolbar\"], hostVars: 4, hostBindings: function MatToolbar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-toolbar-multiple-rows\", ctx._toolbarRows.length > 0)(\"mat-toolbar-single-row\", ctx._toolbarRows.length === 0);\n    } }, inputs: { color: \"color\" }, exportAs: [\"matToolbar\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatToolbar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatToolbar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nMatToolbar.propDecorators = {\n    _toolbarRows: [{ type: ContentChildren, args: [MatToolbarRow, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatToolbar, [{\n        type: Component,\n        args: [{\n                selector: 'mat-toolbar',\n                exportAs: 'matToolbar',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\",\n                inputs: ['color'],\n                host: {\n                    'class': 'mat-toolbar',\n                    '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                    '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { _toolbarRows: [{\n            type: ContentChildren,\n            args: [MatToolbarRow, { descendants: true }]\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatToolbar.prototype._document;\n    /**\n     * Reference to all toolbar row elements that have been projected.\n     * @type {?}\n     */\n    MatToolbar.prototype._toolbarRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatToolbar.prototype._platform;\n}\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * \\@docs-private\n * @return {?}\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/toolbar/toolbar-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatToolbarModule {\n}\nMatToolbarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatToolbarModule });\nMatToolbarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatToolbarModule_Factory(t) { return new (t || MatToolbarModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatToolbarModule, { declarations: function () { return [MatToolbar,\n        MatToolbarRow]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatToolbar,\n        MatToolbarRow,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatToolbarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                declarations: [MatToolbar, MatToolbarRow]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/toolbar/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n\n//# sourceMappingURL=toolbar.js.map","import { __decorate, __param } from 'tslib';\nimport { Directive, EventEmitter, Inject, ChangeDetectorRef, Optional, Input, Output, ViewChild, ElementRef, ContentChild, HostBinding, Component, forwardRef, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { FormControl, NG_VALUE_ACCESSOR, ReactiveFormsModule } from '@angular/forms';\nimport { _countGroupLabelsBeforeOption, MatOption } from '@angular/material/core';\nimport { SELECT_PANEL_MAX_HEIGHT, MatSelect } from '@angular/material/select';\nimport { MatFormField } from '@angular/material/form-field';\nimport { A, Z, ZERO, NINE, SPACE, HOME, END, ESCAPE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { BehaviorSubject, of, combineLatest, Subject } from 'rxjs';\nimport { switchMap, map, startWith, delay, takeUntil, take, filter, tap, scan } from 'rxjs/operators';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { CommonModule } from '@angular/common';\n\n/**\r\n * Directive for providing a custom clear-icon.\r\n * e.g.\r\n * <ngx-mat-select-search [formControl]=\"bankFilterCtrl\">\r\n *   <mat-icon ngxMatSelectSearchClear>delete</mat-icon>\r\n * </ngx-mat-select-search>\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/a11y';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from '@angular/material/checkbox';\nimport * as ɵngcc6 from '@angular/material/tooltip';\nimport * as ɵngcc7 from '@angular/material/progress-spinner';\nimport * as ɵngcc8 from '@angular/material/button';\nimport * as ɵngcc9 from '@angular/material/icon';\nimport * as ɵngcc10 from '@angular/material/select';\nimport * as ɵngcc11 from '@angular/material/core';\nimport * as ɵngcc12 from '@angular/material/form-field';\n\nconst _c0 = [\"searchSelectInput\"];\nconst _c1 = [\"innerSelectSearch\"];\nfunction MatSelectSearchComponent_mat_checkbox_3_Template(rf, ctx) { if (rf & 1) {\n    const _r7 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-checkbox\", 9);\n    ɵngcc0.ɵɵlistener(\"change\", function MatSelectSearchComponent_mat_checkbox_3_Template_mat_checkbox_change_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6._emitSelectAllBooleanToParent($event.checked); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"color\", ctx_r1.matFormField == null ? null : ctx_r1.matFormField.color)(\"checked\", ctx_r1.toggleAllCheckboxChecked)(\"indeterminate\", ctx_r1.toggleAllCheckboxIndeterminate)(\"matTooltip\", ctx_r1.toggleAllCheckboxTooltipMessage)(\"matTooltipPosition\", ctx_r1.toogleAllCheckboxTooltipPosition);\n} }\nfunction MatSelectSearchComponent_mat_spinner_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-spinner\", 10);\n} }\nfunction MatSelectSearchComponent_button_7_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 1, [\"*ngIf\", \"clearIcon; else defaultIcon\"]);\n} }\nfunction MatSelectSearchComponent_button_7_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-icon\");\n    ɵngcc0.ɵɵtext(1, \"close\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatSelectSearchComponent_button_7_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 11);\n    ɵngcc0.ɵɵlistener(\"click\", function MatSelectSearchComponent_button_7_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11._reset(true); });\n    ɵngcc0.ɵɵtemplate(1, MatSelectSearchComponent_button_7_1_Template, 1, 0, undefined, 12);\n    ɵngcc0.ɵɵtemplate(2, MatSelectSearchComponent_button_7_ng_template_2_Template, 2, 0, \"ng-template\", null, 13, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const _r9 = ɵngcc0.ɵɵreference(3);\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.clearIcon)(\"ngIfElse\", _r9);\n} }\nfunction MatSelectSearchComponent_div_9_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 14);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r5.noEntriesFoundLabel, \"\\n\");\n} }\nconst _c2 = [[[\"\", 8, \"mat-select-search-custom-header-content\"]], [[\"\", \"ngxMatSelectSearchClear\", \"\"]]];\nconst _c3 = function (a0, a1) { return { \"mat-select-search-inner-multiple\": a0, \"mat-select-search-inner-toggle-all\": a1 }; };\nconst _c4 = [\".mat-select-search-custom-header-content\", \"[ngxMatSelectSearchClear]\"];\nlet MatSelectSearchClearDirective = class MatSelectSearchClearDirective {\r\n};\nMatSelectSearchClearDirective.ɵfac = function MatSelectSearchClearDirective_Factory(t) { return new (t || MatSelectSearchClearDirective)(); };\nMatSelectSearchClearDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSelectSearchClearDirective, selectors: [[\"\", \"ngxMatSelectSearchClear\", \"\"]] });\n\n/**\r\n * Copyright (c) 2018 Bithost GmbH All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nvar MatSelectSearchComponent_1;\r\n/* tslint:disable:member-ordering component-selector */\r\n/**\r\n * Component providing an input field for searching MatSelect options.\r\n *\r\n * Example usage:\r\n *\r\n * interface Bank {\r\n *  id: string;\r\n *  name: string;\r\n * }\r\n *\r\n * @Component({\r\n *   selector: 'my-app-data-selection',\r\n *   template: `\r\n *     <mat-form-field>\r\n *       <mat-select [formControl]=\"bankCtrl\" placeholder=\"Bank\">\r\n *         <mat-option>\r\n *           <ngx-mat-select-search [formControl]=\"bankFilterCtrl\"></ngx-mat-select-search>\r\n *         </mat-option>\r\n *         <mat-option *ngFor=\"let bank of filteredBanks | async\" [value]=\"bank.id\">\r\n *           {{bank.name}}\r\n *         </mat-option>\r\n *       </mat-select>\r\n *     </mat-form-field>\r\n *   `\r\n * })\r\n * export class DataSelectionComponent implements OnInit, OnDestroy {\r\n *\r\n *   // control for the selected bank\r\n *   public bankCtrl: FormControl = new FormControl();\r\n *   // control for the MatSelect filter keyword\r\n *   public bankFilterCtrl: FormControl = new FormControl();\r\n *\r\n *   // list of banks\r\n *   private banks: Bank[] = [{name: 'Bank A', id: 'A'}, {name: 'Bank B', id: 'B'}, {name: 'Bank C', id: 'C'}];\r\n *   // list of banks filtered by search keyword\r\n *   public filteredBanks: ReplaySubject<Bank[]> = new ReplaySubject<Bank[]>(1);\r\n *\r\n *   // Subject that emits when the component has been destroyed.\r\n *   private _onDestroy = new Subject<void>();\r\n *\r\n *\r\n *   ngOnInit() {\r\n *     // load the initial bank list\r\n *     this.filteredBanks.next(this.banks.slice());\r\n *     // listen for search field value changes\r\n *     this.bankFilterCtrl.valueChanges\r\n *       .pipe(takeUntil(this._onDestroy))\r\n *       .subscribe(() => {\r\n *         this.filterBanks();\r\n *       });\r\n *   }\r\n *\r\n *   ngOnDestroy() {\r\n *     this._onDestroy.next();\r\n *     this._onDestroy.complete();\r\n *   }\r\n *\r\n *   private filterBanks() {\r\n *     if (!this.banks) {\r\n *       return;\r\n *     }\r\n *\r\n *     // get the search keyword\r\n *     let search = this.bankFilterCtrl.value;\r\n *     if (!search) {\r\n *       this.filteredBanks.next(this.banks.slice());\r\n *       return;\r\n *     } else {\r\n *       search = search.toLowerCase();\r\n *     }\r\n *\r\n *     // filter the banks\r\n *     this.filteredBanks.next(\r\n *       this.banks.filter(bank => bank.name.toLowerCase().indexOf(search) > -1)\r\n *     );\r\n *   }\r\n * }\r\n */\r\nlet MatSelectSearchComponent = MatSelectSearchComponent_1 = class MatSelectSearchComponent {\r\n    constructor(matSelect, changeDetectorRef, _viewportRuler, matOption = null, liveAnnouncer, matFormField = null) {\r\n        this.matSelect = matSelect;\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        this._viewportRuler = _viewportRuler;\r\n        this.matOption = matOption;\r\n        this.liveAnnouncer = liveAnnouncer;\r\n        this.matFormField = matFormField;\r\n        /** Label of the search placeholder */\r\n        this.placeholderLabel = 'Suche';\r\n        /** Type of the search input field */\r\n        this.type = 'text';\r\n        /** Label to be shown when no entries are found. Set to null if no message should be shown. */\r\n        this.noEntriesFoundLabel = 'Keine Optionen gefunden';\r\n        /**\r\n         *  Text that is appended to the currently active item label announced by screen readers,\r\n         *  informing the user of the current index, value and total options.\r\n         *  eg: Bank R (Germany) 1 of 6\r\n        */\r\n        this.indexAndLengthScreenReaderText = ' of ';\r\n        /**\r\n          * Whether or not the search field should be cleared after the dropdown menu is closed.\r\n          * Useful for server-side filtering. See [#3](https://github.com/bithost-gmbh/ngx-mat-select-search/issues/3)\r\n          */\r\n        this.clearSearchInput = true;\r\n        /** Whether to show the search-in-progress indicator */\r\n        this.searching = false;\r\n        /** Disables initial focusing of the input field */\r\n        this.disableInitialFocus = false;\r\n        /** Enable clear input on escape pressed */\r\n        this.enableClearOnEscapePressed = false;\r\n        /**\r\n         * Prevents home / end key being propagated to mat-select,\r\n         * allowing to move the cursor within the search input instead of navigating the options\r\n         */\r\n        this.preventHomeEndKeyPropagation = false;\r\n        /** Disables scrolling to active options when option list changes. Useful for server-side search */\r\n        this.disableScrollToActiveOnOptionsChanged = false;\r\n        /** Adds 508 screen reader support for search box */\r\n        this.ariaLabel = 'dropdown search';\r\n        /** Whether to show Select All Checkbox (for mat-select[multi=true]) */\r\n        this.showToggleAllCheckbox = false;\r\n        /** select all checkbox checked state */\r\n        this.toggleAllCheckboxChecked = false;\r\n        /** select all checkbox indeterminate state */\r\n        this.toggleAllCheckboxIndeterminate = false;\r\n        /** Display a message in a tooltip on the toggle-all checkbox */\r\n        this.toggleAllCheckboxTooltipMessage = '';\r\n        /** Define the position of the tooltip on the toggle-all checkbox. */\r\n        this.toogleAllCheckboxTooltipPosition = 'below';\r\n        /** Output emitter to send to parent component with the toggle all boolean */\r\n        this.toggleAll = new EventEmitter();\r\n        this.onTouched = (_) => { };\r\n        this._options$ = new BehaviorSubject(null);\r\n        this.optionsList$ = this._options$.pipe(switchMap(_options => _options ?\r\n            _options.changes.pipe(map(options => options.toArray()), startWith(_options.toArray())) : of(null)));\r\n        this.optionsLength$ = this.optionsList$.pipe(map(options => options ? options.length : 0));\r\n        this._formControl = new FormControl('');\r\n        /** whether to show the no entries found message */\r\n        this._showNoEntriesFound$ = combineLatest([\r\n            this._formControl.valueChanges,\r\n            this.optionsLength$\r\n        ]).pipe(map(([value, optionsLength]) => this.noEntriesFoundLabel && value\r\n            && optionsLength === this.getOptionsLengthOffset()));\r\n        /** Subject that emits when the component has been destroyed. */\r\n        this._onDestroy = new Subject();\r\n    }\r\n    get isInsideMatOption() {\r\n        return !!this.matOption;\r\n    }\r\n    /** Current search value */\r\n    get value() {\r\n        return this._formControl.value;\r\n    }\r\n    /** Reference to the MatSelect options */\r\n    set _options(_options) {\r\n        this._options$.next(_options);\r\n    }\r\n    get _options() {\r\n        return this._options$.getValue();\r\n    }\r\n    ngOnInit() {\r\n        // set custom panel class\r\n        const panelClass = 'mat-select-search-panel';\r\n        if (this.matSelect.panelClass) {\r\n            if (Array.isArray(this.matSelect.panelClass)) {\r\n                this.matSelect.panelClass.push(panelClass);\r\n            }\r\n            else if (typeof this.matSelect.panelClass === 'string') {\r\n                this.matSelect.panelClass = [this.matSelect.panelClass, panelClass];\r\n            }\r\n            else if (typeof this.matSelect.panelClass === 'object') {\r\n                this.matSelect.panelClass[panelClass] = true;\r\n            }\r\n        }\r\n        else {\r\n            this.matSelect.panelClass = panelClass;\r\n        }\r\n        // set custom mat-option class if the component was placed inside a mat-option\r\n        if (this.matOption) {\r\n            this.matOption.disabled = true;\r\n            this.matOption._getHostElement().classList.add('contains-mat-select-search');\r\n        }\r\n        else {\r\n            console.error('<ngx-mat-select-search> must be placed inside a <mat-option> element');\r\n        }\r\n        this.initMultiSelectedValuesTracking();\r\n        // when the select dropdown panel is opened or closed\r\n        this.matSelect.openedChange\r\n            .pipe(delay(1), takeUntil(this._onDestroy))\r\n            .subscribe((opened) => {\r\n            if (opened) {\r\n                this.updateInputWidth();\r\n                // focus the search field when opening\r\n                if (!this.disableInitialFocus) {\r\n                    this._focus();\r\n                }\r\n            }\r\n            else {\r\n                // clear it when closing\r\n                if (this.clearSearchInput) {\r\n                    this._reset();\r\n                }\r\n            }\r\n        });\r\n        // set the first item active after the options changed\r\n        this.matSelect.openedChange\r\n            .pipe(take(1))\r\n            .pipe(takeUntil(this._onDestroy))\r\n            .subscribe(() => {\r\n            if (this.matSelect._keyManager) {\r\n                this.matSelect._keyManager.change.pipe(takeUntil(this._onDestroy))\r\n                    .subscribe(() => this.adjustScrollTopToFitActiveOptionIntoView());\r\n            }\r\n            else {\r\n                console.log('_keyManager was not initialized.');\r\n            }\r\n            this._options = this.matSelect.options;\r\n            // Closure variable for tracking the most recent first option.\r\n            // In order to avoid avoid causing the list to\r\n            // scroll to the top when options are added to the bottom of\r\n            // the list (eg: infinite scroll), we compare only\r\n            // the changes to the first options to determine if we\r\n            // should set the first item as active.\r\n            // This prevents unnecessary scrolling to the top of the list\r\n            // when options are appended, but allows the first item\r\n            // in the list to be set as active by default when there\r\n            // is no active selection\r\n            let previousFirstOption = this._options.toArray()[this.getOptionsLengthOffset()];\r\n            this._options.changes\r\n                .pipe(takeUntil(this._onDestroy))\r\n                .subscribe(() => {\r\n                // avoid \"expression has been changed\" error\r\n                setTimeout(() => {\r\n                    // Convert the QueryList to an array\r\n                    const options = this._options.toArray();\r\n                    // The true first item is offset by 1\r\n                    const currentFirstOption = options[this.getOptionsLengthOffset()];\r\n                    const keyManager = this.matSelect._keyManager;\r\n                    if (keyManager && this.matSelect.panelOpen) {\r\n                        // set first item active and input width\r\n                        // Check to see if the first option in these changes is different from the previous.\r\n                        const firstOptionIsChanged = !this.matSelect.compareWith(previousFirstOption, currentFirstOption);\r\n                        // CASE: The first option is different now.\r\n                        // Indiciates we should set it as active and scroll to the top.\r\n                        if (firstOptionIsChanged) {\r\n                            keyManager.setFirstItemActive();\r\n                        }\r\n                        // wait for panel width changes\r\n                        setTimeout(() => {\r\n                            this.updateInputWidth();\r\n                        });\r\n                        if (!this.disableScrollToActiveOnOptionsChanged) {\r\n                            this.adjustScrollTopToFitActiveOptionIntoView();\r\n                        }\r\n                    }\r\n                    // Update our reference\r\n                    previousFirstOption = currentFirstOption;\r\n                });\r\n            });\r\n        });\r\n        // add or remove css class depending on whether to show the no entries found message\r\n        // note: this is hacky\r\n        this._showNoEntriesFound$.pipe(takeUntil(this._onDestroy)).subscribe(showNoEntriesFound => {\r\n            // set no entries found class on mat option\r\n            if (this.matOption) {\r\n                if (showNoEntriesFound) {\r\n                    this.matOption._getHostElement().classList.add('mat-select-search-no-entries-found');\r\n                }\r\n                else {\r\n                    this.matOption._getHostElement().classList.remove('mat-select-search-no-entries-found');\r\n                }\r\n            }\r\n        });\r\n        // resize the input width when the viewport is resized, i.e. the trigger width could potentially be resized\r\n        this._viewportRuler.change()\r\n            .pipe(takeUntil(this._onDestroy))\r\n            .subscribe(() => {\r\n            if (this.matSelect.panelOpen) {\r\n                this.updateInputWidth();\r\n            }\r\n        });\r\n        this.initMultipleHandling();\r\n        this.optionsList$.pipe(takeUntil(this._onDestroy)).subscribe(() => {\r\n            // update view when available options change\r\n            this.changeDetectorRef.markForCheck();\r\n        });\r\n    }\r\n    _emitSelectAllBooleanToParent(state) {\r\n        this.toggleAll.emit(state);\r\n    }\r\n    ngOnDestroy() {\r\n        this._onDestroy.next();\r\n        this._onDestroy.complete();\r\n    }\r\n    _isToggleAllCheckboxVisible() {\r\n        return this.matSelect.multiple && this.showToggleAllCheckbox;\r\n    }\r\n    /**\r\n     * Handles the key down event with MatSelect.\r\n     * Allows e.g. selecting with enter key, navigation with arrow keys, etc.\r\n     * @param event\r\n     */\r\n    _handleKeydown(event) {\r\n        // Prevent propagation for all alphanumeric characters in order to avoid selection issues\r\n        if ((event.key && event.key.length === 1) ||\r\n            (event.keyCode >= A && event.keyCode <= Z) ||\r\n            (event.keyCode >= ZERO && event.keyCode <= NINE) ||\r\n            (event.keyCode === SPACE)\r\n            || (this.preventHomeEndKeyPropagation && (event.keyCode === HOME || event.keyCode === END))) {\r\n            event.stopPropagation();\r\n        }\r\n        // Special case if click Escape, if input is empty, close the dropdown, if not, empty out the search field\r\n        if (this.enableClearOnEscapePressed === true && event.keyCode === ESCAPE && this.value) {\r\n            this._reset(true);\r\n            event.stopPropagation();\r\n        }\r\n    }\r\n    /**\r\n     * Handles the key up event with MatSelect.\r\n     * Allows e.g. the announcing of the currently activeDescendant by screen readers.\r\n     */\r\n    _handleKeyup(event) {\r\n        if (event.keyCode === UP_ARROW || event.keyCode === DOWN_ARROW) {\r\n            const ariaActiveDescendantId = this.matSelect._getAriaActiveDescendant();\r\n            const index = this._options.toArray().findIndex(item => item.id === ariaActiveDescendantId);\r\n            if (index !== -1) {\r\n                const activeDescendant = this._options.toArray()[index];\r\n                this.liveAnnouncer.announce(activeDescendant.viewValue + ' '\r\n                    + this.getAriaIndex(index)\r\n                    + this.indexAndLengthScreenReaderText\r\n                    + this.getAriaLength());\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Calculate the index of the current option, taking the offset to length into account.\r\n     * examples:\r\n     *    Case 1 [Search, 1, 2, 3] will have offset of 1, due to search and will read index of total.\r\n     *    Case 2 [1, 2, 3] will have offset of 0 and will read index +1 of total.\r\n     */\r\n    getAriaIndex(optionIndex) {\r\n        if (this.getOptionsLengthOffset() === 0) {\r\n            return optionIndex + 1;\r\n        }\r\n        return optionIndex;\r\n    }\r\n    /**\r\n     * Calculate the length of the options, taking the offset to length into account.\r\n     * examples:\r\n     *    Case 1 [Search, 1, 2, 3] will have length of options.length -1, due to search.\r\n     *    Case 2 [1, 2, 3] will have length of options.length.\r\n     */\r\n    getAriaLength() {\r\n        return this._options.toArray().length - this.getOptionsLengthOffset();\r\n    }\r\n    writeValue(value) {\r\n        this._lastExternalInputValue = value;\r\n        this._formControl.setValue(value);\r\n        this.changeDetectorRef.markForCheck();\r\n    }\r\n    onBlur() {\r\n        this.onTouched();\r\n    }\r\n    registerOnChange(fn) {\r\n        this._formControl.valueChanges.pipe(filter(value => value !== this._lastExternalInputValue), tap(() => this._lastExternalInputValue = undefined), takeUntil(this._onDestroy)).subscribe(fn);\r\n    }\r\n    registerOnTouched(fn) {\r\n        this.onTouched = fn;\r\n    }\r\n    /**\r\n     * Focuses the search input field\r\n     */\r\n    _focus() {\r\n        if (!this.searchSelectInput || !this.matSelect.panel) {\r\n            return;\r\n        }\r\n        // save and restore scrollTop of panel, since it will be reset by focus()\r\n        // note: this is hacky\r\n        const panel = this.matSelect.panel.nativeElement;\r\n        const scrollTop = panel.scrollTop;\r\n        // focus\r\n        this.searchSelectInput.nativeElement.focus();\r\n        panel.scrollTop = scrollTop;\r\n    }\r\n    /**\r\n     * Resets the current search value\r\n     * @param focus whether to focus after resetting\r\n     */\r\n    _reset(focus) {\r\n        this._formControl.setValue('');\r\n        if (focus) {\r\n            this._focus();\r\n        }\r\n    }\r\n    /**\r\n     * Initializes handling <mat-select [multiple]=\"true\">\r\n     * Note: to improve this code, mat-select should be extended to allow disabling resetting the selection while filtering.\r\n     */\r\n    initMultipleHandling() {\r\n        // if <mat-select [multiple]=\"true\">\r\n        // store previously selected values and restore them when they are deselected\r\n        // because the option is not available while we are currently filtering\r\n        this.matSelect.valueChange\r\n            .pipe(takeUntil(this._onDestroy))\r\n            .subscribe((values) => {\r\n            if (this.matSelect.multiple) {\r\n                let restoreSelectedValues = false;\r\n                if (this._formControl.value && this._formControl.value.length\r\n                    && this.previousSelectedValues && Array.isArray(this.previousSelectedValues)) {\r\n                    if (!values || !Array.isArray(values)) {\r\n                        values = [];\r\n                    }\r\n                    const optionValues = this.matSelect.options.map(option => option.value);\r\n                    this.previousSelectedValues.forEach(previousValue => {\r\n                        if (!values.some(v => this.matSelect.compareWith(v, previousValue))\r\n                            && !optionValues.some(v => this.matSelect.compareWith(v, previousValue))) {\r\n                            // if a value that was selected before is deselected and not found in the options, it was deselected\r\n                            // due to the filtering, so we restore it.\r\n                            values.push(previousValue);\r\n                            restoreSelectedValues = true;\r\n                        }\r\n                    });\r\n                }\r\n                if (restoreSelectedValues) {\r\n                    this.matSelect._onChange(values);\r\n                    this.previousSelectedValues = values;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Scrolls the currently active option into the view if it is not yet visible.\r\n     */\r\n    adjustScrollTopToFitActiveOptionIntoView() {\r\n        if (this.matSelect.panel && this.matSelect.options.length > 0) {\r\n            const matOptionHeight = this.getMatOptionHeight();\r\n            const activeOptionIndex = this.matSelect._keyManager.activeItemIndex || 0;\r\n            const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.matSelect.options, this.matSelect.optionGroups);\r\n            // If the component is in a MatOption, the activeItemIndex will be offset by one.\r\n            const indexOfOptionToFitIntoView = (this.matOption ? -1 : 0) + labelCount + activeOptionIndex;\r\n            const currentScrollTop = this.matSelect.panel.nativeElement.scrollTop;\r\n            const searchInputHeight = this.innerSelectSearch.nativeElement.offsetHeight;\r\n            const amountOfVisibleOptions = Math.floor((SELECT_PANEL_MAX_HEIGHT - searchInputHeight) / matOptionHeight);\r\n            const indexOfFirstVisibleOption = Math.round((currentScrollTop + searchInputHeight) / matOptionHeight) - 1;\r\n            if (indexOfFirstVisibleOption >= indexOfOptionToFitIntoView) {\r\n                this.matSelect.panel.nativeElement.scrollTop = indexOfOptionToFitIntoView * matOptionHeight;\r\n            }\r\n            else if (indexOfFirstVisibleOption + amountOfVisibleOptions <= indexOfOptionToFitIntoView) {\r\n                this.matSelect.panel.nativeElement.scrollTop = (indexOfOptionToFitIntoView + 1) * matOptionHeight\r\n                    - (SELECT_PANEL_MAX_HEIGHT - searchInputHeight);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     *  Set the width of the innerSelectSearch to fit even custom scrollbars\r\n     *  And support all Operation Systems\r\n     */\r\n    updateInputWidth() {\r\n        if (!this.innerSelectSearch || !this.innerSelectSearch.nativeElement) {\r\n            return;\r\n        }\r\n        let element = this.innerSelectSearch.nativeElement;\r\n        let panelElement;\r\n        while (element = element.parentElement) {\r\n            if (element.classList.contains('mat-select-panel')) {\r\n                panelElement = element;\r\n                break;\r\n            }\r\n        }\r\n        if (panelElement) {\r\n            this.innerSelectSearch.nativeElement.style.width = panelElement.clientWidth + 'px';\r\n        }\r\n    }\r\n    getMatOptionHeight() {\r\n        if (this.matSelect.options.length > 0) {\r\n            return this.matSelect.options.first._getHostElement().getBoundingClientRect().height;\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     *  Initialize this.previousSelectedValues whenever the search value changes and the previous search value was empty\r\n     *  (i.e. the unfiltered selected options)\r\n     *  Wait for initial option list to capture initial selection\r\n     */\r\n    initMultiSelectedValuesTracking() {\r\n        this._formControl.valueChanges.pipe(startWith(undefined), scan((acc, currentValue) => ({ currentValue, previousValue: acc.currentValue }), ({ currentValue: undefined, previousValue: undefined })), takeUntil(this._onDestroy)).subscribe((value) => {\r\n            const options = this._options ? this._options.toArray() : [];\r\n            if (this.matSelect.multiple && !value.previousValue) {\r\n                this.previousSelectedValues = options\r\n                    .filter(option => option.selected)\r\n                    .map(option => option.value);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Determine the offset to length that can be caused by the optional matOption used as a search input.\r\n     */\r\n    getOptionsLengthOffset() {\r\n        if (this.matOption) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n};\nMatSelectSearchComponent.ɵfac = function MatSelectSearchComponent_Factory(t) { return new (t || MatSelectSearchComponent)(ɵngcc0.ɵɵdirectiveInject(MatSelect), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(MatOption, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(MatFormField, 8)); };\nMatSelectSearchComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelectSearchComponent, selectors: [[\"ngx-mat-select-search\"]], contentQueries: function MatSelectSearchComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSelectSearchClearDirective, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.clearIcon = _t.first);\n    } }, viewQuery: function MatSelectSearchComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(_c0, true, ElementRef);\n        ɵngcc0.ɵɵstaticViewQuery(_c1, true, ElementRef);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.searchSelectInput = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.innerSelectSearch = _t.first);\n    } }, hostVars: 2, hostBindings: function MatSelectSearchComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-select-search-inside-mat-option\", ctx.isInsideMatOption);\n    } }, inputs: { placeholderLabel: \"placeholderLabel\", type: \"type\", noEntriesFoundLabel: \"noEntriesFoundLabel\", indexAndLengthScreenReaderText: \"indexAndLengthScreenReaderText\", clearSearchInput: \"clearSearchInput\", searching: \"searching\", disableInitialFocus: \"disableInitialFocus\", enableClearOnEscapePressed: \"enableClearOnEscapePressed\", preventHomeEndKeyPropagation: \"preventHomeEndKeyPropagation\", disableScrollToActiveOnOptionsChanged: \"disableScrollToActiveOnOptionsChanged\", ariaLabel: \"ariaLabel\", showToggleAllCheckbox: \"showToggleAllCheckbox\", toggleAllCheckboxChecked: \"toggleAllCheckboxChecked\", toggleAllCheckboxIndeterminate: \"toggleAllCheckboxIndeterminate\", toggleAllCheckboxTooltipMessage: \"toggleAllCheckboxTooltipMessage\", toogleAllCheckboxTooltipPosition: \"toogleAllCheckboxTooltipPosition\" }, outputs: { toggleAll: \"toggleAll\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => MatSelectSearchComponent_1),\n                multi: true\n            }\n        ])], ngContentSelectors: _c4, decls: 11, vars: 14, consts: [[\"matInput\", \"\", 1, \"mat-select-search-input\", \"mat-select-search-hidden\"], [1, \"mat-select-search-inner\", \"mat-typography\", \"mat-datepicker-content\", \"mat-tab-header\", 3, \"ngClass\"], [\"innerSelectSearch\", \"\"], [\"class\", \"mat-select-search-toggle-all-checkbox\", \"matTooltipClass\", \"ngx-mat-select-search-toggle-all-tooltip\", 3, \"color\", \"checked\", \"indeterminate\", \"matTooltip\", \"matTooltipPosition\", \"change\", 4, \"ngIf\"], [\"autocomplete\", \"off\", 1, \"mat-select-search-input\", \"mat-input-element\", 3, \"type\", \"formControl\", \"placeholder\", \"keydown\", \"keyup\", \"blur\"], [\"searchSelectInput\", \"\"], [\"class\", \"mat-select-search-spinner\", \"diameter\", \"16\", 4, \"ngIf\"], [\"mat-button\", \"\", \"mat-icon-button\", \"\", \"aria-label\", \"Clear\", \"class\", \"mat-select-search-clear\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"mat-select-search-no-entries-found\", 4, \"ngIf\"], [\"matTooltipClass\", \"ngx-mat-select-search-toggle-all-tooltip\", 1, \"mat-select-search-toggle-all-checkbox\", 3, \"color\", \"checked\", \"indeterminate\", \"matTooltip\", \"matTooltipPosition\", \"change\"], [\"diameter\", \"16\", 1, \"mat-select-search-spinner\"], [\"mat-button\", \"\", \"mat-icon-button\", \"\", \"aria-label\", \"Clear\", 1, \"mat-select-search-clear\", 3, \"click\"], [4, \"ngIf\", \"ngIfElse\"], [\"defaultIcon\", \"\"], [1, \"mat-select-search-no-entries-found\"]], template: function MatSelectSearchComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelement(0, \"input\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵtemplate(3, MatSelectSearchComponent_mat_checkbox_3_Template, 1, 5, \"mat-checkbox\", 3);\n        ɵngcc0.ɵɵelementStart(4, \"input\", 4, 5);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelectSearchComponent_Template_input_keydown_4_listener($event) { return ctx._handleKeydown($event); })(\"keyup\", function MatSelectSearchComponent_Template_input_keyup_4_listener($event) { return ctx._handleKeyup($event); })(\"blur\", function MatSelectSearchComponent_Template_input_blur_4_listener() { return ctx.onBlur(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(6, MatSelectSearchComponent_mat_spinner_6_Template, 1, 0, \"mat-spinner\", 6);\n        ɵngcc0.ɵɵtemplate(7, MatSelectSearchComponent_button_7_Template, 4, 2, \"button\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(9, MatSelectSearchComponent_div_9_Template, 2, 1, \"div\", 8);\n        ɵngcc0.ɵɵpipe(10, \"async\");\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(11, _c3, ctx.matSelect.multiple, ctx._isToggleAllCheckboxVisible()));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._isToggleAllCheckboxVisible());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"type\", ctx.type)(\"formControl\", ctx._formControl)(\"placeholder\", ctx.placeholderLabel);\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.ariaLabel);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.searching);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.value && !ctx.searching);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(10, 9, ctx._showNoEntriesFound$));\n    } }, directives: [ɵngcc3.NgClass, ɵngcc3.NgIf, ɵngcc4.DefaultValueAccessor, ɵngcc4.NgControlStatus, ɵngcc4.FormControlDirective, ɵngcc5.MatCheckbox, ɵngcc6.MatTooltip, ɵngcc7.MatSpinner, ɵngcc8.MatButton, ɵngcc9.MatIcon], pipes: [ɵngcc3.AsyncPipe], styles: [\".mat-select-search-hidden[_ngcontent-%COMP%]{visibility:hidden}.mat-select-search-inner[_ngcontent-%COMP%]{position:absolute;top:0;width:100%;border-bottom-width:1px;border-bottom-style:solid;z-index:100;font-size:inherit;box-shadow:none;border-radius:4px 4px 0 0;-webkit-transform:translate3d(0,0,0)}.mat-select-search-inner.mat-select-search-inner-multiple[_ngcontent-%COMP%]{width:100%}.mat-select-search-inner.mat-select-search-inner-multiple.mat-select-search-inner-toggle-all[_ngcontent-%COMP%]{display:flex;align-items:center}.mat-select-search-inner[_ngcontent-%COMP%]   .mat-input-element[_ngcontent-%COMP%]{flex-basis:auto}.mat-select-search-inner[_ngcontent-%COMP%]   .mat-input-element[_ngcontent-%COMP%]:-ms-input-placeholder{-ms-user-select:text}  .mat-select-search-panel{transform:none!important;overflow-x:hidden}.mat-select-search-input[_ngcontent-%COMP%]{padding:16px 44px 16px 16px;box-sizing:border-box;width:100%}[dir=rtl][_nghost-%COMP%]   .mat-select-search-input[_ngcontent-%COMP%], [dir=rtl]   [_nghost-%COMP%]   .mat-select-search-input[_ngcontent-%COMP%]{padding-right:16px;padding-left:44px}.mat-select-search-no-entries-found[_ngcontent-%COMP%]{padding:16px}.mat-select-search-clear[_ngcontent-%COMP%]{position:absolute;right:4px;top:5px}[dir=rtl][_nghost-%COMP%]   .mat-select-search-clear[_ngcontent-%COMP%], [dir=rtl]   [_nghost-%COMP%]   .mat-select-search-clear[_ngcontent-%COMP%]{right:auto;left:4px}.mat-select-search-spinner[_ngcontent-%COMP%]{position:absolute;right:16px;top:calc(50% - 8px)}[dir=rtl][_nghost-%COMP%]   .mat-select-search-spinner[_ngcontent-%COMP%], [dir=rtl]   [_nghost-%COMP%]   .mat-select-search-spinner[_ngcontent-%COMP%]{right:auto;left:16px}.mat-select-search-inside-mat-option[_nghost-%COMP%]   .mat-select-search-input[_ngcontent-%COMP%]{padding-top:0;padding-bottom:0;height:3em;line-height:3em}.mat-select-search-inside-mat-option[_nghost-%COMP%]   .mat-select-search-clear[_ngcontent-%COMP%]{top:3px}  .mat-option[aria-disabled=true].contains-mat-select-search{position:static;padding:0}  .mat-option[aria-disabled=true].contains-mat-select-search .mat-icon{margin-right:0;margin-left:0}  .mat-option[aria-disabled=true].contains-mat-select-search .mat-option-pseudo-checkbox{display:none}  .mat-option[aria-disabled=true].contains-mat-select-search.mat-select-search-no-entries-found{height:6em}.mat-select-search-toggle-all-checkbox[_ngcontent-%COMP%]{padding-left:16px;padding-bottom:2px}[dir=rtl][_nghost-%COMP%]   .mat-select-search-toggle-all-checkbox[_ngcontent-%COMP%], [dir=rtl]   [_nghost-%COMP%]   .mat-select-search-toggle-all-checkbox[_ngcontent-%COMP%]{padding-left:0;padding-right:16px}\"], changeDetection: 0 });\r\nMatSelectSearchComponent.ctorParameters = () => [\r\n    { type: MatSelect, decorators: [{ type: Inject, args: [MatSelect,] }] },\r\n    { type: ChangeDetectorRef },\r\n    { type: ViewportRuler },\r\n    { type: MatOption, decorators: [{ type: Optional }, { type: Inject, args: [MatOption,] }] },\r\n    { type: LiveAnnouncer },\r\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MatFormField,] }] }\r\n];\r\n__decorate([\r\n    Input()\r\n], MatSelectSearchComponent.prototype, \"placeholderLabel\", void 0);\r\n__decorate([\r\n    Input()\r\n], MatSelectSearchComponent.prototype, \"type\", void 0);\r\n__decorate([\r\n    Input()\r\n], MatSelectSearchComponent.prototype, \"noEntriesFoundLabel\", void 0);\r\n__decorate([\r\n    Input()\r\n], MatSelectSearchComponent.prototype, \"indexAndLengthScreenReaderText\", void 0);\r\n__decorate([\r\n    Input()\r\n], MatSelectSearchComponent.prototype, \"clearSearchInput\", void 0);\r\n__decorate([\r\n    Input()\r\n], MatSelectSearchComponent.prototype, \"searching\", void 0);\r\n__decorate([\r\n    Input()\r\n], MatSelectSearchComponent.prototype, \"disableInitialFocus\", void 0);\r\n__decorate([\r\n    Input()\r\n], MatSelectSearchComponent.prototype, \"enableClearOnEscapePressed\", void 0);\r\n__decorate([\r\n    Input()\r\n], MatSelectSearchComponent.prototype, \"preventHomeEndKeyPropagation\", void 0);\r\n__decorate([\r\n    Input()\r\n], MatSelectSearchComponent.prototype, \"disableScrollToActiveOnOptionsChanged\", void 0);\r\n__decorate([\r\n    Input()\r\n], MatSelectSearchComponent.prototype, \"ariaLabel\", void 0);\r\n__decorate([\r\n    Input()\r\n], MatSelectSearchComponent.prototype, \"showToggleAllCheckbox\", void 0);\r\n__decorate([\r\n    Input()\r\n], MatSelectSearchComponent.prototype, \"toggleAllCheckboxChecked\", void 0);\r\n__decorate([\r\n    Input()\r\n], MatSelectSearchComponent.prototype, \"toggleAllCheckboxIndeterminate\", void 0);\r\n__decorate([\r\n    Input()\r\n], MatSelectSearchComponent.prototype, \"toggleAllCheckboxTooltipMessage\", void 0);\r\n__decorate([\r\n    Input()\r\n], MatSelectSearchComponent.prototype, \"toogleAllCheckboxTooltipPosition\", void 0);\r\n__decorate([\r\n    Output()\r\n], MatSelectSearchComponent.prototype, \"toggleAll\", void 0);\r\n__decorate([\r\n    ViewChild('searchSelectInput', { read: ElementRef, static: true })\r\n], MatSelectSearchComponent.prototype, \"searchSelectInput\", void 0);\r\n__decorate([\r\n    ViewChild('innerSelectSearch', { read: ElementRef, static: true })\r\n], MatSelectSearchComponent.prototype, \"innerSelectSearch\", void 0);\r\n__decorate([\r\n    ContentChild(MatSelectSearchClearDirective, { static: false })\r\n], MatSelectSearchComponent.prototype, \"clearIcon\", void 0);\r\n__decorate([\r\n    HostBinding('class.mat-select-search-inside-mat-option')\r\n], MatSelectSearchComponent.prototype, \"isInsideMatOption\", null);\r\nMatSelectSearchComponent = MatSelectSearchComponent_1 = __decorate([ __param(0, Inject(MatSelect)),\r\n    __param(3, Optional()), __param(3, Inject(MatOption)),\r\n    __param(5, Optional()), __param(5, Inject(MatFormField))\r\n], MatSelectSearchComponent);\n\n/**\r\n * Copyright (c) 2018 Bithost GmbH All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nconst MatSelectSearchVersion = '3.1.0';\r\nlet NgxMatSelectSearchModule = class NgxMatSelectSearchModule {\r\n};\nNgxMatSelectSearchModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxMatSelectSearchModule });\nNgxMatSelectSearchModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxMatSelectSearchModule_Factory(t) { return new (t || NgxMatSelectSearchModule)(); }, imports: [[\n            CommonModule,\n            ReactiveFormsModule,\n            MatButtonModule,\n            MatCheckboxModule,\n            MatIconModule,\n            MatProgressSpinnerModule,\n            MatTooltipModule\n        ]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectSearchClearDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ngxMatSelectSearchClear]'\n            }]\n    }], null, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectSearchComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-mat-select-search',\n                template: \"<!-- Placeholder to adjust vertical offset of the mat-option elements -->\\r\\n<input matInput class=\\\"mat-select-search-input mat-select-search-hidden\\\"/>\\r\\n\\r\\n<!-- Note: the  mat-datepicker-content mat-tab-header are needed to inherit the material theme colors, see PR #22 -->\\r\\n<div\\r\\n      #innerSelectSearch\\r\\n      class=\\\"mat-select-search-inner mat-typography mat-datepicker-content mat-tab-header\\\"\\r\\n      [ngClass]=\\\"{'mat-select-search-inner-multiple': matSelect.multiple, 'mat-select-search-inner-toggle-all': _isToggleAllCheckboxVisible() }\\\">\\r\\n\\r\\n  <mat-checkbox *ngIf=\\\"_isToggleAllCheckboxVisible()\\\"\\r\\n                [color]=\\\"matFormField?.color\\\"\\r\\n                class=\\\"mat-select-search-toggle-all-checkbox\\\"\\r\\n                [checked]=\\\"toggleAllCheckboxChecked\\\"\\r\\n                [indeterminate]=\\\"toggleAllCheckboxIndeterminate\\\"\\r\\n                [matTooltip]=\\\"toggleAllCheckboxTooltipMessage\\\"\\r\\n                matTooltipClass=\\\"ngx-mat-select-search-toggle-all-tooltip\\\"\\r\\n                [matTooltipPosition]=\\\"toogleAllCheckboxTooltipPosition\\\"\\r\\n                (change)=\\\"_emitSelectAllBooleanToParent($event.checked)\\\"\\r\\n  ></mat-checkbox>\\r\\n\\r\\n  <input class=\\\"mat-select-search-input mat-input-element\\\"\\r\\n         autocomplete=\\\"off\\\"\\r\\n         [type]=\\\"type\\\"\\r\\n         [formControl]=\\\"_formControl\\\"\\r\\n         #searchSelectInput\\r\\n         (keydown)=\\\"_handleKeydown($event)\\\"\\r\\n         (keyup)=\\\"_handleKeyup($event)\\\"\\r\\n         (blur)=\\\"onBlur()\\\"\\r\\n         [placeholder]=\\\"placeholderLabel\\\"\\r\\n         [attr.aria-label]=\\\"ariaLabel\\\"\\r\\n  />\\r\\n  <mat-spinner *ngIf=\\\"searching\\\"\\r\\n          class=\\\"mat-select-search-spinner\\\"\\r\\n          diameter=\\\"16\\\"></mat-spinner>\\r\\n\\r\\n  <button mat-button\\r\\n          *ngIf=\\\"value && !searching\\\"\\r\\n          mat-icon-button\\r\\n          aria-label=\\\"Clear\\\"\\r\\n          (click)=\\\"_reset(true)\\\"\\r\\n          class=\\\"mat-select-search-clear\\\">\\r\\n    <ng-content *ngIf=\\\"clearIcon; else defaultIcon\\\" select=\\\"[ngxMatSelectSearchClear]\\\"></ng-content>\\r\\n    <ng-template #defaultIcon>\\r\\n      <mat-icon>close</mat-icon>\\r\\n    </ng-template>\\r\\n  </button>\\r\\n\\r\\n  <ng-content select=\\\".mat-select-search-custom-header-content\\\"></ng-content>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"_showNoEntriesFound$ | async\\\"\\r\\n     class=\\\"mat-select-search-no-entries-found\\\">\\r\\n  {{noEntriesFoundLabel}}\\r\\n</div>\\r\\n<!--\\r\\nCopyright (c) 2018 Bithost GmbH All Rights Reserved.\\r\\n\\r\\nUse of this source code is governed by an MIT-style license that can be\\r\\nfound in the LICENSE file at https://angular.io/license\\r\\n-->\\r\\n\",\n                providers: [\n                    {\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef(() => MatSelectSearchComponent_1),\n                        multi: true\n                    }\n                ],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-select-search-hidden{visibility:hidden}.mat-select-search-inner{position:absolute;top:0;width:100%;border-bottom-width:1px;border-bottom-style:solid;z-index:100;font-size:inherit;box-shadow:none;border-radius:4px 4px 0 0;-webkit-transform:translate3d(0,0,0)}.mat-select-search-inner.mat-select-search-inner-multiple{width:100%}.mat-select-search-inner.mat-select-search-inner-multiple.mat-select-search-inner-toggle-all{display:flex;align-items:center}.mat-select-search-inner .mat-input-element{flex-basis:auto}.mat-select-search-inner .mat-input-element:-ms-input-placeholder{-ms-user-select:text}::ng-deep .mat-select-search-panel{transform:none!important;overflow-x:hidden}.mat-select-search-input{padding:16px 44px 16px 16px;box-sizing:border-box;width:100%}:host-context([dir=rtl]) .mat-select-search-input{padding-right:16px;padding-left:44px}.mat-select-search-no-entries-found{padding:16px}.mat-select-search-clear{position:absolute;right:4px;top:5px}:host-context([dir=rtl]) .mat-select-search-clear{right:auto;left:4px}.mat-select-search-spinner{position:absolute;right:16px;top:calc(50% - 8px)}:host-context([dir=rtl]) .mat-select-search-spinner{right:auto;left:16px}:host.mat-select-search-inside-mat-option .mat-select-search-input{padding-top:0;padding-bottom:0;height:3em;line-height:3em}:host.mat-select-search-inside-mat-option .mat-select-search-clear{top:3px}::ng-deep .mat-option[aria-disabled=true].contains-mat-select-search{position:static;padding:0}::ng-deep .mat-option[aria-disabled=true].contains-mat-select-search .mat-icon{margin-right:0;margin-left:0}::ng-deep .mat-option[aria-disabled=true].contains-mat-select-search .mat-option-pseudo-checkbox{display:none}::ng-deep .mat-option[aria-disabled=true].contains-mat-select-search.mat-select-search-no-entries-found{height:6em}.mat-select-search-toggle-all-checkbox{padding-left:16px;padding-bottom:2px}:host-context([dir=rtl]) .mat-select-search-toggle-all-checkbox{padding-left:0;padding-right:16px}\"]\n            }]\n    }], function () { return [{ type: ɵngcc10.MatSelect, decorators: [{\n                type: Inject,\n                args: [MatSelect]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.ViewportRuler }, { type: ɵngcc11.MatOption, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MatOption]\n            }] }, { type: ɵngcc2.LiveAnnouncer }, { type: ɵngcc12.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MatFormField]\n            }] }]; }, { placeholderLabel: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }], noEntriesFoundLabel: [{\n            type: Input\n        }], indexAndLengthScreenReaderText: [{\n            type: Input\n        }], clearSearchInput: [{\n            type: Input\n        }], searching: [{\n            type: Input\n        }], disableInitialFocus: [{\n            type: Input\n        }], enableClearOnEscapePressed: [{\n            type: Input\n        }], preventHomeEndKeyPropagation: [{\n            type: Input\n        }], disableScrollToActiveOnOptionsChanged: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input\n        }], showToggleAllCheckbox: [{\n            type: Input\n        }], toggleAllCheckboxChecked: [{\n            type: Input\n        }], toggleAllCheckboxIndeterminate: [{\n            type: Input\n        }], toggleAllCheckboxTooltipMessage: [{\n            type: Input\n        }], toogleAllCheckboxTooltipPosition: [{\n            type: Input\n        }], toggleAll: [{\n            type: Output\n        }], isInsideMatOption: [{\n            type: HostBinding,\n            args: ['class.mat-select-search-inside-mat-option']\n        }], searchSelectInput: [{\n            type: ViewChild,\n            args: ['searchSelectInput', { read: ElementRef, static: true }]\n        }], innerSelectSearch: [{\n            type: ViewChild,\n            args: ['innerSelectSearch', { read: ElementRef, static: true }]\n        }], clearIcon: [{\n            type: ContentChild,\n            args: [MatSelectSearchClearDirective, { static: false }]\n        }] }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxMatSelectSearchModule, { declarations: function () { return [MatSelectSearchComponent,\n        MatSelectSearchClearDirective]; }, imports: function () { return [CommonModule,\n        ReactiveFormsModule,\n        MatButtonModule,\n        MatCheckboxModule,\n        MatIconModule,\n        MatProgressSpinnerModule,\n        MatTooltipModule]; }, exports: function () { return [MatSelectSearchComponent,\n        MatSelectSearchClearDirective]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxMatSelectSearchModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    ReactiveFormsModule,\n                    MatButtonModule,\n                    MatCheckboxModule,\n                    MatIconModule,\n                    MatProgressSpinnerModule,\n                    MatTooltipModule\n                ],\n                declarations: [\n                    MatSelectSearchComponent,\n                    MatSelectSearchClearDirective\n                ],\n                exports: [\n                    MatSelectSearchComponent,\n                    MatSelectSearchClearDirective\n                ]\n            }]\n    }], null, null); })();\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { MatSelectSearchComponent, MatSelectSearchVersion, NgxMatSelectSearchModule, MatSelectSearchClearDirective as ɵa };\n\n//# sourceMappingURL=ngx-mat-select-search.js.map","export { ReplaySubject } from 'rxjs';\n//# sourceMappingURL=ReplaySubject.js.map","import { FormControl } from '@angular/forms';\r\nimport { DoctorService } from './../../api/doctor.service';\r\nimport { Router } from '@angular/router';\r\nimport { ViewChild, Input} from '@angular/core';\r\nimport {MatSelect} from '@angular/material/select';\r\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { take, takeUntil } from 'rxjs/operators';\r\nimport { Component, Injectable } from '@angular/core';\r\nimport { strict } from 'assert';\r\nimport { stringify } from 'querystring';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n@Component({\r\n  selector: 'ngx-dashboard',\r\n  styleUrls: ['./dashboard.component.scss'],\r\n  templateUrl: './dashboard.component.html',\r\n})\r\n\r\nexport class DashboardComponent  {\r\n  constructor(private doctorService: DoctorService,protected router: Router) { \r\n\r\n  }\r\n  toggleNgModel = true;\r\n  toggleFormControl = new FormControl();\r\n  pending : any;\r\n  completed:any;\r\n  canceled:any;\r\n  doctor_name:any;\r\n  from:any;\r\n  to:any;\r\n  d:any;\r\n  accestype:string;\r\n  doctor_details:any;\r\n  max:any;\r\n  online:any=false; \r\n  image:any;\r\n  id:any;\r\n  active_doctor:any;\r\n  doctorlist:any=[];\r\n  selectedDoctor:any;\r\n  fee:any;\r\n  \r\n\r\n  ngOnInit(): void {\r\n    \r\n   this.filteredBanks.next(this.banks.slice());\r\n   this.filteredBanksMulti.next(this.banks.slice());\r\n\r\n   this.filteredBanks2.next(this.banks2.slice());\r\n   this.filteredBanksMulti2.next(this.banks2.slice());\r\n\r\n   this.filteredBanks3.next(this.banks3.slice());\r\n   this.filteredBanksMulti3.next(this.banks3.slice());\r\n   // listen for search field value changes\r\n   this.bankFilterCtrl.valueChanges\r\n     .pipe(takeUntil(this._onDestroy))\r\n     .subscribe(() => {\r\n       this.filterBanks();\r\n     });\r\n\r\n     this.bankFilterCtrl2.valueChanges\r\n     .pipe(takeUntil(this._onDestroy))\r\n     .subscribe(() => {\r\n       this.filterBanks2();\r\n     });\r\n     this.bankFilterCtrl3.valueChanges\r\n     .pipe(takeUntil(this._onDestroy))\r\n     .subscribe(() => {\r\n       this.filterBanks3();\r\n     });\r\n   this.bankMultiFilterCtrl.valueChanges\r\n     .pipe(takeUntil(this._onDestroy))\r\n     .subscribe(() => {\r\n       this.filterBanksMulti();\r\n     });\r\n\r\n     this.bankMultiFilterCtrl2.valueChanges\r\n     .pipe(takeUntil(this._onDestroy))\r\n     .subscribe(() => {\r\n       this.filterBanksMulti2();\r\n     });\r\n\r\n     this.bankMultiFilterCtrl3.valueChanges\r\n     .pipe(takeUntil(this._onDestroy))\r\n     .subscribe(() => {\r\n       this.filterBanksMulti3();\r\n     });\r\n    this.getDoctorlist();\r\n    this.selectedDoctor =\"All Doctor's\";\r\n    this.me();\r\n    this.doctorlist=[];\r\n    this.pending = 0;\r\n    this.completed = 0;\r\n    this.canceled= 0;\r\n    this.fee=0\r\n\r\n    \r\n    this.to=[new Date().getFullYear(),('0' + (new Date().getMonth() + 1)).slice(-2),('0' + new Date().getDate()).slice(-2)].join('-');\r\n    this.d  = new Date(new Date().getTime() - 144*60*60*1000);\r\n    this.from=[this.d.getFullYear(),('0' + (this.d.getMonth() + 1)).slice(-2),('0' + this.d.getDate()).slice(-2)].join('-');\r\n\r\n    this.max=[new Date().getFullYear(),('0' + (new Date().getMonth() + 1)).slice(-2), ('0' + new Date().getDate()).slice(-2)].join('-');\r\n    // this.getServices(this.id,\"pending\",this.from, this.to);\r\n    this.getaccesslist();\r\n  }\r\n\r\n  getaccesslist() {\r\n    this.doctorService.getaccesslist().subscribe((access) => {\r\n\r\n    });\r\n  }\r\n  public bankCtrl: FormControl = new FormControl();\r\n  public bankCtrl2: FormControl = new FormControl();\r\n  public bankCtrl3: FormControl = new FormControl();\r\n\r\n  /** control for the MatSelect filter keyword */\r\n public bankFilterCtrl: FormControl = new FormControl();\r\n public bankFilterCtrl2: FormControl = new FormControl();\r\n public bankFilterCtrl3: FormControl = new FormControl();\r\n\r\n   /** control for the selected bank for multi-selection */\r\n public bankMultiCtrl: FormControl = new FormControl();\r\n public bankMultiCtrl2: FormControl = new FormControl();\r\n public bankMultiCtrl3: FormControl = new FormControl();\r\n\r\n  /** control for the MatSelect filter keyword multi-selection */\r\n public bankMultiFilterCtrl: FormControl = new FormControl();\r\n public bankMultiFilterCtrl2: FormControl = new FormControl();\r\n public bankMultiFilterCtrl3: FormControl = new FormControl();\r\n\r\n /** list of banks */\r\n private banks: any[]  = [{\"id\":\"All\",\"name\":{\"first\":\"All Doctor's\",\"middle\":\"\",\"last\":\"\"}}];\r\n private banks2: any[] = [\r\n   {name: 'All Pin Code', id: 'A'},\r\n   {name: '567826', id: '567826'},\r\n   {name: '567823', id: '567823'},\r\n   {name: '567666', id: '567666'},\r\n   {name: '567876', id: '567876'},\r\n   {name: '567888', id: '567888'},\r\n   {name: '567899', id: '267899'},\r\n   {name: '567860', id: '567860'},\r\n   {name: '566899', id: '566899'},\r\n   {name: '567811', id: '567811'} \r\n ]\r\n\r\n\r\nprivate banks3: any[] = [\r\n  {name: 'All States', id: 'Allstate'},\r\n  {name: 'Andhra Pradesh', id: 'Andhra Pradesh'},\r\n  {name: 'Arunachal Pradesh', id: 'Arunachal Pradesh'},\r\n  {name: 'Assam', id: 'Assam'},\r\n  {name: 'Bihar', id: 'Bihar'},\r\n  {name: 'Chhattisgarh', id: 'Chhattisgarh'},\r\n  {name: 'Goa', id: 'Goa'},\r\n  {name: 'Gujarat', id: 'Gujarat'},\r\n  {name: 'Haryana', id: 'Haryana'},\r\n  {name: 'Himachal Pradesh', id: 'Himachal Pradesh'},\r\n  {name: 'Jammu and Kashmir', id: 'Jammu and Kashmir'},\r\n  {name: 'Jharkhand', id: 'Jharkhand'},\r\n  {name: 'Karnataka', id: 'Karnataka'},\r\n  {name: 'Kerala', id: 'Kerala'},\r\n  {name: 'Madhya Pradesh', id: 'Madhya Pradesh'},\r\n  {name: 'Maharashtra', id: 'Maharashtra'},\r\n  {name: 'Manipur', id: 'Manipur'},\r\n  {name: 'Meghalaya', id: 'Meghalaya'},\r\n  {name: 'Mizoram', id: 'Mizoram'},\r\n  {name: 'Nagaland', id: 'Nagaland'},\r\n  {name: 'Odisha', id: 'Odisha'},\r\n  {name: 'Punjab', id: 'Punjab'},\r\n  {name: 'Rajasthan', id: 'Rajasthan'},\r\n  {name: 'Sikkim', id: 'Sikkim'},\r\n  {name: 'Tamil Nadu', id: 'Tamil Nadu'},\r\n  {name: 'Telangana', id: 'Telangana'},\r\n  {name: 'Tripura', id: 'Tripura'},\r\n  {name: 'Uttar Pradesh', id: 'Uttar Pradesh'},\r\n  {name: 'Uttarakhand', id: 'Uttarakhand'},\r\n  {name: 'West Bengal', id: 'West Bengal'}\r\n]\r\n /** list of banks filtered by search keyword */\r\n public filteredBanks: ReplaySubject<any[]> = new ReplaySubject<any[]>(1);\r\n public filteredBanks2: ReplaySubject<any[]> = new ReplaySubject<any[]>(1);\r\n public filteredBanks3: ReplaySubject<any[]> = new ReplaySubject<any[]>(1);\r\n\r\n /** list of banks filtered by search keyword for multi-selection */\r\n public filteredBanksMulti: ReplaySubject<any[]> = new ReplaySubject<any[]>(1);\r\n public filteredBanksMulti2: ReplaySubject<any[]> = new ReplaySubject<any[]>(1);\r\n public filteredBanksMulti3: ReplaySubject<any[]> = new ReplaySubject<any[]>(1);\r\n\r\n @ViewChild('singleSelect') singleSelect: MatSelect; \r\n\r\n /** Subject that emits when the component has been destroyed. */\r\n private _onDestroy = new Subject<void>();\r\n\r\n \r\n\r\n ngAfterViewInit() {\r\n   this.setInitialValue();\r\n }\r\n\r\n ngOnDestroy() {\r\n   this._onDestroy.next();\r\n   this._onDestroy.complete();\r\n }\r\n\r\n /**\r\n  * Sets the initial value after the filteredBanks are loaded initially\r\n  */\r\n private setInitialValue() {\r\n\r\n        \r\n   this.filteredBanks\r\n     .pipe(take(1), takeUntil(this._onDestroy))\r\n     .subscribe(() => {          \r\n       \r\n       this.singleSelect.compareWith = (a: any, b: any) => a === b;\r\n     });\r\n\r\n     this.filteredBanks2\r\n     .pipe(take(1), takeUntil(this._onDestroy))\r\n     .subscribe(() => {          \r\n       \r\n       this.singleSelect.compareWith = (a: any, b: any) => a === b;\r\n     });\r\n\r\n     this.filteredBanks3\r\n     .pipe(take(1), takeUntil(this._onDestroy))\r\n     .subscribe(() => {          \r\n       \r\n       this.singleSelect.compareWith = (a: any, b: any) => a === b;\r\n     });\r\n\r\n      setTimeout(() => {\r\n        // this.bankCtrl.setValue(this.banks[0]);\r\n        this.bankCtrl2.setValue(this.banks2[0]);\r\n        this.bankCtrl3.setValue(this.banks3[0]);\r\n        // if(this.accestype == 'doctor'){\r\n\r\n          setTimeout(() => {\r\n            this.appointmentcount();\r\n          }, 12);\r\n        // }\r\n        \r\n      }, 1233);\r\n   \r\n\r\n\r\n }\r\n goonline(){\r\n\r\n }\r\n\r\n private filterBanks() {\r\n   if (!this.banks) {\r\n     return;\r\n   }\r\n   // get the search keyword\r\n   let search = this.bankFilterCtrl.value;\r\n   if (!search) {\r\n     this.filteredBanks.next(this.banks.slice());\r\n     return;\r\n   } else {\r\n     search = search.toLowerCase();\r\n   }\r\n   // filter the banks\r\n   this.filteredBanks.next(\r\n     this.banks.filter(bank => bank.name.first.toLowerCase().indexOf(search) > -1)\r\n   );\r\n }\r\n\r\n\r\n private filterBanks2() {\r\n  if (!this.banks2) {\r\n    return;\r\n  }\r\n  // get the search keyword\r\n  let search = this.bankFilterCtrl2.value;\r\n  if (!search) {\r\n    this.filteredBanks2.next(this.banks2.slice());\r\n    return;\r\n  } else {\r\n    search = search.toLowerCase();\r\n  }\r\n  // filter the banks\r\n  this.filteredBanks2.next(\r\n    this.banks2.filter(bank2 => bank2.name.toLowerCase().indexOf(search) > -1)\r\n  );\r\n}\r\n\r\nprivate filterBanks3() {\r\n\r\n  if (!this.banks3) {\r\n    return;\r\n  }\r\n  // get the search keyword\r\n  let search = this.bankFilterCtrl3.value;\r\n  if (!search) {\r\n    this.filteredBanks3.next(this.banks3.slice());\r\n    return;\r\n  } else {\r\n    search = search.toLowerCase();\r\n  }\r\n  // filter the banks\r\n  this.filteredBanks3.next(\r\n    this.banks3.filter(bank3 => bank3.name.toLowerCase().indexOf(search) > -1)\r\n  );\r\n}\r\n\r\n\r\n private filterBanksMulti() {\r\n   if (!this.banks) {\r\n     return;\r\n   }\r\n   // get the search keyword\r\n   let search = this.bankMultiFilterCtrl.value;\r\n   if (!search) {\r\n     this.filteredBanksMulti.next(this.banks.slice());\r\n     return;\r\n   } else {\r\n     search = search.toLowerCase();\r\n   }\r\n   // filter the banks\r\n   this.filteredBanksMulti.next(\r\n     this.banks.filter(bank => bank.name.toLowerCase().indexOf(search) > -1)\r\n   );\r\n }\r\n\r\n private filterBanksMulti2() {\r\n   \r\n  if (!this.banks2) {\r\n    return;\r\n  }\r\n  // get the search keyword\r\n  let search = this.bankMultiFilterCtrl2.value;\r\n  if (!search) {\r\n    this.filteredBanksMulti2.next(this.banks2.slice());\r\n    return;\r\n  } else {\r\n    search = search.toLowerCase();\r\n  }\r\n  // filter the banks\r\n  this.filteredBanksMulti2.next(\r\n    this.banks2.filter(bank2 => bank2.name.toLowerCase().indexOf(search) > -1)\r\n  );\r\n}\r\n\r\nprivate filterBanksMulti3() {\r\n\r\n  if (!this.banks3) {\r\n    return;\r\n  }\r\n  // get the search keyword\r\n  let search = this.bankMultiFilterCtrl3.value;\r\n  if (!search) {\r\n    this.filteredBanksMulti3.next(this.banks3.slice());\r\n    return;\r\n  } else {\r\n    search = search.toLowerCase();\r\n  }\r\n  // filter the banks\r\n  this.filteredBanksMulti3.next(\r\n    this.banks3.filter(bank3 => bank3.name.toLowerCase().indexOf(search) > -1)\r\n  );\r\n  \r\n}\r\n   me(){\r\n    this.doctorService.doctorDetailsbysessionID().subscribe(response=> {\r\n    if(response.status == 200){\r\n    this.id=response.res.id;\r\n    this.online= response.res.online;\r\n    this.doctor_name=response.res.name.first;\r\n    this.doctor_details = response.res;\r\n\r\n    this.accestype=response.res.accestype;\r\n    \r\n    // this.getServices(\"All\",\"pending\",this.from, this.to,\"All\",\"All\");\r\n    // this.getDoctorDetails(this.doctor_details.id);\r\n   \r\n  }else{\r\n  \r\n    this.router.navigateByUrl('/auth/login');\r\n  \r\n  }\r\n  },\r\n  error => {\r\n\r\n    this.router.navigateByUrl('/auth/login');\r\n\r\n  },)\r\n\r\n}\r\n  getServices(id,appointment_status:any, from_here:any, to_here:any, state:string, pin:string ) {\r\n\r\n    from_here= from_here.split(\"-\").reverse().join(\"-\");\r\n    to_here= to_here.split(\"-\").reverse().join(\"-\");\r\n    this.doctorService.doctorAppointmentListCount(id,appointment_status, from_here , to_here, state, pin).subscribe((response) => {\r\nthis.banks=this.doctorlist;\r\n// this.bankCtrl.setValue(this.doctorlist[0]);\r\nthis.fee=0;\r\nresponse.res.appointments.forEach(element => {\r\n  \r\n  if(element.appointment_status == \"completed\"){\r\n\r\n  let doctor = this.doctorlist.filter(obj=>obj.id ===element.appointment_docid);\r\n  \r\nif(doctor[0] && doctor[0].clinicdetails && doctor[0].clinicdetails.doc_consultation_fee){  \r\n\r\n  this.fee= this.fee+parseInt(doctor[0].clinicdetails.doc_consultation_fee);\r\n}else{\r\n  this.fee=this.fee+250;\r\n}\r\n  }\r\n\r\n});\r\n\r\n  \r\n  \r\n  if(this.accestype == \"hospitaladmin\"){\r\n    var pending = response.res.appointments.filter(obj => (obj.appointment_hosid == this.doctor_details.hospital_id && obj.appointment_status == \"pending\"));\r\n    this.pending=  pending.length;\r\n   \r\n    var canceled = response.res.appointments.filter(obj => (obj.appointment_hosid == this.doctor_details.hospital_id && obj.appointment_status == \"canceled\"));\r\n    this.canceled=  canceled.length;\r\n\r\n    var completed = response.res.appointments.filter(obj => (obj.appointment_hosid == this.doctor_details.hospital_id && obj.appointment_status == \"completed\"));\r\n    this.completed=  completed.length;\r\n  }else if(this.accestype ==\"branchadmin\"){ \r\n    var pending = response.res.appointments.filter(obj => (obj.appointment_hosid == this.doctor_details.branch_id && obj.appointment_status == \"pending\"));\r\n    this.pending=  pending.length;\r\n   \r\n    var canceled = response.res.appointments.filter(obj => (obj.appointment_hosid == this.doctor_details.branch_id && obj.appointment_status == \"canceled\"));\r\n    this.canceled=  canceled.length;\r\n\r\n    var completed = response.res.appointments.filter(obj => (obj.appointment_hosid == this.doctor_details.branch_id && obj.appointment_status == \"completed\"));\r\n    this.completed=  completed.length;\r\n\r\n    // this.completed =  response.res.completed;\r\n    // this.canceled =  response.res.cancelled;\r\n\r\n}else{\r\n  \r\n      this.pending=  response.res.pending;\r\n   \r\n      this.completed =  response.res.completed;\r\n      this.canceled =  response.res.cancelled;\r\n}\r\n    });\r\n}\r\nchangeOnlineStatus(){\r\n \r\n  console.log(this.online)\r\n  this.doctorService.changeOnlineStatus(this.id ,!this.online).subscribe((response) => {\r\n    \r\n  })\r\n}\r\ngetDoctorlist(){\r\n  this.doctorService.getdoctorlist().subscribe((response) => {\r\n  this.doctorlist =  response.response.sort((a,b) => (a.name.first > b.name.first) ? 1 : ((b.name.first > a.name.first) ? -1 : 0));\r\nif((this.accestype == \"hospitaladmin\") || (this.accestype == \"branchadmin\")){\r\n         \r\n  var doctors=[]\r\n  this.doctorlist.forEach(doc => {\r\n    if(doc.hospital_enrolled){\r\n      doc.hospital_enrolled.forEach(element => {\r\n        if(element.hospital_id == this.doctor_details.hospital_id){\r\n          \r\n          doctors.push(doc)\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\nthis.active_doctor= doctors.length;\r\n// this.bankCtrl.setValue(this.banks[0]);\r\n\r\n// let perivatedate = Array.from(this.doctorlist);\r\n// perivatedate.unshift({\"id\":\"All\",\"name\":{\"first\":\"All Doctor's\",\"middle\":\"\",\"last\":\"\"}})\r\n// this.banks = perivatedate;\r\n\r\n}else{\r\n  this.active_doctor=this.doctorlist.length;\r\n\r\n}\r\n  this.doctorlist.unshift({\"id\":\"All\",\"name\":{\"first\":\"All Doctor's\",\"middle\":\"\",\"last\":\"\"}})\r\n  this.bankCtrl.setValue(this.banks[0]);\r\n  \r\n  })\r\n}\r\n\r\n\r\ngotopending(){\r\n  var doctor = this.doctorlist.filter(obj=>obj.name.first.trim() ===this.selectedDoctor.trim());\r\n\r\n  this.router.navigateByUrl('pages/charts/consultation?status='+\"pending&id=\"+doctor[0].id+\"&from=\"+this.from+\"&to=\"+this.to+\"&state=\"+this.bankCtrl3.value.name+\"&pin=\"+this.bankCtrl2.value.name);\r\n}\r\ngottocompleted(){\r\n  var doctor = this.doctorlist.filter(obj=>obj.name.first.trim() ===this.selectedDoctor.trim());\r\n\r\n  this.router.navigateByUrl('pages/charts/consultation?status='+\"completed&id=\"+doctor[0].id+\"&from=\"+this.from+\"&to=\"+this.to+\"&state=\"+this.bankCtrl3.value.name+\"&pin=\"+this.bankCtrl2.value.name);\r\n}\r\ngotonewconsultation(){\r\n  var doctor = this.doctorlist.filter(obj=>obj.name.first.trim() ===this.selectedDoctor.trim());\r\n\r\n\r\n  this.router.navigateByUrl('pages/charts/consultation?status='+\"completed&id=\"+doctor[0].id+\"&from=\"+this.from+\"&to=\"+this.to+\"&state=\"+this.bankCtrl3.value.name+\"&pin=\"+this.bankCtrl2.value.name);\r\n\r\n}\r\ngotocancel(){\r\n  var doctor = this.doctorlist.filter(obj=>obj.name.first.trim() ===this.selectedDoctor.trim());\r\n\r\n  this.router.navigateByUrl('pages/charts/consultation?status='+\"cancled&id=\"+doctor[0].id+\"&from=\"+this.from+\"&to=\"+this.to+\"&state=\"+this.bankCtrl3.value.name+\"&pin=\"+this.bankCtrl2.value.name);\r\n}\r\nactivedoctor(){\r\n  this.router.navigateByUrl('pages/layout/stepper');\r\n\r\n}\r\ngetDoctorDetails(id:any) {\r\n\r\n    this.doctorService.doctorDetails(id).subscribe((response) => {\r\n  \r\n    this.online= response.res.online;\r\n    this.doctor_name=response.res.name.first;\r\n    this.doctor_details = response.res;\r\n\r\n    })\r\n\r\n}\r\nappointmentcount(){\r\n  console.log(\"========989\")\r\nif(this.accestype != 'doctor'){\r\n    this.selectedDoctor=this.bankCtrl.value.name.first;\r\n\r\n  var doctor = this.doctorlist.filter(obj=>obj.name.first.trim() ===this.selectedDoctor.trim());\r\n  this.getServices(doctor[0].id,\"pending\",this.from, this.to, this.bankCtrl3.value.name,this.bankCtrl2.value.name);\r\n}else{\r\n  this.getServices(this.doctor_details.id,\"pending\",this.from, this.to, this.bankCtrl3.value.name,this.bankCtrl2.value.name);\r\n\r\n}\r\n}\r\n\r\ngoToLink(url:number){\r\n  if(url == 1){\r\n  window.open(\"https://www.mohfw.gov.in/pdf/Telemedicine.pdf\", '_blank');\r\n  }else if(url ==2){\r\n    window.open(\"https://mciindia.org/MCIRest/open/getDocument?path=/Documents/Public/Portal/LatestNews/Modification%20in%20Medicine%20lists%20in%20Telemedicine%20Practice%20Guidelin.pdf\", '_blank');\r\n  }else{\r\n    window.open(\"https://mciindia.org/MCIRest/open/getDocument?path=/Documents/Public/Portal/LatestNews/Final_FAQ-TELEMEDICINE%20%206-4-2020..pdf\", '_blank');\r\n\r\n  }\r\n}\r\n\r\n}\r\n","<!-- DashBoard View -->\r\n<div class=\"wrapper  m-1 position-relative\">\r\n  <!-- Dash Board head -->\r\n  <div class=\"row mx-1\">\r\n    <div class=\" dashboard-head\">\r\n      <span>Dashboard</span>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Dash Board head -->\r\n\r\n  <!-- option list -->\r\n  <div class=\"row mx-1 box-view rounded \">\r\n    <div class=\"w-100 shadow-sm p-2 mb-3 bg-white rounded\">\r\n      <!-- Date list -->\r\n      <div class=\"row m-0 p-0\">\r\n        <div class=\"col-lg col-md col-sm col-12\">\r\n          <div class=\"column\">\r\n            <div class=\"card-body p-0\">\r\n              <p class=\"pb-1 px-0 m-0\" style=\"font-size: 14px; font-weight: 600;\">From Date</p>\r\n              <div class=\"input-group\">\r\n                <input type=\"date\" [(ngModel)]=\"from\" name=\"from\" max=\"{{max}}\" class=\"form-control inthight\"\r\n                  id=\"inlineFormInputGroupUsername2\" value=\"16-08-2020\" style=\"box-shadow: none;\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg col-md col-sm col-12 mb-1\">\r\n          <div class=\"column\">\r\n            <div class=\"card-body p-0\">\r\n              <p class=\"pb-1 px-0 m-0\" style=\"font-size: 14px; font-weight: 600;\">To Date</p>\r\n              <div class=\"input-group  \">\r\n                <input type=\"date\" [(ngModel)]=\"to\" name=\"to\" max=\"{{max}}\" class=\"form-control inthight\"\r\n                  id=\"inlineFormInputGroupUsername2\" aria-valuenow=\"23-08-2020\" style=\"box-shadow: none;\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg col-md col-sm col-12 mb-1 \">\r\n          <div class=\"column\">\r\n            <div class=\"card-body p-0\">\r\n              <p class=\"pb-1 px-0 m-0\" style=\"font-size: 14px; font-weight: 600;\">State </p>\r\n              <mat-form-field style=\"width:100%; font-size: 12px;  box-shadow: none;\">\r\n                <mat-select [formControl]=\"bankCtrl3\" placeholder=\"\" #singleSelect>\r\n                  <mat-option>\r\n                    <ngx-mat-select-search placeholderLabel=\"Enter State Name\" noEntriesFoundLabel=\"No matching state\"[formControl]=\"bankFilterCtrl3\"></ngx-mat-select-search>\r\n                  </mat-option>\r\n                  <mat-option *ngFor=\"let bank3 of filteredBanks3 | async\" [value]=\"bank3\">\r\n                    {{bank3.name}}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg col-md col-sm col-12 mb-1\">\r\n          <div class=\"column\">\r\n            <div class=\"card-body p-0\">\r\n              <p class=\"pb-1 px-0 m-0\" style=\"font-size: 14px; font-weight: 600;\">Pin Code</p>\r\n\r\n              <mat-form-field style=\"width:100%; font-size: 12px; box-shadow: none;\">\r\n                <mat-select [formControl]=\"bankCtrl2\" placeholder=\"\" #singleSelect>\r\n                  <mat-option>\r\n                    <ngx-mat-select-search placeholderLabel=\"Enter pin code\" noEntriesFoundLabel=\"No matching pin\"[formControl]=\"bankFilterCtrl2\"></ngx-mat-select-search>\r\n                  </mat-option>\r\n                  <mat-option *ngFor=\"let bank2 of filteredBanks2 | async\" [value]=\"bank2\">\r\n                    {{bank2.name}}\r\n                  </mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Date list -->\r\n\r\n      <!-- Doctor & Hospital -->\r\n      <div class=\"row p-0 m-0\">\r\n        <div class=\"col-lg col-md col-sm col-12 mb-1\">\r\n          <div class=\"column\">\r\n            <div class=\"card-body p-0\">\r\n              <p class=\"pb-1 px-0 m-0\" style=\"font-size: 14px; font-weight: 600;\">Hospitals </p>\r\n              <div class=\"input-group\">\r\n                <select class=\"custom-select inthight\" id=\"inputGroupSelect01 placeholder\" style=\"box-shadow: none;\">\r\n                  <option selected>All Hospital's</option>\r\n                  <option value=\"1\">Max Hospital</option>\r\n                  <option value=\"2\">Apolo Hospital</option>\r\n                  <option value=\"3\">Narayana Hospital</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg col-md col-sm col-12 mb-1\" >\r\n          <div class=\"column\" *ngIf=\"accestype != 'doctor'\">\r\n            <!-- <div class=\"card-body p-0\"> -->\r\n              <p class=\"pb-1 px-0 m-0\" style=\"font-size: 14px; font-weight: 600;\">Doctor</p>\r\n              <!-- <div class=\"input-group\" > -->\r\n                <!-- <select class=\"custom-select\" id=\"inputGroupSelect01 placeholder\">\r\n                <option selected>Select All</option>\r\n              </select> -->\r\n                <!-- <select [(ngModel)]=\"selectedDoctor\" class=\"custom-select inthight\" id=\"inputGroupSelect01\"> -->\r\n                  \r\n                  <!-- <option *ngFor=\"let doctor of doctorlist\">\r\n                    {{doctor.name.first}}\r\n                  </option> -->\r\n                  <mat-form-field style=\"width:100%; font-size: 12px; box-shadow: none;\">\r\n                    <mat-select [formControl]=\"bankCtrl\" placeholder=\"\" #singleSelect>\r\n                      <mat-option>\r\n                        <ngx-mat-select-search placeholderLabel=\"Type Doctor Name\" noEntriesFoundLabel=\"No matching doctor\"[formControl]=\"bankFilterCtrl\"></ngx-mat-select-search>\r\n                      </mat-option>\r\n                      <mat-option *ngFor=\"let bank of filteredBanks | async\" [value]=\"bank\">\r\n                        {{bank.name.first}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                <!-- </select> -->\r\n              <!-- </div> -->\r\n            </div>\r\n          </div>\r\n        <!-- </div> -->\r\n        \r\n        <!--\r\n        Copyright Google LLC All Rights Reserved.\r\n        \r\n        Use of this source code is governed by an MIT-style license that can be\r\n        found in the LICENSE file at https://angular.io/license\r\n        -->\r\n      </div>\r\n\r\n      <!-- <div class=\"row\">\r\n        <div class=\"col mb-2\">\r\n          <p class=\"col mb-1 font-weight-bolder px-0 mt-2\">Hospital</p>\r\n          <div class=\"input-group mx-1 col\">\r\n            <select class=\"custom-select\" id=\"inputGroupSelect01\">\r\n              <option selected>Select All</option>\r\n            </select>\r\n          </div>\r\n          <p class=\"col mb-1 font-weight-bolder px-0 mt-2\">Doctor</p>\r\n          <div class=\"input-group mx-1 col\">\r\n            <select class=\"custom-select py-2\" id=\"inputGroupSelect01\">\r\n              <option selected>Select All</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div> -->\r\n      <!-- Doctor & Hospital button -->\r\n      <div class=\"row m-0 p-0 mb-3\">\r\n        <div class=\"col-lg col-md col-sm col-12 mb-1\">\r\n          <div class=\"column\" *ngIf=\"accestype == 'doctor'\">\r\n            <div class=\"card-body p-0\">\r\n              <!-- <button type=\"submit\" class=\"btn btn-primary btn-sm btnhight float-right text-center\"\r\n                (click)=\"appointmentcount()\">Submit</button> -->\r\n                <nb-toggle [(ngModel)]=\"online\" class=\"float-left\" (click)=\"changeOnlineStatus()\" style=\"font-size: 12px;\">Online</nb-toggle>\r\n\r\n            </div>\r\n          </div>\r\n          <div class=\"column\"> \r\n            <div class=\"card-body p-0\">\r\n              <button type=\"submit\" class=\"btn btn-primary btn-sm btnhight float-right text-center\"\r\n                (click)=\"appointmentcount()\">Submit</button>\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n\r\n      <!-- View list option -->\r\n\r\n      <div class=\"row px-2 m-0 p-0\">\r\n        <div class=\"mb-2 mx-2 bg-white rounded col text-center box_list\">\r\n          <div class=\"card-body zoom\" (click)=\"gotopending()\">\r\n            <i class=\"fa fa-users pending\" size=\"45\" aria-hidden=\"true\"></i>\r\n            <h5 class=\"text-center\" style=\"font-size: 22px; font-weight: 800; color: #444;\">{{this.pending}}</h5>\r\n            <span class=\"text-center\" style=\"font-size: 18px; font-weight: 600;\">Pending</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"mb-2 mx-2 bg-white rounded col text-center box_list\">\r\n          <div class=\"card-body zoom\" (click)=\"gottocompleted()\">\r\n            <i class=\"fa fa-users completed\" size=\"45\" aria-hidden=\"true\"></i>\r\n            <h5 class=\"text-center\" style=\"font-size: 22px; font-weight: 800; color: #444;\">{{this.completed}}</h5>\r\n            <span class=\"text-center\" style=\"font-size: 18px; font-weight: 600;\">Completed</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"mb-2 mx-2  bg-white rounded col text-center box_list\">\r\n          <div class=\"card-body zoom\" (click)=\"gotocancel()\">\r\n            <i class=\"fa fa-users cancelled\" size=\"45\" aria-hidden=\"true\"></i>\r\n            <h5 class=\"text-center\" style=\"font-size: 22px; font-weight: 800; color: #444;\">{{this.canceled}}</h5>\r\n            <span class=\"text-center\" style=\"font-size: 18px; font-weight: 600;\">Cancelled</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- View list option -->\r\n\r\n      <!-- Consultation View -->\r\n      <div class=\"row px-2 m-0 p-0\">\r\n        <div class=\"p-1 mb-2 mx-2 bg-white rounded col text-center box_list\" *ngIf=\"accestype != 'doctor'\" >\r\n          <div class=\"card-body zoom\" (click)=\"activedoctor()\">\r\n            <i class=\"fa fa-user-md doctor\" size=\"45\" aria-hidden=\"true\"></i>\r\n            <h5 class=\"text-center\" style=\"font-size: 22px; font-weight: 800; color: #444;\">{{this.active_doctor}}</h5>\r\n            <span class=\"text-center\" style=\"font-size: 18px; font-weight: 600;\">Active Doctors</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"p-1 mb-2 mx-2 bg-white rounded col text-center box_list\">\r\n          <div class=\"card-body zoom\" (click)=\"gotonewconsultation()\">\r\n            <i class=\"fa fa-user-plus consultation\" size=\"45\" aria-hidden=\"true\"></i>\r\n            <h5 class=\"text-center\" style=\"font-size: 22px; font-weight: 800; color: #444;\">{{this.completed}}</h5>\r\n            <span class=\"text-center\" style=\"font-size: 18px; font-weight: 600;\">New Consultation</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"p-1 mb-2 mx-2 bg-white rounded col text-center box_list\">\r\n          <div class=\"card-body zoom\" (click)=\"gottocompleted()\">\r\n            <!-- <i class=\"fas fa-rupee-sign collected\" aria-hidden=\"true\"></i> -->\r\n            <div class=\"collected\"><img src=\"../../../assets/images/money-bag.png\" alt=\"wallet\"></div>\r\n            <h5 class=\"text-center\" style=\"font-size: 22px; font-weight: 800; color: #444;\"> <span>&#8377;</span>\r\n              {{this.fee}}</h5>\r\n            <span class=\"text-center\" style=\"font-size: 18px; font-weight: 600;\">Fees Collected</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Consultation View -->\r\n    </div>\r\n  </div>\r\n  <!-- Option list -->\r\n\r\n  <!-- Telimedicine -->\r\n  <div class=\"row mx-1 box-view rounded\">\r\n    <div class=\"w-100 shadow-sm p-2 mb-3 bg-white rounded\">\r\n      <div class=\"row mx-1\">\r\n        <div class=\" dashboard-head\">\r\n          <span style=\"padding-left:15px;\">Reference Documents</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"w-100 px-2 \">\r\n      <div class=\"row px-4 \">\r\n        <div class=\"box_list p-0 mb-3 mx-2  bg-white rounded col-lg col-md col-sm col-12\">\r\n          <div class=\"col telemedicine p-0 py-3 px-1 text-left\">\r\n            <i class=\"fa fa-arrow-right\" aria-hidden=\"true\">\r\n              <a (click)=\"goToLink(1)\" style=\"color: blue; font-size: 12px;\"> Telemedicine Practice Guidelines</a>\r\n            </i>\r\n          </div>\r\n        </div>\r\n        <div class=\"box_list p-0 mx-2 mb-3 bg-white rounded col-lg col-md col-sm col-12\">\r\n          <div class=\"col telemedicine p-0 py-3 px-1 text-left\">\r\n            <i class=\"fa fa-arrow-right\" aria-hidden=\"true\">\r\n              <a (click)=\"goToLink(2)\" style=\"color: blue; font-size: 12px;\"> Modification in Medicine List</a>\r\n            </i>\r\n            \r\n          </div>\r\n        </div>\r\n        <div class=\"box_list p-0 mx-2 mb-3 bg-white rounded col-lg col-md col-sm col-12\">\r\n          <div class=\"col telemedicine p-0 py-3 px-1 text-left\">\r\n            <i class=\"fa fa-arrow-right\" aria-hidden=\"true\">\r\n              <a (click)=\"goToLink(3)\" style=\"color: blue; font-size: 12px;\"> FAQs on Telemedicine Practice Guidelines</a>\r\n            </i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n    \r\n  </div>\r\n  <!-- Telimedicine -->\r\n</div>\r\n<!-- DashBoard View -->","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'ngx-modal',\r\n  templateUrl: './modal.component.html',\r\n  styleUrls: ['./modal.component.scss']\r\n})\r\nexport class ModalComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<ModalComponent>) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  actionFunction() {\r\n    alert(\"Symptom name & Icon updated\");\r\n    this.closeModal();\r\n  }\r\n\r\n  closeModal() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div id=\"modal-content-wrapper\">\r\n    <header id=\"modal-header\">\r\n        <h1 id=\"modal-title\">Add Symptom</h1>\r\n    </header>\r\n    <section id=\"modal-body\">\r\n        <form action=\"\">\r\n            <div class=\"form-group\">\r\n                <input type=\"Text\" class=\"form-control\" placeholder=\"Symptom Name\">\r\n            </div>\r\n            <div class=\"custom-file\">\r\n                <input type=\"file\" class=\"custom-file-input\" id=\"inputGroupFile01\" aria-describedby=\"inputGroupFileAddon01\">\r\n                <label class=\"custom-file-label\" for=\"inputGroupFile01\">Choose file</label>\r\n            </div>\r\n        </form>\r\n    </section>\r\n    <footer id=\"modal-footer\">\r\n        <button mat-raised-button id=\"modal-action-button\" (click)=\"actionFunction()\">\r\n            Submit\r\n        </button>\r\n        <button mat-raised-button id=\"modal-cancel-button\" (click)=\"closeModal()\">\r\n            Cancel\r\n        </button>\r\n    </footer>\r\n</div>","import { NbMenuItem } from '@nebular/theme';\r\n\r\n\r\nexport const MENU_ITEMS: NbMenuItem[] = [\r\n  {\r\n    title: 'Dashboard',\r\n    icon: 'home-outline',\r\n    link: '/pages/dashboard',\r\n    home: true,\r\n  },\r\n  {\r\n    title: 'Masters',\r\n    icon: 'keypad-outline',\r\n    link: '/pages/tables',\r\n    children: [\r\n      {\r\n        title: 'Access Control',\r\n        link: '/pages/tables/access-control',\r\n      },\r\n      {\r\n        title: 'Language',\r\n        link: '/pages/tables/language-speak',\r\n      },\r\n      // {\r\n      //   title: 'Payment Settings',\r\n      //   link: '/pages/tables/payment-settings',\r\n      // },\r\n      {\r\n        title: 'Symptoms',\r\n        link: '/pages/tables/contact-list',\r\n      },\r\n      {\r\n        title: 'Specialization',\r\n        link: '/pages/tables/specilization',\r\n      },\r\n      {\r\n        title: 'Users',\r\n        link: '/pages/tables/users',\r\n      },\r\n      {\r\n        title: 'Verification',\r\n        link: '/pages/tables/verifi-check-list',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: 'Hospital',\r\n    icon: 'home',\r\n    link: '/pages/charts/d3',\r\n  },\r\n  {\r\n    title: 'Doctor',\r\n    icon: 'person-add-outline',\r\n    link: '/pages/layout/stepper',\r\n  },\r\n \r\n  // {\r\n  //   title: 'Doctors',\r\n  //   icon: 'person-add-outline',\r\n  //   link: '/pages/layout/doctors/:id',\r\n  // },\r\n  {\r\n    title: 'Patient',\r\n    icon: 'people',\r\n    link: '/pages/charts/echarts',\r\n  },\r\n  // {\r\n  //   title: 'Patient-Profile',\r\n  //   icon: 'people',\r\n  //   link: '/pages/charts/patient-profile',\r\n  // },\r\n  {\r\n    title: 'Consultation',\r\n    icon: 'external-link',\r\n    link: '/pages/charts/consultation',\r\n  },\r\n  // {\r\n  //   title: 'consultation-update',\r\n  //   icon: 'external-link',\r\n  //   link: '/pages/charts/consultation-update',\r\n  // },\r\n  {\r\n    title: 'Transaction History',\r\n    icon: 'credit-card-outline',\r\n    link: '/pages/payment/payment-option',\r\n  },\r\n  // {\r\n  //   title: 'Reports',\r\n  //   icon: 'text-outline',\r\n  //   link: '/pages/charts/report',\r\n  // },\r\n   {\r\n    title: 'Logout',\r\n    icon: 'log-in',\r\n    link: '../auth/login',\r\n  },\r\n];\r\n","\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { PagesComponent } from './pages.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: PagesComponent,\r\n  children: [\r\n    {\r\n      path: 'dashboard',\r\n      component: DashboardComponent,\r\n    },\r\n    {\r\n      path: 'layout',\r\n      loadChildren: () => import('./layout/layout.module')\r\n        .then(m => m.LayoutModule),\r\n    },\r\n    {\r\n      path: 'charts',\r\n      loadChildren: () => import('./charts/charts.module')\r\n        .then(m => m.ChartsModule),\r\n    },\r\n    {\r\n      path: 'payment',\r\n      loadChildren: () => import('./payment/payment.module')\r\n        .then(m => m.PaymentModule),\r\n    },\r\n    {\r\n      path: 'editors',\r\n      loadChildren: () => import('./editors/editors.module')\r\n        .then(m => m.EditorsModule),\r\n    },\r\n    {\r\n      path: 'tables',\r\n      loadChildren: () => import('./tables/tables.module')\r\n        .then(m => m.TablesModule),\r\n    },\r\n    {\r\n      path: '',\r\n      redirectTo: 'dashboard',\r\n      pathMatch: 'full',\r\n    },\r\n  ],\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PagesRoutingModule {\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { MENU_ITEMS } from './pages-menu';\r\nimport { DoctorService } from './../api/doctor.service';\r\n\r\n@Component({\r\n  selector: 'ngx-pages',\r\n  styleUrls: ['pages.component.scss'],\r\n  template: `\r\n    <ngx-one-column-layout>\r\n      <nb-menu [items]=\"menu\"></nb-menu>\r\n      <router-outlet></router-outlet>\r\n    </ngx-one-column-layout>\r\n  `,\r\n})\r\nexport class PagesComponent {\r\n admin:boolean=true;\r\n constructor(private doctorService: DoctorService) { }\r\n\r\n ngOnInit(): void {\r\n  // if(this.admin){\r\n  //   this.menu = MENU_ITEMS.filter((item) => item.title !== \"Masters\")\r\n  // }\r\n  this.me();\r\n}\r\naccestype:string;\r\nmasterpermission:string;\r\nhospitalpermission:string\r\ndashboardpermission:string;\r\nconsultationpermission:string\r\nme(){\r\n  this.doctorService.doctorDetailsbysessionID().subscribe(response=> {\r\n  if(response.status == 200){\r\n  console.log(\"ME API\");\r\n console.log(response.res.accestype)\r\n console.log(\"ME API\");\r\n\r\n  this.accestype = response.res.accestype;\r\n \r\n  this.getaccesslist();\r\n\r\n  \r\n  \r\n  }\r\n})\r\n}\r\ngetaccesslist()   {\r\n\r\nthis.doctorService.getaccesslist().subscribe((access) => {\r\nconsole.log(access.response);\r\n\r\nvar master = access.response.filter(ele => ele.page == \"master\");\r\n//var hospital = access.response.filter(ele => ele.page == \"hospital\");\r\nvar hospital = access.response.filter(ele => ele.page == \"verifydoctor\");\r\nvar dashboard = access.response.filter(ele => ele.page == \"dashboard\");\r\nvar consultation = access.response.filter(ele => ele.page == \"consultation\");\r\n\r\nconsole.log(master);\r\n\r\n// if(this.accestype == 'hospitalauthority') {\r\n//   this.masterpermission = master[0].hospitalauthority;\r\n//   this.hospitalpermission = hospital[0].hospitalauthority;\r\n\r\n//   this.masterpermission = master[0].admin;\r\n//  this.hospitalpermission = hospital[0].admin;\r\n\r\n// }\r\nif(this.accestype == 'admin') {\r\n  console.log(\"adminnnnnnnnnn\")\r\n  this.masterpermission = master[0].admin;\r\n  this.hospitalpermission = hospital[0].admin;\r\n\r\n  this.dashboardpermission = dashboard[0].admin;\r\n  this.consultationpermission = consultation[0].admin;\r\n  console.log(this.masterpermission, this.hospitalpermission, this.masterpermission, this.consultationpermission)\r\n};\r\n\r\nif(this.accestype == 'doctor'){\r\n   this.masterpermission = master[0].doctor;\r\n   this.hospitalpermission = hospital[0].doctor;\r\n\r\n   this.dashboardpermission = dashboard[0].doctor;\r\n   this.consultationpermission = consultation[0].doctor;\r\n   //alert(\"1.MASTER : \" + this.masterpermission + \"2.HOSPITAL :\" + this.hospitalpermission + \"3.DASH :\" + this.hospitalpermission + \"4.CON :\" + this.consultationpermission);\r\n  // alert(this.masterpermission);\r\n  //console.log(this.masterpermission, this.hospitalpermission, this.masterpermission, this.consultationpermission)\r\n\r\n  }\r\nif(this.accestype == 'verifiedauthority'){ \r\n  this.masterpermission = master[0].verifiedauthority;\r\n  this.hospitalpermission = hospital[0].verifiedauthority;\r\n\r\n  this.dashboardpermission = dashboard[0].verifiedauthority;\r\n this.consultationpermission = consultation[0].verifiedauthority;\r\n\r\n  \r\n}\r\n\r\nif(this.accestype == 'madicalauthority') {\r\n  this.masterpermission = master[0].madicalauthority\r\n  this.hospitalpermission = hospital[0].madicalauthority;\r\n\r\n  this.dashboardpermission = dashboard[0].madicalauthority;\r\n this.consultationpermission = consultation[0].madicalauthority;\r\n\r\n}\r\nif(this.accestype == 'hospitaladmin') {\r\n  this.masterpermission = master[0].hospitaladmin\r\n  this.hospitalpermission = hospital[0].hospitaladmin;\r\n\r\n  this.dashboardpermission = dashboard[0].hospitaladmin;\r\n this.consultationpermission = consultation[0].hospitaladmin;\r\n\r\n}\r\nif(this.accestype == 'branchadmin') {\r\n  this.masterpermission = master[0].branchadmin\r\n  this.hospitalpermission = hospital[0].branchadmin;\r\n\r\n\r\n  this.dashboardpermission = dashboard[0].branchadmin;\r\n this.consultationpermission = consultation[0].branchadmin;\r\n}\r\n\r\n\r\n\r\n\r\nconsole.log(this.masterpermission, this.hospitalpermission, this.dashboardpermission, this.masterpermission, this.consultationpermission)\r\n\r\nif(this.masterpermission == 'no' && this.hospitalpermission == 'no' && this.dashboardpermission == 'no' && this.consultationpermission == 'no'){\r\n  this.menu = MENU_ITEMS.filter((item) => (item.title !== \"Masters\" && item.title !== \"Hospital\" && item.title !== \"Dashboard\" && item.title !== \"Consultation\")) \r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n}else if(this.masterpermission == 'no' && this.hospitalpermission == 'no' && this.dashboardpermission == 'no'){\r\n  this.menu = MENU_ITEMS.filter((item) => (item.title !== \"Masters\" && item.title !== \"Hospital\" && item.title !== \"Dashboard\" )) \r\n\r\n  \r\n}else if(this.masterpermission == 'no' && this.hospitalpermission == 'no' && this.consultationpermission == 'no'){\r\n  this.menu = MENU_ITEMS.filter((item) => (item.title !== \"Masters\" && item.title !== \"Hospital\" && item.title !== \"Consultation\")) \r\n\r\n\r\n}else if(this.masterpermission == 'no' && this.dashboardpermission == 'no' && this.consultationpermission == 'no'){\r\n  this.menu = MENU_ITEMS.filter((item) => (item.title !== \"Dashboard\" && item.title !== \"Masters\" && item.title !== \"Consultation\")) \r\n\r\n\r\n}else if(this.dashboardpermission == 'no' && this.hospitalpermission == 'no' && this.consultationpermission == 'no'){\r\n  this.menu = MENU_ITEMS.filter((item) => (item.title !== \"Dashboard\" && item.title !== \"Hospital\" && item.title !== \"Consultation\")) \r\n\r\n\r\n}else if(this.masterpermission == 'no' && this.hospitalpermission == 'no'){\r\n  this.menu = MENU_ITEMS.filter((item) => (item.title !== \"Masters\" && item.title !== \"Hospital\" )) \r\n\r\n  \r\n}else if(this.masterpermission == 'no' && this.consultationpermission == 'no'){\r\n  this.menu = MENU_ITEMS.filter((item) => (item.title !== \"Masters\"  && item.title !== \"Consultation\")) \r\n\r\n  \r\n}else if(this.masterpermission == 'no' && this.dashboardpermission == 'no'){\r\n  this.menu = MENU_ITEMS.filter((item) => (item.title !== \"Dashboard\" && item.title !== \"Masters\")) \r\n  \r\n}else if(this.hospitalpermission == 'no' && this.dashboardpermission == 'no'){\r\n  this.menu = MENU_ITEMS.filter((item) => (item.title !== \"Dashboard\" && item.title !== \"Hospital\")) \r\n  \r\n}else if(this.hospitalpermission == 'no' && this.consultationpermission == 'no'){\r\n  this.menu = MENU_ITEMS.filter((item) => (item.title !== \"Hospital\" && item.title !== \"Consultation\")) \r\n  \r\n}else if(this.hospitalpermission == 'no' && this.dashboardpermission == 'no'){\r\n  this.menu = MENU_ITEMS.filter((item) => (item.title !== \"Hospital\" && item.title !== \"Hospital\")) \r\n  \r\n}else if(this.dashboardpermission == 'no' && this.consultationpermission == 'no'){\r\n  this.menu = MENU_ITEMS.filter((item) => (item.title !== \"Dashboard\" && item.title !== \"Consultation\")) \r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}else if(this.masterpermission == 'no'){\r\n  this.menu = MENU_ITEMS.filter((item) => (item.title !== \"Masters\")) \r\n\r\n\r\n}else if( this.hospitalpermission == 'no'){\r\n  this.menu = MENU_ITEMS.filter((item) => (item.title !== \"Hospital\")) \r\n\r\n\r\n}else if( this.dashboardpermission == 'no'){\r\n  this.menu = MENU_ITEMS.filter((item) => (item.title !== \"Dashboard\")) \r\n\r\n\r\n}else if( this.consultationpermission == 'no'){\r\n  this.menu = MENU_ITEMS.filter((item) => (item.title !== \"Consultation\")) \r\n\r\n\r\n} else {\r\n\r\n\r\n   this.menu = MENU_ITEMS;\r\n}\r\n\r\n\r\n//    console.log(data)\r\n//    this.masterpermission= data.masterpermission;\r\n//         access.response.forEach((obj, index) => {\r\n// // console.log(obj)\r\n//         })\r\n})\r\n}\r\n  menu = MENU_ITEMS;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { NbMenuModule, NbSelectModule, NbPopoverModule, NbTabsetModule } from '@nebular/theme';\r\nimport { ThemeModule } from '../@theme/theme.module';\r\nimport { PagesComponent } from './pages.component';\r\nimport { PagesRoutingModule } from './pages-routing.module';\r\nimport { TablesModule } from './tables/tables.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { ModalComponent } from './modal/modal.component';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { PatientsComponent } from './patients/patients.component';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule} from '@angular/forms';\r\nimport {  MatSelectModule } from '@angular/material/select';\r\n\r\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\r\n\r\n@NgModule({\r\n  imports: [\r\n    PagesRoutingModule,\r\n    ThemeModule,\r\n    NbMenuModule,\r\n    NgxMatSelectSearchModule,\r\n    MatSelectModule,\r\n    TablesModule,\r\n    FormsModule,\r\n    MatFormFieldModule,\r\n    ReactiveFormsModule,\r\n    Ng2SmartTableModule,\r\n    NbSelectModule,\r\n    NbPopoverModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    NbTabsetModule,\r\n  ],\r\n  declarations: [\r\n    PagesComponent,\r\n    ModalComponent,\r\n    PatientsComponent,\r\n  ],\r\n  providers: [\r\n    { provide: MatFormFieldModule, useValue: { appearance: 'fill' } },\r\n  ]\r\n})\r\nexport class PagesModule {\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-patients',\r\n  templateUrl: './patients.component.html',\r\n  styleUrls: ['./patients.component.scss']\r\n})\r\nexport class PatientsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>patients works!</p>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { DoctorService } from './../../../api/doctor.service';\r\nimport { MatPaginator, } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort } from '@angular/material/sort';\r\n\r\n@Component({\r\n  selector: 'ngx-access-control',\r\n  templateUrl: './access-control.component.html',\r\n  styleUrls: ['./access-control.component.scss']\r\n})\r\nexport class AccessControlComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['position', 'name', 'email', 'userType', 'doctor','hospitaladmin', 'branchadmin']; \r\n \r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  \r\n  dataSource: any;\r\n  constructor(\r\n    private doctorService: DoctorService,\r\n    public matDialog: MatDialog,\r\n\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getaccesslist()\r\n\r\n  }\r\n\r\n  getaccesslist() {\r\n    this.doctorService.getaccesslist().subscribe((access) => {\r\n\r\n      access.response.forEach((obj, index) => {\r\n      \r\n    });\r\n    console.log(access.response)\r\n    this.dataSource =access.response;\r\n    this.dataSource = new MatTableDataSource<PeriodicElement>(this.dataSource);\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n      \r\n    \r\n    });\r\n  }\r\n\r\n  savesccess(){\r\n\r\n  // var data = [{\"_id\":\"5f99330b71f7c43ffc0bc0b7\",\"id\":1,\"page\":\"dashboard\",\"admin\":\"no\",\"madicalauthority\":\"yes\",\"verifiedauthority\":\"yes\",\"hospitalauthority\":\"no\", \"doctor\": \"no\",\"hospitaladmin\":\"no\",\"branchadmin\":\"no\"},{\"_id\":\"5f993810983455d0ae7049be\",\"id\":2,\"page\":\"master\",\"admin\":\"yes\",\"madicalauthority\":\"yes\",\"verifiedauthority\":\"yes\",\"hospitalauthority\":\"no\", \"doctor\": \"no\",\"hospitaladmin\":\"no\",\"branchadmin\":\"no\"},{\"_id\":\"5f993825983455d0ae7049bf\",\"id\":3,\"page\":\"consultation\",\"admin\":\"no\",\"madicalauthority\":\"yes\",\"verifiedauthority\":\"yes\",\"hospitalauthority\":\"no\", \"doctor\": \"no\",\"hospitaladmin\":\"no\",\"branchadmin\":\"no\"}, {\"_id\":\"5f993825983455d0ae7049bd\",\"id\":4,\"page\":\"verifydoctor\",\"admin\":\"no\",\"madicalauthority\":\"yes\",\"verifiedauthority\":\"yes\",\"hospitalauthority\":\"no\", \"doctor\": \"no\",\"hospitaladmin\":\"no\",\"branchadmin\":\"no\"}, {\"_id\":\"5f993825983455d0ae7049bS\",\"id\":5,\"page\":\"hospital\",\"admin\":\"no\",\"madicalauthority\":\"yes\",\"verifiedauthority\":\"yes\",\"hospitalauthority\":\"no\", \"doctor\": \"no\",\"hospitaladmin\":\"no\",\"branchadmin\":\"no\"}]\r\nthis.doctorService.saveaccesslist(this.dataSource._data._value).subscribe((access) => {\r\n     \r\n// this.doctorService.saveaccesslist(data).subscribe((access) => {\r\n        window.location.reload();\r\n        \r\n      })\r\n  }\r\n\r\n \r\n\r\n}\r\n\r\n\r\nexport interface PeriodicElement {\r\n  _id: string;\r\n  name: string;\r\n  email: string;\r\n  userType: string;\r\n  id: string;\r\n  status: string;\r\n}","<!-- Specilazation View -->\r\n<div class=\"wrapper  m-1 position-relative\">\r\n    <div size=\"\" accent=\"info\" class=\"bg-none mx-1\">\r\n      <!-- Header -->\r\n      <div class=\"d-flex flex-direction-row justify-content-between w-100 align-items-center head\">\r\n        <div class=\"symptom-head\">\r\n          <span>Access Control</span>\r\n        </div>\r\n       \r\n      </div>\r\n      <!-- Header -->\r\n  \r\n      <!-- Table Box View -->\r\n      <div class=\"bg-white  table-top\">\r\n        <!-- Search View -->\r\n        <div class=\"main d-flex justyfy-content-end aligin-items-center\">\r\n          <div id=\"custom-search-input mb-2\" style=\"z-index: 9999;\">\r\n            <div class=\"input-group mb-2\">\r\n              <input type=\"text\" class=\"  search-query form-control\" placeholder=\"Search\"\r\n                style=\"font-size: 12px;\"/>\r\n              <span class=\"input-group-btn btn btn-primary mr-2 btn-search\">\r\n                  <i class=\"fas fa-search \" aria-hidden=\"true\" ></i>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- Search View -->\r\n        <!-- Table View -->\r\n        <div class=\"col col-lg col-md col-sm m-0 p-0 justyfy-content-center align-items-center table-scroll\">\r\n        <table mat-table [dataSource]=\"dataSource\" matSort class=\" table-view\">\r\n          <ng-container matColumnDef=\"position\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-head\">Pages</th>\r\n            <td mat-cell *matCellDef=\"let element\">{{element.page | titlecase}}</td>\r\n          </ng-container>\r\n    \r\n          <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-head\">Admin</th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <select class=\"form-control inthight\" [(ngModel)]=\"element.admin\" data-name=\"admin_user\">\r\n                    <option value=\"no\">No</option>\r\n                    <option value=\"yes\">Yes</option>\r\n                </select>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"email\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-head\">Medical Authority</th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <select class=\"selectRole form-control inthight\" [(ngModel)]=\"element.madicalauthority\" data-value=\"0\" data-id=\"21\" data-name=\"admin_user\">\r\n                  <option value=\"no\">No</option>\r\n                  <option value=\"yes\">Yes</option>\r\n                </select>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"userType\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-head\">Verifying Authority</th>\r\n            <td mat-cell *matCellDef=\"let element\">  \r\n                <select class=\"selectRole form-control inthight\" [(ngModel)]=\"element.verifiedauthority\"data-value=\"0\" data-id=\"21\" data-name=\"admin_user\">\r\n                  <option value=\"no\">No</option>\r\n                  <option value=\"yes\">Yes</option>\r\n                </select>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"doctor\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-head\">Doctor</th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <select class=\"selectRole form-control inthight\" [(ngModel)]=\"element.doctor\" data-value=\"0\" data-id=\"21\" data-name=\"admin_user\">\r\n                  <option value=\"no\">No</option>\r\n                  <option value=\"yes\">Yes</option>\r\n                </select>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <!-- <ng-container matColumnDef=\"symbol\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-head\">Hospital Authority</th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <select class=\"selectRole form-control inthight\" [(ngModel)]=\"element.hospitalauthority\" data-value=\"0\" data-id=\"21\" data-name=\"admin_user\">\r\n                  <option value=\"no\">No</option>\r\n                  <option value=\"yes\">Yes</option>\r\n                </select>\r\n            </td>\r\n          </ng-container> -->\r\n          <ng-container matColumnDef=\"hospitaladmin\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-head\">Hospital Admin</th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <select class=\"selectRole form-control inthight\" [(ngModel)]=\"element.hospitaladmin\" data-value=\"0\" data-id=\"21\" data-name=\"admin_user\">\r\n                  <option value=\"no\">No</option>\r\n                  <option value=\"yes\">Yes</option>\r\n                </select>\r\n            </td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"branchadmin\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-head\">Branch Admin</th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <select class=\"selectRole form-control inthight\" [(ngModel)]=\"element.branchadmin\" data-value=\"0\" data-id=\"21\" data-name=\"admin_user\">\r\n                  <option value=\"no\">No</option>\r\n                  <option value=\"yes\">Yes</option>\r\n                </select>\r\n            </td>\r\n          </ng-container>\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n        </div>\r\n        <!-- Table View -->\r\n        <!-- pagination -->\r\n        <mat-paginator [pageSizeOptions]=\"[10, 15, 20, 50]\" showFirstLastButtons></mat-paginator>\r\n        <!-- pagination -->\r\n      </div>\r\n      <!-- Table Box View -->\r\n    </div>\r\n  </div>\r\n  <div class=\"row m-0 p-0  px-2\">\r\n    <div class=\"col-lg col-md col-sm col-12 mb-1\">\r\n      <div class=\"column\">\r\n        <div class=\"card-body p-0\">\r\n          <button type=\"submit\" class=\"btn btn-primary btn-sm  \r\n          float-right\" (click)=\"savesccess()\">Submit</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- Specilazation View -->\r\n","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { DoctorService } from './../../../api/doctor.service';\r\nimport { MatPaginator, } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { ModalComponent } from '../../modal/modal.component';\r\nimport { EditPopupComponent } from './edit-popup/edit-popup.component';\r\nimport { DeletePopupComponent } from './delete-popup/delete-popup.component';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'ngx-contact-list',\r\n  templateUrl: './contact-list.component.html',\r\n  styleUrls: ['./contact-list.component.scss']\r\n})\r\nexport class ContactListComponent implements OnInit {\r\n\r\n  myForm = new FormGroup({\r\n    name: new FormControl('', [Validators.required, Validators.minLength(3)]),\r\n    file: new FormControl('', [Validators.required]),\r\n    fileSource: new FormControl('', [Validators.required])\r\n  });\r\n  status: boolean = false;\r\n  statusedit:boolean = false;\r\n  editsymptomname:any;\r\n  fileToUpload: File = null;\r\n  displayFile:any = \"Upload Symptom File\"\r\n  displayFileedit:any;\r\n  symptomEdit_id:any;\r\n  fileupdate:boolean = false;\r\n  symptom_delete:string;\r\n  editsymptomstatus:string='active';\r\n  symptomstatus:string='active'\r\n\r\n  deleteit:boolean=false;\r\n  constructor(private toastr: ToastrService,private doctorService: DoctorService, public matDialog: MatDialog) { }\r\n\r\n  showhidebox() {\r\n    this.status = !this.status;\r\n    this.statusedit = false;\r\n\r\n  }\r\n  showhideboxeditcancel(){\r\n    this.statusedit = false;\r\n    this.status = false;\r\n\r\n\r\n  }\r\n  \r\n  showhideboxedit(element){\r\n    console.log(element)\r\n    this.symptomEdit_id  =element._id;\r\n    this.statusedit = !this.statusedit;\r\n    this.status = false;\r\n\r\n    this.editsymptomname =element.sym_name;\r\n    this.displayFileedit= element.sym_icon.substring(element.sym_icon.lastIndexOf('/') + 1,element.sym_icon.length);\r\n\r\n  }\r\n  openModaledit(){\r\n    console.log(\"=======\")\r\n\r\n    console.log(this.fileupdate)\r\n    console.log(\"=======\")\r\n\r\n    if(!this.fileupdate){\r\n      var update={\"_id\":this.symptomEdit_id,\"sym_name\":this.editsymptomname, 'status':this.editsymptomstatus}\r\n      this.doctorService.updatesymptom(update).subscribe((symptom: any) => {\r\n        this.symptomname=\"\";\r\n        this.fileToUpload=null;\r\n        this.toastr.success('Succesfully Updated');\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        \r\n        }, 1110);\r\n            })\r\n    }else{\r\n      const formData = new FormData();\r\n      let data =this.myForm.get('fileSource').value;\r\n      formData.append('icon', this.myForm.get('fileSource').value);\r\n      formData.append('sym_name', this.editsymptomname);\r\n      formData.append('_id', this.symptomEdit_id);\r\n      formData.append('status', this.editsymptomstatus);\r\n\r\n  \r\n      \r\n  \r\n      this.doctorService.updatesymptom(formData).subscribe((symptom: any) => {\r\n        this.symptomname=\"\";\r\n        this.fileToUpload=null;\r\n        this.toastr.success('Succesfully Updated');\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        \r\n        }, 1110);\r\n            })\r\n    }\r\n  }\r\n  openModal() {\r\n    // const dialogConfig = new MatDialogConfig();\r\n    // dialogConfig.disableClose = true;\r\n    // dialogConfig.id = \"modal-component\";\r\n    // dialogConfig.height = \"350px\";\r\n    // dialogConfig.width = \"600px\";\r\n    // const modalDialog = this.matDialog.open(ModalComponent, dialogConfig);\r\n    const formData = new FormData();\r\n    let data =this.myForm.get('fileSource').value;\r\n    formData.append('icon', this.myForm.get('fileSource').value);\r\n    formData.append('symptom', this.symptomname);\r\n    formData.append('status', this.symptomstatus);\r\n\r\n    \r\n\r\n    this.doctorService.addsymptom(formData).subscribe((symptom: any) => {\r\n      this.symptomname=\"\";\r\n      this.fileToUpload=null;\r\n      this.toastr.success('Succesfully Added');\r\n      setTimeout(() => {\r\n\r\n      window.location.reload();\r\n    }, 1110);    })\r\n  }\r\n  onFileChange(event) {\r\n  \r\n    if (event.target.files.length > 0) {\r\n      const file = event.target.files[0];\r\n      this.myForm.patchValue({\r\n        fileSource: file\r\n      });\r\n    }\r\n  }\r\n\r\n  handleFileInputedit(event) {\r\n    // this.fileToUpload = files.item(0);\r\n    if(event.target.files[0].size < 1000000){\r\n\r\n    this.fileupdate =true;\r\n    console.log(event.target.files[0].name)\r\n   this.displayFileedit = event.target.files[0].name;\r\n    if (event.target.files.length > 0) {\r\n      const file = event.target.files[0];\r\n      this.myForm.patchValue({\r\n        fileSource: file\r\n      });\r\n      console.log(this.myForm)\r\n    }\r\n  }else{\r\n    this.toastr.info('Icon size is large!');\r\n\r\n  }\r\n}\r\n  handleFileInput(event) {\r\n    // this.fileToUpload = files.item(0);\r\n    if(event.target.files[0].size < 1000000){\r\n\r\n    console.log(event.target.files[0].name)\r\n   this.displayFile = event.target.files[0].name;\r\n    if (event.target.files.length > 0) {\r\n      const file = event.target.files[0];\r\n      this.myForm.patchValue({\r\n        fileSource: file\r\n      });\r\n      console.log(this.myForm)\r\n    }\r\n  }else{\r\n    this.toastr.info('Icon size is large!');\r\n\r\n  }\r\n}\r\nget f(){\r\n  return this.myForm.controls;\r\n}\r\n   \r\n  editModal() {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.disableClose = true;\r\n    dialogConfig.id = \"modal-component\";\r\n    dialogConfig.height = \"350px\";\r\n    dialogConfig.width = \"600px\";\r\n    const modalDialog = this.matDialog.open(EditPopupComponent, dialogConfig);\r\n  }\r\n\r\n  deleteModal() {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.disableClose = true;\r\n    dialogConfig.id = \"modal-component\";\r\n    dialogConfig.height = \"350px\";\r\n    dialogConfig.width = \"600px\";\r\n    const modalDialog = this.matDialog.open(DeletePopupComponent, dialogConfig);\r\n  }\r\n\r\n  symptoms: any;\r\n  dataSource: any;\r\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol', 'delete'];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  symptomlist: Array<any> = [\r\n    { code: 'p1', name: 'Covid19', status: 'Active' },\r\n    { code: 'p2', name: 'Cardio', status: 'Active' },\r\n    { code: 'p3', name: 'Cancer', status: 'Active' },\r\n    { code: 'p4', name: 'Urology', status: 'Active' },\r\n\r\n  ];\r\n\r\n\r\n\r\nsymptomname :any='';\r\nsymptomfile:any='';\r\n\r\n  ngOnInit(): void {\r\n    this.getSymptomsList();\r\n    // this.dataSource.paginator = this.paginator;\r\n    // this.dataSource.sort = this.sort;\r\n\r\n  }\r\n  ngAfterViewInit(): void {\r\n    // this.dataSource.sort = this.sort;\r\n    // this.dataSource.paginator = this.paginator;\r\n\r\n  }\r\n\r\n  \r\n  public doFilter = (value: string) => {\r\n    this.dataSource.filter = value.trim().toLocaleLowerCase();\r\n  }\r\n  addNewSymptom(event: any) {\r\n    this.symptomlist.push(event);\r\n  }\r\n\r\n  getSymptomsList() {\r\n    this.doctorService.getSymptomsList().subscribe((symptoms) => {\r\n    //   console.log(\"---symptoms----\");\r\n    //   console.log(symptoms.response);\r\n\r\n    symptoms.response.forEach((obj, index) => {\r\n      if(obj.sym_icon.length < 30) {obj.sym_icon =\"https://testpanoeditor.s3-ap-southeast-1.amazonaws.com/doctorsetu/symptoms/\"+obj.sym_icon;}\r\n\r\n      obj.sl_num = index+1;\r\n\r\n    });\r\n    this.symptoms= symptoms.response;\r\n    this.dataSource= symptoms.response;\r\n    // this.symptoms = [{ \"_id\": \"5f2936e8c617f86518bb02e7\", \"sym_name\": \"Covid19\", \"sym_desc\": \"\", \"sym_icon\": \"covid19.png\", \"sym_status\": \"active\" }, { \"_id\": \"5f2936fdc617f86518bb02e8\", \"sym_name\": \"Anxiety\", \"sym_desc\": \"\", \"sym_icon\": \"Anxiety.png\", \"sym_status\": \"active\" }, { \"_id\": \"5f293708c617f86518bb02e9\", \"sym_name\": \"Back Pain\", \"sym_desc\": \"\", \"sym_icon\": \"Back-Pain.png\", \"sym_status\": \"active\" }, { \"_id\": \"5f29371cc617f86518bb02ea\", \"sym_name\": \"Body Pain\", \"sym_desc\": \"\", \"sym_icon\": \"Body-Pain.png\", \"sym_status\": \"active\" }, { \"_id\": \"5f293729c617f86518bb02eb\", \"sym_name\": \"ColdCough\", \"sym_desc\": \"\", \"sym_icon\": \"ColdCough.png\", \"sym_status\": \"active\" }, { \"_id\": \"5f293736c617f86518bb02ec\", \"sym_name\": \"Constipation\", \"sym_desc\": \"\", \"sym_icon\": \"Constipation.png\", \"sym_status\": \"active\" }, { \"_id\": \"5f2937b1c617f86518bb02f0\", \"sym_name\": \"Fever\", \"sym_desc\": \"\", \"sym_icon\": \"Fever.png\", \"sym_status\": \"active\" }, { \"_id\": \"5f2937e3c617f86518bb02f3\", \"sym_name\": \"Headache\", \"sym_desc\": \"\", \"sym_icon\": \"Headache.png\", \"sym_status\": \"active\" }, { \"_id\": \"5f29384dc617f86518bb02f9\", \"sym_name\": \"Pregnancy Related\", \"sym_desc\": \"\", \"sym_icon\": \"Pregnancy-Related.png\", \"sym_status\": \"active\" }, { \"_id\": \"5f293871c617f86518bb02fb\", \"sym_name\": \"Skin Related\", \"sym_desc\": \"\", \"sym_icon\": \"Skin-Related.png\", \"sym_status\": \"active\" }, { \"_id\": \"5f29387ec617f86518bb02fc\", \"sym_name\": \"Stomach Ache\", \"sym_desc\": \"\", \"sym_icon\": \"Stomach-Ache.png\", \"sym_status\": \"active\" }, { \"_id\": \"5f29389bc617f86518bb02fd\", \"sym_name\": \"Tooth Pain\", \"sym_desc\": \"\", \"sym_icon\": \"Tooth-Pain.png\", \"sym_status\": \"active\" }, { \"_id\": \"5f2938a9c617f86518bb02fe\", \"sym_name\": \"Urinary Problem\", \"sym_desc\": \"\", \"sym_icon\": \"Urinary-Problem.png\", \"sym_status\": \"active\" }, { \"_id\": \"5f2938c3c617f86518bb0300\", \"sym_name\": \"Vomit Motion\", \"sym_desc\": \"\", \"sym_icon\": \"Vomit-Motion.png\", \"sym_status\": \"active\" }, { \"_id\": \"5f293b591d2776ac0b85afd4\", \"sym_name\": \"Throat Pain\", \"sym_desc\": \"\", \"sym_icon\": \"Throat-Pain.png\", \"sym_status\": \"active\" }, { \"_id\": \"5f2b9543bd85301473bf7e43\", \"sym_name\": \"Acidity\", \"sym_desc\": \"\", \"sym_icon\": \"Acidity.png\", \"sym_status\": \"active\" }];\r\n    // this.dataSource = [{ \"_id\": \"5f2936e8c617f86518bb02e7\", \"sym_name\": \"Covid19\", \"sym_desc\": \"\", \"sym_icon\": \"covid19.png\", \"sym_status\": \"active\" }, { \"_id\": \"5f2936fdc617f86518bb02e8\", \"sym_name\": \"Anxiety\", \"sym_desc\": \"\", \"sym_icon\": \"Anxiety.png\", \"sym_status\": \"active\" }, { \"_id\": \"5f293708c617f86518bb02e9\", \"sym_name\": \"Back Pain\", \"sym_desc\": \"\", \"sym_icon\": \"Back-Pain.png\", \"sym_status\": \"active\" }, { \"_id\": \"5f29371cc617f86518bb02ea\", \"sym_name\": \"Body Pain\", \"sym_desc\": \"\", \"sym_icon\": \"Body-Pain.png\", \"sym_status\": \"active\" }, { \"_id\": \"5f293729c617f86518bb02eb\", \"sym_name\": \"ColdCough\", \"sym_desc\": \"\", \"sym_icon\": \"ColdCough.png\", \"sym_status\": \"active\" }, { \"_id\": \"5f293736c617f86518bb02ec\", \"sym_name\": \"Constipation\", \"sym_desc\": \"\", \"sym_icon\": \"Constipation.png\", \"sym_status\": \"active\" }, { \"_id\": \"5f2937b1c617f86518bb02f0\", \"sym_name\": \"Fever\", \"sym_desc\": \"\", \"sym_icon\": \"Fever.png\", \"sym_status\": \"active\" }, { \"_id\": \"5f2937e3c617f86518bb02f3\", \"sym_name\": \"Headache\", \"sym_desc\": \"\", \"sym_icon\": \"Headache.png\", \"sym_status\": \"active\" }, { \"_id\": \"5f29384dc617f86518bb02f9\", \"sym_name\": \"Pregnancy Related\", \"sym_desc\": \"\", \"sym_icon\": \"Pregnancy-Related.png\", \"sym_status\": \"active\" }, { \"_id\": \"5f293871c617f86518bb02fb\", \"sym_name\": \"Skin Related\", \"sym_desc\": \"\", \"sym_icon\": \"Skin-Related.png\", \"sym_status\": \"active\" }, { \"_id\": \"5f29387ec617f86518bb02fc\", \"sym_name\": \"Stomach Ache\", \"sym_desc\": \"\", \"sym_icon\": \"Stomach-Ache.png\", \"sym_status\": \"active\" }, { \"_id\": \"5f29389bc617f86518bb02fd\", \"sym_name\": \"Tooth Pain\", \"sym_desc\": \"\", \"sym_icon\": \"Tooth-Pain.png\", \"sym_status\": \"active\" }, { \"_id\": \"5f2938a9c617f86518bb02fe\", \"sym_name\": \"Urinary Problem\", \"sym_desc\": \"\", \"sym_icon\": \"Urinary-Problem.png\", \"sym_status\": \"active\" }, { \"_id\": \"5f2938c3c617f86518bb0300\", \"sym_name\": \"Vomit Motion\", \"sym_desc\": \"\", \"sym_icon\": \"Vomit-Motion.png\", \"sym_status\": \"active\" }, { \"_id\": \"5f293b591d2776ac0b85afd4\", \"sym_name\": \"Throat Pain\", \"sym_desc\": \"\", \"sym_icon\": \"Throat-Pain.png\", \"sym_status\": \"active\" }, { \"_id\": \"5f2b9543bd85301473bf7e43\", \"sym_name\": \"Acidity\", \"sym_desc\": \"\", \"sym_icon\": \"Acidity.png\", \"sym_status\": \"active\" }];;\r\n\r\n    this.dataSource = new MatTableDataSource<PeriodicElement>(this.dataSource);\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n\r\n\r\n\r\n    })\r\n  }\r\n  symptom_id_delete:string;\r\n  removeSymptom(name: any, symptom_id) {\r\n      this.deleteit = true;\r\n      this.symptom_delete = name;\r\n      this.symptom_id_delete = symptom_id;\r\n      console.log(name);\r\n    //   this.doctorService.removeSymptom(name).subscribe(() => {\r\n    //   window.location.reload();\r\n\r\n    // })\r\n  }\r\n  closealert(){\r\n    this.deleteit=false;\r\n  }\r\n\r\n  deletesymptom(){\r\n    this.deleteit=false;\r\n\r\n    this.doctorService.removeSymptom(this.symptom_id_delete).subscribe(() => {\r\n      this.toastr.success('Succesfully Deleted');\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      \r\n      }, 1110);\r\n    })\r\n  }\r\n\r\n\r\n\r\n}\r\nexport interface PeriodicElement {\r\n  _id: string;\r\n  sym_name: string;\r\n  sym_desc: string;\r\n  sym_icon: string;\r\n  sym_status: string;\r\n}\r\n\r\n// const ELEMENT_DATA: PeriodicElement[] = [{\"_id\":\"5f2936e8c617f86518bb02e7\",\"sym_name\":\"Covid19\",\"sym_desc\":\"\",\"sym_icon\":\"covid19.png\",\"sym_status\":\"active\"},{\"_id\":\"5f2936fdc617f86518bb02e8\",\"sym_name\":\"Anxiety\",\"sym_desc\":\"\",\"sym_icon\":\"Anxiety.png\",\"sym_status\":\"active\"},{\"_id\":\"5f293708c617f86518bb02e9\",\"sym_name\":\"Back Pain\",\"sym_desc\":\"\",\"sym_icon\":\"Back-Pain.png\",\"sym_status\":\"active\"},{\"_id\":\"5f29371cc617f86518bb02ea\",\"sym_name\":\"Body Pain\",\"sym_desc\":\"\",\"sym_icon\":\"Body-Pain.png\",\"sym_status\":\"active\"},{\"_id\":\"5f293729c617f86518bb02eb\",\"sym_name\":\"ColdCough\",\"sym_desc\":\"\",\"sym_icon\":\"ColdCough.png\",\"sym_status\":\"active\"},{\"_id\":\"5f293736c617f86518bb02ec\",\"sym_name\":\"Constipation\",\"sym_desc\":\"\",\"sym_icon\":\"Constipation.png\",\"sym_status\":\"active\"},{\"_id\":\"5f2937b1c617f86518bb02f0\",\"sym_name\":\"Fever\",\"sym_desc\":\"\",\"sym_icon\":\"Fever.png\",\"sym_status\":\"active\"},{\"_id\":\"5f2937e3c617f86518bb02f3\",\"sym_name\":\"Headache\",\"sym_desc\":\"\",\"sym_icon\":\"Headache.png\",\"sym_status\":\"active\"},{\"_id\":\"5f29384dc617f86518bb02f9\",\"sym_name\":\"Pregnancy Related\",\"sym_desc\":\"\",\"sym_icon\":\"Pregnancy-Related.png\",\"sym_status\":\"active\"},{\"_id\":\"5f293871c617f86518bb02fb\",\"sym_name\":\"Skin Related\",\"sym_desc\":\"\",\"sym_icon\":\"Skin-Related.png\",\"sym_status\":\"active\"},{\"_id\":\"5f29387ec617f86518bb02fc\",\"sym_name\":\"Stomach Ache\",\"sym_desc\":\"\",\"sym_icon\":\"Stomach-Ache.png\",\"sym_status\":\"active\"},{\"_id\":\"5f29389bc617f86518bb02fd\",\"sym_name\":\"Tooth Pain\",\"sym_desc\":\"\",\"sym_icon\":\"Tooth-Pain.png\",\"sym_status\":\"active\"},{\"_id\":\"5f2938a9c617f86518bb02fe\",\"sym_name\":\"Urinary Problem\",\"sym_desc\":\"\",\"sym_icon\":\"Urinary-Problem.png\",\"sym_status\":\"active\"},{\"_id\":\"5f2938c3c617f86518bb0300\",\"sym_name\":\"Vomit Motion\",\"sym_desc\":\"\",\"sym_icon\":\"Vomit-Motion.png\",\"sym_status\":\"active\"},{\"_id\":\"5f293b591d2776ac0b85afd4\",\"sym_name\":\"Throat Pain\",\"sym_desc\":\"\",\"sym_icon\":\"Throat-Pain.png\",\"sym_status\":\"active\"},{\"_id\":\"5f2b9543bd85301473bf7e43\",\"sym_name\":\"Acidity\",\"sym_desc\":\"\",\"sym_icon\":\"Acidity.png\",\"sym_status\":\"active\"}];\r\n\r\n","<!-- Symptom View -->\r\n<div class=\"wrapper  m-1 position-relative\">\r\n  <div size=\"\" accent=\"info\" class=\"bg-none mx-1\">\r\n    <!-- Symptom Head -->\r\n    <div class=\"d-flex flex-direction-row justify-content-between w-100 align-items-center head\">\r\n      <div class=\"symptom-head\">\r\n        <span>Symptom Details </span>\r\n      </div>\r\n      <button type=\"button\" class=\"btn btn-primary button btn-sm\" mat-raised-button (click)=\"showhidebox()\"\r\n        [ngClass]=\"status ? 'hide' : 'show'\">\r\n        + Add New\r\n      </button>\r\n    </div>\r\n    <!-- Symptom Head -->\r\n    <!-- Add View Fade -->\r\n    <div class=\"p-1 bg-white mt-1 rounded mb-1 px-2 box-view\" [ngClass]=\"statusedit ? 'show' : 'hide'\">\r\n      <div class=\"row\">\r\n        <div class=\"col-lg col-md col-sm col-12 mb-1\">\r\n          <p class=\" p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\"> Edit Symptom<span class=\"red-star\">*</span></p>\r\n          <div class=\"form-group p-0 m-0\">\r\n            <input type=\"Text\" class=\"form-control\" \r\n            placeholder=\"Upload Symptom Icon\" [(ngModel)]=\"editsymptomname\" style=\"font-size: 12px;\" maxlength=\"50\">\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg col-md col-sm col-12 mb-1\">\r\n          <p class=\"col-12  p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">Symptom icon <span class=\"red-star\">*</span></p>\r\n          <div class=\"form-group m-0 col\">\r\n            <input type=\"file\" id=\"file\" (change)=\"handleFileInputedit($event)\" accept=\"image/x-png,image/jpeg\"\r\n              class=\"custom-file-input\" \r\n              id=\"inputGroupFile01\" aria-describedby=\"inputGroupFileAddon01\" style=\"font-size: 12px;\">\r\n            <span style=\"font-size:11px\">*Only Png and Jpeg Images allowed</span>\r\n            <label class=\"custom-file-label\" for=\"inputGroupFile01\" style=\"font-size: 12px;\">{{displayFileedit }}</label>\r\n          </div>\r\n        </div>\r\n        <div class=\"col mb-1\">\r\n          <p class=\"col p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">Status<span class=\"red-star\">*</span></p>\r\n          <div class=\"input-group\">\r\n            <select class=\"custom-select inthight\" id=\"inputGroupSelect01 placeholder\" [(ngModel)]=\"editsymptomstatus\">\r\n              <option value=\"active\">Active</option>\r\n              <option value=\"inactive\">Inactive</option>\r\n            </select>\r\n          </div>\r\n      </div>\r\n      </div>\r\n      <footer id=\"modal-footer \" class=\"d-flex justify-content-end mt-1\">\r\n        <button id=\"modal-action-button\" \r\n        class=\"btn btn-sm button_action\" \r\n        type=\"button\" (click)=\"openModaledit()\" style=\"font-size: 12px;\" [disabled]=\"editsymptomname == '' || displayFileedit == ''\">\r\n          Update\r\n        </button>\r\n        <button class=\"btn btn-sm button_cancel\" \r\n        type=\"button\" id=\"modal-cancel-button\"\r\n          (click)=\"showhideboxeditcancel()\" style=\"font-size: 12px;\">\r\n          Cancel\r\n        </button>\r\n      </footer>\r\n    </div>\r\n    <!-- Add View Fade -->\r\n    <!-- Edit View Fade -->\r\n    <div class=\"p-1 bg-white mt-1 rounded mb-1 px-2 box-view\" [ngClass]=\"status ? 'show' : 'hide'\">\r\n      <div class=\"row\">\r\n        <div class=\"col-lg col-md col-sm col-12 mb-1\">\r\n          <p class=\"col-12 p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">Symptom <span class=\"red-star\">*</span></p>\r\n          <div class=\"form-group p-0 m-0\">\r\n            <input type=\"Text\" class=\"form-control\" \r\n            placeholder=\"Symptom Name\"  \r\n            [(ngModel)]=\"symptomname\" style=\"font-size: 12px;\" maxlength=\"50\">\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg col-md col-sm col-12 mb-1\">\r\n          <p class=\"col-12 p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">Symptom icon<span class=\"red-star\">*</span></p>\r\n          <div class=\"form-group m-0 col\">\r\n            <input type=\"file\" id=\"file\" (change)=\"handleFileInput($event)\" accept=\"image/x-png,image/jpeg\"\r\n              class=\"custom-file-input\" id=\"inputGroupFile01\" \r\n              aria-describedby=\"inputGroupFileAddon01\" style=\"font-size: 12px;\">\r\n            <span style=\"font-size:11px\">*Only Png and Jpeg Images allowed</span>\r\n\r\n            <!-- <input type=\"file\" [(ngchnage)]=\"specializationfile\"   class=\"form-control\" id=\"inputGroupFile01\" aria-describedby=\"inputGroupFileAddon01\" > -->\r\n            <!-- <div class=\"form-group\">\r\n            <label for=\"file\">Choose File</label>\r\n            <input type=\"file\"\r\n                   id=\"file\"\r\n                   (change)=\"handleFileInput($event.target.files)\">\r\n        </div> -->\r\n            <label class=\"custom-file-label\" for=\"inputGroupFile01\" style=\"font-size: 12px;\">{{displayFile}}</label>\r\n\r\n            <!-- <div class=\"form-group m-0 col\">\r\n          <input type=\"file\" class=\"custom-file-input\" id=\"inputGroupFile01\" aria-describedby=\"inputGroupFileAddon01\">\r\n          <label class=\"custom-file-label\" for=\"inputGroupFile01\">file</label> -->\r\n\r\n\r\n            <!-- <label class=\"custom-file-label\" for=\"inputGroupFile01\">Enter Symptom File</label> -->\r\n\r\n          </div>\r\n        </div>\r\n        <div class=\"col mb-1\">\r\n          <p class=\"col p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">Status<span class=\"red-star\">*</span></p>\r\n          <div class=\"input-group\">\r\n            <select class=\"custom-select inthight\" id=\"inputGroupSelect01 placeholder\" [(ngModel)]=\"symptomstatus\">\r\n              <option value=\"active\">Active</option>\r\n              <option value=\"inactive\">Inactive</option>\r\n            </select>\r\n          </div>\r\n      </div>\r\n      </div>\r\n      <footer id=\"modal-footer \" class=\"d-flex justify-content-end mt-1\">\r\n        <button id=\"modal-action-button\" class=\"btn btn-sm button_action\" \r\n        type=\"button\" (click)=\"openModal()\" [disabled]=\"symptomname == '' || displayFile == '' || displayFile =='Upload Symptom File'\" style=\"font-size: 12px;\">\r\n          Submit\r\n        </button>\r\n        <button class=\"btn btn-sm button_cancel\" \r\n        type=\"button\" id=\"modal-cancel-button\" (click)=\"showhidebox()\" style=\"font-size: 12px;\">\r\n          Cancel\r\n        </button>\r\n      </footer>\r\n    </div>\r\n    <!-- Edit View Fade -->\r\n    <!-- Table Box View -->\r\n    <div class=\" bg-white  table-top\">\r\n      <!-- Search View -->\r\n      <div class=\"main d-flex justyfy-content-end aligin-items-center\">\r\n        <div id=\"custom-search-input mb-2\" style=\"z-index: 9999;\">\r\n          <div class=\"input-group mb-2\">\r\n            <input type=\"text\" class=\"search-query form-control\" placeholder=\"Search\"\r\n              (keyup)=\"doFilter($event.target.value)\" style=\"font-size: 12px;\"/>\r\n            <span class=\"input-group-btn btn btn-primary mr-2 btn-search\">\r\n              <i class=\"fas fa-search \" aria-hidden=\"true\"></i>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Search View -->\r\n      <!-- Table View -->\r\n      <div class=\"col-12 col-lg col-md col-sm m-0 p-0 d-flex justyfy-content-center align-items-center table-scroll\">\r\n        <table mat-table [dataSource]=\"dataSource\" matSort class=\"table-view\">\r\n          <ng-container matColumnDef=\"position\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-head py-0\" style=\"width: 10px;\"> Sl.No.</th>\r\n            <td mat-cell *matCellDef=\"let element; let i=index;\"> {{element.sl_num}} </td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-head py-0\">Symptoms Name</th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.sym_name | titlecase}}</td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"weight\">\r\n            <th mat-header-cell *matHeaderCellDef class=\"table-head py-0 text-center\"> Symptoms Image </th>\r\n            <!-- <td mat-cell *matCellDef=\"let element\"> {{element.sym_icon}} </td> -->\r\n            <td mat-cell *matCellDef=\"let element\" style=\"text-align: center;\">\r\n              <img src=\"{{element.sym_icon}}\" alt=\"icon\" \r\n              style=\"width: 20px; height: 20px; line-height: 20px;\"\r\n                aria-hidden=\"true\" />\r\n            </td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"symbol\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-head py-0 \"> Status </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.status | titlecase}} </td>\r\n          </ng-container>\r\n          <ng-container matColumnDef=\"delete\">\r\n            <th mat-header-cell *matHeaderCellDef class=\"table-head py-0 text-center\">Action</th>\r\n            <td mat-cell *matCellDef=\"let element\" style=\"text-align: center;\">\r\n              <p class=\"edit text-center m-auto\">\r\n                <i class=\"far fa-edit  btn btn-primary btn-sm p-1 mx-1\" \r\n                (click)=\"showhideboxedit(element)\"\r\n                  aria-hidden=\"true\" style=\"font-size: 12px;\" data-toggle=\"tooltip\" title=\"Edit\"></i>\r\n                <i class=\"fas fa-trash  btn btn-danger btn-sm p-1 mx-1\" \r\n                (click)=\"removeSymptom(element.sym_name, element._id)\"\r\n                  aria-hidden=\"true\" style=\"font-size: 12px;\" data-toggle=\"tooltip\" title=\"Delete\"></i>\r\n              </p>\r\n            </td>\r\n          </ng-container>\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n      </div>\r\n      <!-- Table View -->\r\n      <!-- pagination -->\r\n      <mat-paginator [pageSizeOptions]=\"[10, 15, 20, 50]\" showFirstLastButtons></mat-paginator>\r\n      <!-- Pagination -->\r\n    </div>\r\n    <!-- Table Box View -->\r\n  </div>\r\n</div>\r\n\r\n<!-- Symptom View -->\r\n\r\n<div class=\"popup {{deleteit ?'pshow':''}}\">\r\n  <div class=\"centerbox\">\r\n    <div class=\"pclose\" ><i class=\"fa fa-times \" (click)=\"closealert()\" style=\"font-size: 20px;\"></i></div>\r\n    <section class=\"mx-2 mb-2 mt-2\">\r\n      <div class=\"col d-flex justify-content-center align-items-center p-0 m-0\">\r\n        <h5 class=\"p-0 m-0 mb-2\">Confirm</h5>\r\n      </div>\r\n      <div class=\"col text-left px-3 mb-1 p-0 m-0\">\r\n        <p class=\"p-0 m-0 mb-2\" ><strong></strong> <span style=\"padding-left: 5px;\"> Are you sure to delete Symptom  {{symptom_delete}} ?</span></p>\r\n        \r\n      </div>\r\n    </section>\r\n    <footer id=\"modal-footer\" style=\"padding-top: 100px;\" class=\"col-12 mb-2 d-flex justify-content-center align-items-center\">\r\n     \r\n      <div class=\"col m-0 p-0 px-3\" >\r\n\r\n        <button type=\"button\" class=\"btn btn-sm \"  (click)=\"deletesymptom()\" id=\"modal-action-button\">\r\n          Yes\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-sm \"  (click)=\"closealert()\" id=\"modal-cancel-button\">\r\n          No\r\n        </button>\r\n      </div>\r\n\r\n      \r\n    </footer>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'ngx-delete-popup',\r\n  templateUrl: './delete-popup.component.html',\r\n  styleUrls: ['./delete-popup.component.scss']\r\n})\r\nexport class DeletePopupComponent implements OnInit {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeletePopupComponent>\r\n  ) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  actionFunction() {\r\n    alert(\"I am a work in progress\");\r\n    this.closeModal();\r\n  }\r\n\r\n  closeModal() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<div id=\"modal-content-wrapper\">\r\n    <header id=\"modal-header\">\r\n        <h1 id=\"modal-title\">Are you sure do you want to delete?</h1>\r\n    </header>\r\n    <!-- <section id=\"modal-body\">\r\n        <p class=\"text-center\">Are you sure delete</p>\r\n    </section> -->\r\n    <footer id=\"modal-footer\">\r\n        <button type=\"btn\" class=\"btn modal-action-button\" (click)=\"actionFunction()\">\r\n            Confirm\r\n        </button>\r\n        <button type=\"btn\" class=\"btn modal-cancel-button\" (click)=\"closeModal()\">\r\n            cancel\r\n        </button>\r\n    </footer>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'ngx-edit-popup',\r\n  templateUrl: './edit-popup.component.html',\r\n  styleUrls: ['./edit-popup.component.scss']\r\n})\r\nexport class EditPopupComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<EditPopupComponent>) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  actionFunction() {\r\n    alert(\"I am a work in progress\");\r\n    this.closeModal();\r\n  }\r\n\r\n  closeModal() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<div id=\"modal-content-wrapper\">\r\n    <header id=\"modal-header\">\r\n        <h1 id=\"modal-title\">Edit </h1>\r\n    </header>\r\n    <section id=\"modal-body\">\r\n        \r\n    </section>\r\n    <footer id=\"modal-footer\">\r\n        <button type=\"btn\" class=\"btn edit-action-button\" (click)=\"actionFunction()\">\r\n            save\r\n        </button>\r\n        <button type=\"btn\" class=\"btn edit-cancel-button\" (click)=\"closeModal()\">\r\n            cancel\r\n        </button>\r\n    </footer>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { DoctorService } from './../../../../api/doctor.service';\r\n\r\n@Component({\r\n  selector: 'ngx-delete-popup',\r\n  templateUrl: './delete-popup.component.html',\r\n  styleUrls: ['./delete-popup.component.scss']\r\n})\r\nexport class DeletePopupComponent implements OnInit {\r\n\r\n  constructor(private doctorService: DoctorService,public dialogRef: MatDialogRef<DeletePopupComponent>) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this)\r\n  }\r\n  actionFunction() {\r\n    // alert(\"I am a work in progress\");\r\n    // this.doctorService.removeLanguage(name).subscribe((res) => {\r\n      this.closeModal();\r\n\r\n    // })\r\n  }\r\n\r\n  closeModal() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<div id=\"modal-content-wrapper\">\r\n    <header id=\"modal-header\">\r\n        <h1 id=\"modal-title\">Are you sure do you want to delete?</h1>\r\n    </header>\r\n    <!-- <section id=\"modal-body\">\r\n        <p class=\"text-center\">Are you sure delete</p>\r\n    </section> -->\r\n    <footer id=\"modal-footer\">\r\n        <button type=\"btn\" class=\"btn modal-action-button\" (click)=\"actionFunction()\">\r\n            Confirm\r\n        </button>\r\n        <button type=\"btn\" class=\"btn modal-cancel-button\" (click)=\"closeModal()\">\r\n            Cancel\r\n        </button>\r\n    </footer>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'ngx-edit-popup',\r\n  templateUrl: './edit-popup.component.html',\r\n  styleUrls: ['./edit-popup.component.scss']\r\n})\r\nexport class EditPopupComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<EditPopupComponent>) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  actionFunction() {\r\n    alert(\"completed editing\");\r\n    this.closeModal();\r\n  }\r\n\r\n  closeModal() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<div id=\"modal-content-wrapper\">\r\n    <header id=\"modal-header\">\r\n        <h1 id=\"modal-title\">Language Edit</h1>\r\n    </header>\r\n    <!-- <section id=\"modal-body\">\r\n        <p>Placeholder description</p>\r\n    </section> -->\r\n    <footer id=\"modal-footer\">\r\n        <button type=\"btn\" class=\" btn modal-action-button\" (click)=\"actionFunction()\">\r\n            save\r\n        </button>\r\n        <button type=\"btn\" class=\"btn modal-cancel-button\" (click)=\"closeModal()\">\r\n            cancel\r\n        </button>\r\n    </footer>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { DoctorService } from './../../../api/doctor.service';\r\nimport { MatPaginator, } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { ModalComponent } from './modal/modal.component';\r\nimport { EditPopupComponent } from './edit-popup/edit-popup.component';\r\nimport { DeletePopupComponent } from './delete-popup/delete-popup.component';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'ngx-language-speak',\r\n  templateUrl: './language-speak.component.html',\r\n  styleUrls: ['./language-speak.component.scss']\r\n})\r\nexport class LanguageSpeakComponent implements OnInit {\r\n  // displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\r\n  languages: any;\r\n  dataSource: any;\r\n  languagename:any='';\r\n  languagecode:any='';\r\n  languagesl:any;\r\n  langugaestatus:any='active'\r\n  editlangugaestatus:any='active'\r\n\r\n  deleteit:boolean=false;\r\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol', 'delete'];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  status: boolean = false;\r\n  editstatus:boolean=false;\r\n  constructor(private toastr: ToastrService,private doctorService: DoctorService, public matDialog: MatDialog) { }\r\n  showhidebox() {\r\n    this.languagename='';\r\n    this.languagecode='';\r\n\r\n    this.status = !this.status;\r\n    this.editstatus = false;\r\n\r\n    \r\n  }\r\n  showhideboxeditcancel(){\r\n    this.editstatus = false;\r\n    this.status = false;\r\n\r\n\r\n  }\r\n  showhideboxedit(element){\r\n    this.languagesl=element.sl;\r\n    this.languagename=element.name;\r\n    this.languagecode=element.code;\r\n    this.editlangugaestatus=element.status;\r\n\r\n    console.log(element)\r\n    this.status = false;\r\n\r\n    this.editstatus = !this.editstatus;\r\n\r\n\r\n  }\r\n  openModal() {\r\n    console.log()\r\n    this.doctorService.addlanguage(this.languagename,this.languagecode, this.langugaestatus).subscribe((Language: any) => {\r\n      this.languagename=\"\";\r\n      this.languagecode=\"\";\r\n      this.toastr.success('Succesfully Added');\r\n      setTimeout(() => {\r\n\r\n      window.location.reload();\r\n    }, 1110);\r\n\r\n\r\n    // const dialogConfig = new MatDialogConfig();\r\n    // dialogConfig.disableClose = true;\r\n    // dialogConfig.id = \"modal-component\";\r\n    // dialogConfig.height = \"350px\";\r\n    // dialogConfig.width = \"600px\";\r\n    // const modalDialog = this.matDialog.open(ModalComponent, dialogConfig);EditPopupComponent\r\n    })\r\n  }\r\n\r\n  openModaledit(){\r\n    this.doctorService.updatelanguage(this.languagesl,this.languagename,this.languagecode, this.editlangugaestatus).subscribe((Language: any) => {\r\n      this.languagename=\"\";\r\n      this.languagecode=\"\";\r\n      this.toastr.success('Succesfully Updated');\r\nsetTimeout(() => {\r\n  window.location.reload();\r\n\r\n}, 1110);\r\n      \r\n\r\n    })\r\n\r\n  }\r\n  closealert(){\r\n    this.deleteit =false;\r\n  }\r\n\r\n  deletelanguage(){\r\n    this.deleteit =false;\r\n\r\n    this.doctorService.removeLanguage(this.lang_delete).subscribe((res) => {\r\n      this.toastr.success('Succesfully Deleted');\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      \r\n      }, 1110);\r\n    })\r\n  }\r\n  openModalpopup() {\r\n    // const dialogConfig = new MatDialogConfig();\r\n    // dialogConfig.disableClose = true;\r\n    // dialogConfig.id = \"modal-component\";\r\n    // dialogConfig.height = \"350px\";\r\n    // dialogConfig.width = \"600px\";\r\n    // const modalDialog = this.matDialog.open(EditPopupComponent, dialogConfig);\r\n  }\r\n\r\n  deleteModalpopup(name) {\r\n    // const dialogConfig = new MatDialogConfig();\r\n    // dialogConfig.disableClose = true;\r\n    // dialogConfig.id = \"modal-component\";\r\n    // dialogConfig.height = \"350px\";\r\n    // dialogConfig.width = \"600px\";\r\n    // const modalDialog = this.matDialog.open(DeletePopupComponent, dialogConfig);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.dataSource.paginator = this.paginator;\r\n    // this.dataSource.sort = this.sort;\r\n\r\n    this.getLanguageList();\r\n\r\n\r\n  }\r\n  ngAfterViewInit(): void {\r\n    // this.dataSource.sort = this.sort;\r\n    // this.dataSource.paginator = this.paginator;\r\n\r\n  }\r\n\r\n  public doFilter = (value: string) => {\r\n\r\n    this.dataSource.filter = value.trim().toLocaleLowerCase();\r\n  }\r\n  getLanguageList() {\r\n    this.doctorService.getLanguagesList().subscribe((Language: any) => {\r\n    this.languages = Language.response;\r\n    this.languages.forEach(function(row, index) {\r\n      row.sl_num = index+1;\r\n    });\r\n   \r\n    this.dataSource = new MatTableDataSource<PeriodicElement>(this.languages);\r\n    \r\n      this.dataSource.sort = this.sort;\r\n      this.dataSource.paginator = this.paginator;\r\n   \r\n    })\r\n  }\r\n  lang_delete:any;\r\n  removeLanguage(name: any) {\r\n    this.lang_delete=name;\r\n    this.deleteit=true;\r\n  }\r\n\r\n}\r\nexport interface PeriodicElement {\r\n  sl: number;\r\n  name: string;\r\n  code: string;\r\n  status: string;\r\n}\r\n","<!-- Language Spoken View -->\r\n<div class=\"wrapper  m-1 position-relative\">\r\n  <div size=\"\" accent=\"info\" class=\"bg-none mx-1\">\r\n    <!-- Header View -->\r\n    <!-- <nb-card-header>\r\n    <div class=\"d-flex flex-direction-row justify-content-between w-100 align-items-center\">\r\n      <div>\r\n        <span class=\"display-6\"> Details</span>\r\n      </div>\r\n      <button type=\"button\" class=\"btn btn-outline-success\" data-toggle=\"modal\" data-target=\"#myModal\">\r\n        Add\r\n      </button>\r\n  </div>\r\n  </nb-card-header> -->\r\n    <div class=\"d-flex flex-direction-row justify-content-between w-100 align-items-center head\">\r\n      <div class=\"symptom-head\">\r\n        <span>Language Details </span>\r\n      </div>\r\n      <button type=\"button\" class=\"btn btn-primary button btn-sm\" mat-raised-button (click)=\"showhidebox()\"\r\n        [ngClass]=\"status ? 'hide' : 'show'\">\r\n        + Add New\r\n      </button>\r\n    </div>\r\n    <!-- Header View -->\r\n    <!-- <div fxLayout fxLayoutAlign=\"center center\">\r\n    <mat-form-field fxFlex=\"40%\">\r\n      \r\n      <input matInput type=\"text\"  (keyup)=\"doFilter($event.target.value)\" placeholder=\"Search\">\r\n    </mat-form-field>\r\n  </div> -->\r\n    <!-- Add View Fade -->\r\n    <div class=\"p-1 bg-white mt-1 rounded mb-2 px-2 box-view\" [ngClass]=\"editstatus ? 'show' : 'hide'\">\r\n      <div class=\"row\">\r\n        <div class=\"col-lg col-md col-sm col-12 mb-1\">\r\n          <p class=\"col p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">Language<span class=\"red-star\">*</span></p>\r\n          <div class=\"form-group p-0 col m-0\">\r\n            <input type=\"Text\" class=\"form-control\" [(ngModel)]=\"languagename\" placeholder=\"Name\" maxlength=\"50\"\r\n              style=\"font-size: 12px; font-weight: 600;\">\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg col-md col-sm col-12 mb-1\">\r\n          <p class=\"col p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">Code<span class=\"red-star\">*</span></p>\r\n          <div class=\"form-group p-0 col m-0\">\r\n            <input type=\"Text\" class=\"form-control\" [(ngModel)]=\"languagecode\" placeholder=\"en\" maxlength=\"2\"\r\n              style=\"font-size: 12px;\">\r\n          </div>\r\n        </div>\r\n        <div class=\"col mb-1\">\r\n          <p class=\"col p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">Status<span class=\"red-star\">*</span></p>\r\n          <div class=\"input-group\">\r\n            <select class=\"custom-select inthight\" id=\"inputGroupSelect01 placeholder\" [(ngModel)]=\"editlangugaestatus\">\r\n              <option value=\"active\" >Active</option>\r\n              <option value=\"inactive\">Inactive</option>\r\n            </select>\r\n          </div>\r\n      </div>\r\n      </div>\r\n      <footer id=\"modal-footer \" class=\"d-flex justify-content-end  mt-1\">\r\n        <button id=\"modal-action-button\" [disabled]=\"languagecode == '' || languagename == ''\" class=\"btn btn-sm button_action\" type=\"button\" (click)=\"openModaledit()\"\r\n          style=\"font-size: 12px;\">\r\n          Update\r\n        </button>\r\n        <button class=\"btn btn-sm button_cancel\" type=\"button\" id=\"modal-cancel-button\"\r\n          (click)=\"showhideboxeditcancel()\" style=\"font-size: 12px;\">\r\n          Cancel\r\n        </button>\r\n      </footer>\r\n    </div>\r\n    <!-- Add View Fade -->\r\n    <!-- Edit View Fade -->\r\n    <div class=\"p-1 bg-white mt-1 rounded mb-2 px-2 box-view\" [ngClass]=\"status ? 'show' : 'hide'\">\r\n      <div class=\"row\">\r\n        <div class=\"col-lg col-md col-sm col-12 mb-1\">\r\n          <p class=\"col p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">Language <span class=\"red-star\">*</span></p>\r\n          <div class=\"form-group p-0 col m-0\">\r\n            <input type=\"Text\" class=\"form-control\" [(ngModel)]=\"languagename\" placeholder=\"Enter Language Name\" maxlength=\"50\"\r\n              style=\"font-size: 12px;\">\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg col-md col-sm col-12 mb-1\">\r\n          <p class=\"col p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">Code<span class=\"red-star\">*</span></p>\r\n          <div class=\"form-group p-0 col m-0\">\r\n            <input type=\"Text\" class=\"form-control\" [(ngModel)]=\"languagecode\" placeholder=\"Enter Language Code\" maxlength=\"2\"  \r\n              style=\"font-size: 12px;\">\r\n          </div>\r\n        </div>\r\n        <div class=\"col mb-1\">\r\n          <p class=\"col p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">Status<span class=\"red-star\">*</span></p>\r\n          <div class=\"input-group\">\r\n            <select class=\"custom-select inthight\" id=\"inputGroupSelect01 placeholder\" [(ngModel)]=\"langugaestatus\">\r\n              <option value=\"active\" >Active</option>\r\n              <option value=\"inactive\">Inactive</option>\r\n            </select>\r\n          </div>\r\n      </div>\r\n      </div>\r\n      <footer id=\"modal-footer \" class=\"d-flex justify-content-end  mt-1\">\r\n        <button id=\"modal-action-button\" class=\"btn btn-sm button_action\" [disabled]=\"languagecode == '' || languagename == ''\" type=\"button\" (click)=\"openModal()\">\r\n          Submit\r\n        </button>\r\n        <button class=\"btn btn-md button_cancel btn-sm\" type=\"button\" id=\"modal-cancel-button\" (click)=\"showhidebox()\">\r\n          Cancel\r\n        </button>\r\n      </footer>\r\n    </div>\r\n    <!-- Edit View Fade -->\r\n    <div class=\"bg-white  table-top\">\r\n      <!-- <div class=\"row mx-4 mt-3 mb-1\">\r\n      <div class=\"form-group col m-0\">\r\n        <input type=\"Text\" class=\"form-control\" placeholder=\"Language Name\">\r\n      </div>\r\n      <div class=\"form-group m-0 col\">\r\n        <input type=\"text\" class=\" form-control\" placeholder=\"Language Code\">\r\n      </div>\r\n      <button type=\"button\" class=\"btn btn-primary button\">Submit</button>\r\n    </div> -->\r\n      <!-- Search View -->\r\n      <div class=\"main d-flex justyfy-content-end aligin-items-center\">\r\n        <div id=\"custom-search-input mb-2\" style=\"z-index: 9999;\">\r\n          <div class=\"input-group col-md-12 mb-2\">\r\n            <input type=\"text\" class=\"  search-query form-control\" placeholder=\"Search\"\r\n              (keyup)=\"doFilter($event.target.value)\" style=\"font-size: 12px;\" />\r\n            <span class=\"input-group-btn btn btn-primary mr-2 btn-search\">\r\n              <i class=\"fas fa-search \" aria-hidden=\"true\"></i>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Search View -->\r\n      <!-- Table View -->\r\n      <div class=\"col col-lg col-md col-sm m-0 p-0 justyfy-content-center align-items-center table-scroll\">\r\n        <table mat-table [dataSource]=\"dataSource\" matSort class=\" table-view\">\r\n          <!-- mat-elevation-z8 -->\r\n          <ng-container matColumnDef=\"position\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-head\"> Sl.No. </th>\r\n            <td mat-cell *matCellDef=\"let element; let i=index;\"> {{element.sl_num}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-head\">Language Name </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.name | titlecase}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"weight\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-head\">Language Code </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.code | titlecase}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"symbol\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-head\"> Status </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.status | titlecase}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"delete\">\r\n            <th mat-header-cell *matHeaderCellDef class=\"table-head\" style=\"text-align: center;\"> Action </th>\r\n\r\n            <td mat-cell *matCellDef=\"let element\" style=\"text-align: center;\">\r\n              <span class=\"edit text-center m-auto\">\r\n                <i class=\"far fa-edit  btn btn-primary text-center p-1 btn-sm mx-1\" aria-hidden=\"true\"\r\n                  (click)=\"showhideboxedit(element)\" style=\"font-size: 12px;\" data-toggle=\"tooltip\" title=\"Edit\"></i>\r\n                <i class=\"fas fa-trash  btn btn-danger text-center btn-sm p-1 mx-1\"\r\n                  (click)=\"removeLanguage(element.name)\" (click)=\"deleteModalpopup(element.name)\" aria-hidden=\"true\"\r\n                  style=\"font-size: 12px;\" data-toggle=\"tooltip\" title=\"Delete\"></i>\r\n              </span>\r\n              <!-- (click)=\"removeLanguage(element.name)\" (click)=\"deleteModalpopup(element.name)\"\r\n                aria-hidden=\"true\"></i></span> -->\r\n            </td>\r\n          </ng-container>\r\n\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n      </div>\r\n      <!-- Table View -->\r\n      <!-- pagination -->\r\n      <mat-paginator [pageSizeOptions]=\"[10, 15, 20, 50]\" showFirstLastButtons></mat-paginator>\r\n      <!-- pagination -->\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- Language Spoken View -->\r\n\r\n<div class=\"popup {{deleteit ?'pshow':''}}\">\r\n  <div class=\"centerbox\">\r\n    <div class=\"pclose\" ><i class=\"fa fa-times \" (click)=\"closealert()\" style=\"font-size: 20px;\"></i></div>\r\n    <section class=\"mx-2 mb-2 mt-2\">\r\n      <div class=\"col d-flex justify-content-center align-items-center p-0 m-0\">\r\n        <h5 class=\"p-0 m-0 mb-2\">Confirm</h5>\r\n      </div>\r\n      <div class=\"col text-left px-3 mb-1 p-0 m-0\">\r\n        <p class=\"p-0 m-0 mb-2\" ><strong></strong> <span style=\"padding-left: 5px;\"> Are you sure to delete Language  {{lang_delete}} ?</span></p>\r\n        \r\n      </div>\r\n    </section>\r\n    <footer id=\"modal-footer\" style=\"padding-top: 100px;\" class=\"col-12 mb-2 d-flex justify-content-center align-items-center\">\r\n     \r\n      <div class=\"col m-0 p-0 px-3\" >\r\n\r\n        <button type=\"button\" class=\"btn btn-sm \"  (click)=\"deletelanguage()\" id=\"modal-action-button\">\r\n          Yes\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-sm \"  (click)=\"closealert()\" id=\"modal-cancel-button\">\r\n          No\r\n        </button>\r\n      </div>\r\n\r\n      \r\n    </footer>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-payment-settings',\r\n  templateUrl: './payment-settings.component.html',\r\n  styleUrls: ['./payment-settings.component.scss']\r\n})\r\nexport class PaymentSettingsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"m-1 position-relative\">\r\n    <div class=\"d-flex flex-direction-row justify-content-between w-100 align-items-center head\">\r\n        <div class=\"symptom-head mt-1 mx-1\">\r\n          <span>Payment Details </span>\r\n        </div>\r\n        <!-- <button type=\"button\" class=\"btn btn-primary button btn-sm\">\r\n          + Add New\r\n        </button> -->\r\n      </div>\r\n      <div class=\"wrapper bg-white table-top mx-1\">\r\n\r\n      </div>\r\n</div>\r\n ","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'ngx-modal',\r\n  templateUrl: './modal.component.html',\r\n  styleUrls: ['./modal.component.scss']\r\n})\r\nexport class ModalComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<ModalComponent>) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  actionFunction() {\r\n    alert(\"Specilization name & Icon updated\");\r\n    this.closeModal();\r\n  }\r\n\r\n  closeModal() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div id=\"modal-content-wrapper\">\r\n    <header id=\"modal-header\">\r\n        <h1 id=\"modal-title\">Add Specialization</h1>\r\n    </header>\r\n    <section id=\"modal-body\">\r\n        <form action=\"\">\r\n            <div class=\"input-group mb-3\">\r\n                <input type=\"text\" class=\"form-control\" aria-label=\"Sizing example input\" \r\n                aria-describedby=\"inputGroup-sizing-default\" placeholder=\"Specilization Name\">\r\n              </div>\r\n            <div class=\"custom-file\">\r\n                <input type=\"file\" class=\"custom-file-input\" id=\"inputGroupFile01\" aria-describedby=\"inputGroupFileAddon01\">\r\n                <label class=\"custom-file-label\" for=\"inputGroupFile01\">select file</label>\r\n            </div>\r\n        </form>\r\n    </section>\r\n    <footer id=\"modal-footer\">\r\n        <button  id=\"modal-action-button\" class=\"btn btn-md modal_button_action\" type=\"button\" (click)=\"actionFunction()\">\r\n            Submit\r\n        </button>\r\n        <button class=\"btn btn-md modal_button_cancel\" type=\"button\"  id=\"modal-cancel-button\" (click)=\"closeModal()\">\r\n            Cancel\r\n        </button>\r\n    </footer>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { FormGroup,FormControl, Validators } from '@angular/forms';\r\nimport { DoctorService } from './../../../api/doctor.service';\r\nimport { MatPaginator, } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { ModalComponent } from './modal/modal.component';\r\nimport { EditPopupComponent } from './edit-popup/edit-popup.component';\r\nimport { DeletePopupComponent } from './delete-popup/delete-popup.component';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n\r\n@Component({\r\n  selector: 'ngx-specilization',\r\n  templateUrl: './specilization.component.html',\r\n  styleUrls: ['./specilization.component.scss']\r\n})\r\nexport class SpecilizationComponent implements OnInit {\r\n\r\n  myForm = new FormGroup({\r\n    name: new FormControl('', [Validators.required, Validators.minLength(3)]),\r\n    file: new FormControl('', [Validators.required]),\r\n    fileSource: new FormControl('', [Validators.required])\r\n  });\r\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol', 'delete'];\r\n  data: any;\r\n  dataSource: any;\r\n  fileToUpload: File = null;\r\n  displayFile:any = \"Upload Specialization File\"\r\n  fileupdate:boolean = false;\r\n  \r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  symptomlist: Array<any> = [\r\n    { code: 'p1', name: 'Covid19', status: 'Active' },\r\n    { code: 'p2', name: 'Cardio', status: 'Active' },\r\n    { code: 'p3', name: 'Cancer', status: 'Active' },\r\n    { code: 'p4', name: 'Urology', status: 'Active' },\r\n\r\n  ];\r\n  status: boolean = false;\r\n  statusedit:boolean = false;\r\n  displayFileedit:any;\r\n  specializationEdit_id:any;\r\n  specializationnameeit:any;\r\n  editSpecilizationstatus:any='active';\r\n  specilizationstatus:any='active';\r\n  constructor(private toastr: ToastrService,private http: HttpClient,\r\n    private doctorService: DoctorService,\r\n    public matDialog: MatDialog,\r\n\r\n  ) { }\r\n\r\n  get f(){\r\n    return this.myForm.controls;\r\n  }\r\n     \r\n  onFileChange(event) {\r\n  \r\n    if (event.target.files.length > 0) {\r\n      const file = event.target.files[0];\r\n      this.myForm.patchValue({\r\n        fileSource: file\r\n      });\r\n    }\r\n  }\r\n\r\n  handleFileInputedit(event){\r\n    console.log(\"======\")\r\n    if(event.target.files[0].size < 1000000){\r\n\r\n    this.fileupdate =true;\r\n    console.log(event.target.files.length)\r\n    this.displayFileedit = event.target.files[0].name;\r\n\r\n    if (event.target.files.length > 0) {\r\n      const file = event.target.files[0];\r\n      this.myForm.patchValue({\r\n        fileSource: file\r\n      });\r\n    }\r\n  }else{\r\n\r\n    // this.displayFile= \"Upload Specialization File\"\r\n\r\n    this.toastr.info('Icon size is large!');\r\n\r\n  }\r\n  }\r\n  handleFileInput(event:any) {\r\n    // this.fileToUpload = files.item(0);\r\n    if(event.target.files[0].size < 1000000){\r\n    console.log(event.target.files[0].size)\r\n    this.displayFile = event.target.files[0].name;\r\n\r\n    if (event.target.files.length > 0) {\r\n      const file = event.target.files[0];\r\n      this.myForm.patchValue({\r\n        fileSource: file\r\n      });\r\n      console.log(this.myForm)\r\n    }\r\n  }else{\r\n    this.displayFile= \"Upload Specialization File\"\r\n\r\n    this.toastr.info('Icon size is large!');\r\n\r\n  }\r\n}\r\n  showhidebox() {\r\n    this.status = !this.status;\r\n    this.statusedit =false;\r\n\r\n  }\r\n  showhideboxedit(){\r\n    this.statusedit =!this.statusedit;\r\n    this.status = false;\r\n\r\n  }\r\n\r\n  openModaledit(){\r\n    console.log(this.displayFileedit)\r\n    if(!this.fileupdate){\r\n      var update={\"_id\":this.specializationEdit_id,\"name\":this.specializationnameeit,\"status\":this.editSpecilizationstatus}\r\n      this.doctorService.updatespecialization(update).subscribe((specialization: any) => {\r\n        this.specializationname=\"\";\r\n        this.fileToUpload = null;\r\n        this.specializationEdit_id =null;\r\n        this.toastr.success('Succesfully Updated');\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        \r\n        }, 1110);      })\r\n\r\n    }else{\r\n      console.log(\"--file to uplod--\")\r\n    const formData = new FormData();\r\n    formData.append('icon', this.myForm.get('fileSource').value);\r\n    formData.append('name', this.specializationnameeit);\r\n    formData.append('_id', this.specializationEdit_id);\r\n    formData.append('status', this.editSpecilizationstatus);\r\n\r\n\r\n\r\n    this.doctorService.updatespecialization(formData).subscribe((specialization: any) => {\r\n      this.specializationname=\"\";\r\n      this.fileToUpload = null;\r\n      this.toastr.success('Succesfully Updated');\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      \r\n      }, 1110);\r\n\r\n\r\n\r\n        })\r\n\r\n  }\r\n  }\r\n  openModal() {\r\n    // const dialogConfig = new MatDialogConfig();\r\n    // dialogConfig.disableClose = true;\r\n    // dialogConfig.id = \"modal-component\";\r\n    // dialogConfig.height = \"350px\";\r\n    // dialogConfig.width = \"600px\";\r\n    // const modalDialog = this.matDialog.open(ModalComponent, dialogConfig);\r\n    const formData = new FormData();\r\n    let data =this.myForm.get('fileSource').value;\r\n    formData.append('icon', this.myForm.get('fileSource').value);\r\n    formData.append('specialization', this.specializationname);\r\n    formData.append('status', this.specilizationstatus);\r\n\r\n    \r\n\r\n    this.doctorService.addspecialization( formData).subscribe((specialization: any) => {\r\n      this.specializationname=\"\";\r\n      this.fileToUpload = null;\r\n      this.toastr.success('Succesfully Added');\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      \r\n      }, 1110);    })\r\n  }\r\n\r\n  editModal(element) {\r\n    this.statusedit = !this.statusedit;\r\n    this.status = false;\r\n\r\n    console.log(element);\r\n    console.log(\"========================\")\r\n    this.specializationnameeit =element.name;\r\n    this.specializationEdit_id =element._id;\r\n    this.editSpecilizationstatus = element.status;\r\n    this.displayFileedit= element.icon.substring(element.icon.lastIndexOf('/') + 1,element.icon.length);\r\n\r\n    // const dialogConfig = new MatDialogConfig();\r\n    // dialogConfig.disableClose = true;\r\n    // dialogConfig.id = \"modal-component\";\r\n    // dialogConfig.height = \"350px\";\r\n    // dialogConfig.width = \"600px\";\r\n    // const modalDialog = this.matDialog.open(EditPopupComponent, dialogConfig);\r\n  }\r\n\r\n  deleteModal() {\r\n    // const dialogConfig = new MatDialogConfig();\r\n    // dialogConfig.disableClose = true;\r\n    // dialogConfig.id = \"modal-component\";\r\n    // dialogConfig.height = \"350px\";\r\n    // dialogConfig.width = \"600px\";\r\n    // const modalDialog = this.matDialog.open(DeletePopupComponent, dialogConfig);\r\n  }\r\n\r\n  specializationname: any='';\r\n  specialization:any;\r\n  specializationfile:File;\r\n  ngOnInit(): void {\r\n    // this.dataSource.paginator = this.paginator;\r\n    // this.dataSource.sort = this.sort;\r\n    this.getspecialitityList()\r\n\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // this.dataSource.sort = this.sort;\r\n    // this.dataSource.paginator = this.paginator;\r\n\r\n  }\r\n  public doFilter = (value: string) => {\r\n    this.dataSource.filter = value.trim().toLocaleLowerCase();\r\n  }\r\n  // addNewSymptom(event: any) {\r\n  //   this.symptomlist.push(event);\r\n  // }\r\n  deleteit:boolean=false;\r\n  specialization_delete:string;\r\n  removeSpeclization(name: any) {\r\n    this.deleteit = true;\r\n    this.specialization_delete = name;\r\n\r\n    // this.doctorService.removeSpeclization(name).subscribe(() => {\r\n    //    window.location.reload();\r\n\r\n    // })\r\n\r\n  }\r\n  closealert(){\r\n    this.deleteit = false;\r\n  }\r\n  deleteSpecialization(){\r\n    this.deleteit = false;\r\n\r\n    this.doctorService.removeSpeclization(this.specialization_delete).subscribe(() => {\r\n      this.toastr.success('Succesfully Deleted');\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      \r\n      }, 1110);   \r\n     })\r\n    \r\n  }\r\n  getspecialitityList() {\r\n    this.doctorService.getspecialitityList().subscribe((specialization) => {\r\n    console.log(\"---specialization----\");\r\n    console.log(specialization.response);\r\n    console.log(\"---=====----\");\r\n\r\n    specialization.response.forEach((obj, index) => {\r\n      if(obj.icon.length < 30) {obj.icon =\"https://testpanoeditor.s3-ap-southeast-1.amazonaws.com/doctorsetu/specialization/\"+obj.icon;}\r\n      obj.sl_num = index+1;\r\n\r\n    });\r\n      // if (index === specialization.response.length-1){ \r\n        this.specialization =specialization.response;\r\n    //  [{ \"_id\": \"5f2a376878fae0ea4c8d1f2d\", \"name\": \"Dentist\", \"icon\": \"Dentist.png\", \"id\": \"1\", \"status\": \"enabled\" }, { \"_id\": \"5f2a377278fae0ea4c8d1f2e\", \"name\": \"Dietician\", \"icon\": \"Dietician.png\", \"id\": \"2\", \"status\": \"enabled\" }, { \"_id\": \"5f2a377978fae0ea4c8d1f2f\", \"name\": \"ENT Specialist\", \"icon\": \"ENT-Specialist.png\", \"id\": \"3\", \"status\": \"enabled\" }, { \"_id\": \"5f2a379f78fae0ea4c8d1f30\", \"name\": \"Gastroenterologist\", \"icon\": \"Gastroenterologist.png\", \"id\": \"4\", \"status\": \"enabled\" }, { \"_id\": \"5f2a37c678fae0ea4c8d1f31\", \"name\": \"Gynaecologist\", \"icon\": \"Gynaecologist.png\", \"id\": \"5\", \"status\": \"enabled\" }, { \"_id\": \"5f2a37f478fae0ea4c8d1f32\", \"name\": \"Mental Wellness\", \"icon\": \"Mental-Wellness.png\", \"id\": \"6\", \"status\": \"enabled\" }, { \"_id\": \"5f2a381878fae0ea4c8d1f33\", \"name\": \"Neurologist\", \"icon\": \"Neurologist.png\", \"id\": \"7\", \"status\": \"enabled\" }, { \"_id\": \"5f2a384078fae0ea4c8d1f34\", \"name\": \"Orthopedician\", \"icon\": \"Orthopedician.png\", \"id\": \"8\", \"status\": \"enabled\" }, { \"_id\": \"5f2a387478fae0ea4c8d1f35\", \"name\": \"Paediatrician\", \"icon\": \"Paediatrician.png\", \"id\": \"9\", \"status\": \"enabled\" }, { \"_id\": \"5f2a38f178fae0ea4c8d1f36\", \"name\": \"Physician\", \"icon\": \"Physician.png\", \"id\": \"10\", \"status\": \"enabled\" }, { \"_id\": \"5f2a392578fae0ea4c8d1f37\", \"name\": \"Skin & Hair Specialist\", \"icon\": \"Skin-&-Hair-Specialist.png\", \"id\": \"11\", \"status\": \"enabled\" }, { \"_id\": \"5f2a395078fae0ea4c8d1f38\", \"name\": \"Urologist\", \"icon\": \"Urologist.png\", \"id\": \"12\", \"status\": \"enabled\" }]\r\n    this.dataSource =specialization.response;\r\n    //  [{ \"_id\": \"5f2a376878fae0ea4c8d1f2d\", \"name\": \"Dentist\", \"icon\": \"Dentist.png\", \"id\": \"1\", \"status\": \"enabled\" }, { \"_id\": \"5f2a377278fae0ea4c8d1f2e\", \"name\": \"Dietician\", \"icon\": \"Dietician.png\", \"id\": \"2\", \"status\": \"enabled\" }, { \"_id\": \"5f2a377978fae0ea4c8d1f2f\", \"name\": \"ENT Specialist\", \"icon\": \"ENT-Specialist.png\", \"id\": \"3\", \"status\": \"enabled\" }, { \"_id\": \"5f2a379f78fae0ea4c8d1f30\", \"name\": \"Gastroenterologist\", \"icon\": \"Gastroenterologist.png\", \"id\": \"4\", \"status\": \"enabled\" }, { \"_id\": \"5f2a37c678fae0ea4c8d1f31\", \"name\": \"Gynaecologist\", \"icon\": \"Gynaecologist.png\", \"id\": \"5\", \"status\": \"enabled\" }, { \"_id\": \"5f2a37f478fae0ea4c8d1f32\", \"name\": \"Mental Wellness\", \"icon\": \"Mental-Wellness.png\", \"id\": \"6\", \"status\": \"enabled\" }, { \"_id\": \"5f2a381878fae0ea4c8d1f33\", \"name\": \"Neurologist\", \"icon\": \"Neurologist.png\", \"id\": \"7\", \"status\": \"enabled\" }, { \"_id\": \"5f2a384078fae0ea4c8d1f34\", \"name\": \"Orthopedician\", \"icon\": \"Orthopedician.png\", \"id\": \"8\", \"status\": \"enabled\" }, { \"_id\": \"5f2a387478fae0ea4c8d1f35\", \"name\": \"Paediatrician\", \"icon\": \"Paediatrician.png\", \"id\": \"9\", \"status\": \"enabled\" }, { \"_id\": \"5f2a38f178fae0ea4c8d1f36\", \"name\": \"Physician\", \"icon\": \"Physician.png\", \"id\": \"10\", \"status\": \"enabled\" }, { \"_id\": \"5f2a392578fae0ea4c8d1f37\", \"name\": \"Skin & Hair Specialist\", \"icon\": \"Skin-&-Hair-Specialist.png\", \"id\": \"11\", \"status\": \"enabled\" }, { \"_id\": \"5f2a395078fae0ea4c8d1f38\", \"name\": \"Urologist\", \"icon\": \"Urologist.png\", \"id\": \"12\", \"status\": \"enabled\" }]\r\n\r\n    this.dataSource = new MatTableDataSource<PeriodicElement>(this.dataSource);\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n      // }\r\n      \r\n    \r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport interface PeriodicElement {\r\n  _id: string;\r\n  name: string;\r\n  icon: string;\r\n  id: string;\r\n  status: string;\r\n}\r\n\r\n","<!-- Specilazation View -->\r\n<div class=\"wrapper  m-1 position-relative\">\r\n  <div size=\"\" accent=\"info\" class=\"bg-none mx-1\">\r\n    <!-- Header -->\r\n    <div class=\"d-flex flex-direction-row justify-content-between w-100 align-items-center head\">\r\n      <div class=\"symptom-head\">\r\n        <span>Specialization Details </span>\r\n      </div>\r\n      <button type=\"button\" class=\"btn btn-primary button btn-sm\" mat-raised-button (click)=\"showhidebox()\"\r\n        [ngClass]=\"status ? 'hide' : 'show'\">\r\n        + Add New\r\n      </button>\r\n    </div>\r\n    <!-- Header -->\r\n    <!-- Add Fade in -->\r\n    <div class=\"p-1 bg-white mt-1 rounded mb-1 px-2 box-view\" [ngClass]=\"status ? 'show' : 'hide'\">\r\n      <div class=\"row\">\r\n        <div class=\"col-lg col-md col-sm col-12 mb-1\">\r\n          <p class=\"col-12 p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">Specialization <span class=\"red-star\">*</span></p>\r\n          <div class=\"form-group p-0 col m-0\">\r\n            <input type=\"Text\" class=\"form-control\"  placeholder=\"Specialization Name\"\r\n              [(ngModel)]=\"specializationname\" style=\"font-size: 12px;\" maxlength=\"50\">\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg col-md col-sm col-12 mb-1\">\r\n          <p class=\"col-12  p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">Specialization Icon <span class=\"red-star\">*</span></p>\r\n          <div class=\"form-group m-0 col p-0\">\r\n            <input type=\"file\" id=\"file\" (change)=\"handleFileInput($event)\" accept=\"image/x-png,image/jpeg\"\r\n              class=\"custom-file-input\" \r\n              id=\"inputGroupFile01\" aria-describedby=\"inputGroupFileAddon01\" style=\"font-size: 12px; font-weight: 600;\">\r\n            <span style=\"font-size:11px\">*Only jpg and Png Images allowed</span>\r\n            <!-- <input type=\"file\" [(ngchnage)]=\"specializationfile\"   class=\"form-control\" id=\"inputGroupFile01\" aria-describedby=\"inputGroupFileAddon01\" > -->\r\n            <!-- <div class=\"form-group\">\r\n              <label for=\"file\">Choose File</label>\r\n              <input type=\"file\"\r\n                     id=\"file\"\r\n                     (change)=\"handleFileInput($event.target.files)\">\r\n          </div> -->\r\n            <label class=\"custom-file-label\" for=\"inputGroupFile01\" style=\"font-size: 12px;\">{{displayFile}}</label>\r\n  \r\n            <!-- <div class=\"form-group m-0 col\">\r\n            <input type=\"file\" [(ngModel)]=\"specializationfile\" class=\"custom-file-input\" id=\"inputGroupFile01\"\r\n              aria-describedby=\"inputGroupFileAddon01\">\r\n  \r\n            <label class=\"custom-file-label\" for=\"inputGroupFile01\">Enter Specialization File</label> -->\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col mb-1\">\r\n          <p class=\"col p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">Status<span class=\"red-star\">*</span></p>\r\n          <div class=\"input-group\">\r\n            <select class=\"custom-select inthight\" id=\"inputGroupSelect01 placeholder\" [(ngModel)]=\"specilizationstatus\">\r\n              <option value=\"active\">Active</option>\r\n              <option value=\"inactive\">Inactive</option>\r\n            </select>\r\n          </div>\r\n      </div>\r\n      </div>\r\n      <footer id=\"modal-footer \" class=\"d-flex justify-content-end  mt-1\">\r\n        <button id=\"modal-action-button\" \r\n        class=\"btn btn-md button_action\" \r\n        type=\"button\" (click)=\"openModal()\" style=\"font-size: 12px;\" [disabled]=\"specializationname == '' || displayFile == '' || displayFile == 'Upload Specialization File'\">\r\n          Submit\r\n        </button>\r\n        <button class=\"btn btn-sm button_cancel\" \r\n        type=\"button\" id=\"modal-cancel-button\" \r\n        (click)=\"showhidebox()\" style=\"font-size: 12px;\">\r\n          Cancel\r\n        </button>\r\n      </footer>\r\n    </div>\r\n    <!-- Add Fade in -->\r\n    <!-- View Fade in -->\r\n    <div class=\"p-1 bg-white mt-1 rounded mb-1 px-2 box-view\" [ngClass]=\"statusedit ? 'show' : 'hide'\">\r\n      <div class=\"row\">\r\n        <div class=\"col-lg col-md col-sm col-12\">\r\n          <p class=\"col-12 p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">Edit Specilization <span class=\"red-star\">*</span></p>\r\n          <div class=\"form-group p-0 col m-0\">\r\n            <input type=\"Text\" \r\n            class=\"form-control\" placeholder=\"Name\" \r\n            [(ngModel)]=\"specializationnameeit\" style=\"font-size: 12px;\" maxlength=\"50\">\r\n          </div>\r\n        </div>\r\n  \r\n        <div class=\"col mb-1\">\r\n          <p class=\"col p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">Specilization Icon <span class=\"red-star\">*</span></p>\r\n          <div class=\"form-group m-0 col p-0\" >\r\n            <input type=\"file\" id=\"file\" \r\n            (change)=\"handleFileInputedit($event)\" accept=\"image/x-png,image/jpeg\" \r\n            class=\"custom-file-input\" id=\"inputGroupFile01\" aria-describedby=\"inputGroupFileAddon01\" \r\n            style=\"font-size: 12px;\">\r\n  <!--\r\n        <div class=\"col-lg col-md col-sm col-12\">\r\n          <p class=\"col-12 font-weight-bolder p-0 m-0 mb-1\">File Upload</p>\r\n          <div class=\"form-group m-0 col\">\r\n            <input type=\"file\" id=\"file\" (change)=\"handleFileInputedit($event)\" class=\"custom-file-input\"\r\n              id=\"inputGroupFile01\" aria-describedby=\"inputGroupFileAddon01\"> -->\r\n  \r\n            <span style=\"font-size:11px\">*Only jpg and Png Images allowed</span>\r\n  \r\n            <!-- <input type=\"file\" [(ngchnage)]=\"specializationfile\"   class=\"form-control\" id=\"inputGroupFile01\" aria-describedby=\"inputGroupFileAddon01\" > -->\r\n            <!-- <div class=\"form-group\">\r\n              <label for=\"file\">Choose File</label>\r\n              <input type=\"file\"\r\n                     id=\"file\"\r\n                     (change)=\"handleFileInput($event.target.files)\">\r\n          </div> -->\r\n            <label class=\"custom-file-label\" for=\"inputGroupFile01\" style=\"font-size: 12px;\">{{displayFileedit}}</label>\r\n          </div>\r\n        </div>\r\n        <div class=\"col mb-1\">\r\n          <p class=\"col p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">Status<span class=\"red-star\">*</span></p>\r\n          <div class=\"input-group\">\r\n            <select class=\"custom-select inthight\" id=\"inputGroupSelect01 placeholder\" [(ngModel)]=\"editSpecilizationstatus\">\r\n              <option value=\"active\">Active</option>\r\n              <option value=\"inactive\">Inactive</option>\r\n            </select>\r\n          </div>\r\n      </div>\r\n      </div>\r\n      <footer id=\"modal-footer \" class=\"d-flex justify-content-end  mt-1\">\r\n        <button id=\"modal-action-button\" class=\"btn btn-sm button_action\" \r\n        type=\"button\" (click)=\"openModaledit()\" style=\"font-size: 12px;\" [disabled]=\"specializationnameeit == '' || displayFileedit == ''\">\r\n          Update\r\n        </button>\r\n        <button class=\"btn btn-sm button_cancel\" \r\n        type=\"button\" id=\"modal-cancel-button\" (click)=\"showhideboxedit()\" style=\"font-size: 12px;\">\r\n          Cancel\r\n        </button>\r\n      </footer>\r\n    </div>\r\n    <!-- View Fade in -->\r\n    <!-- Table Box View -->\r\n    <div class=\"bg-white  table-top\">\r\n      <!-- Search View -->\r\n      <div class=\"main d-flex justyfy-content-end aligin-items-center\">\r\n        <div id=\"custom-search-input mb-2\" style=\"z-index: 9999;\">\r\n          <div class=\"input-group mb-2\">\r\n            <input type=\"text\" class=\"  search-query form-control\" placeholder=\"Search\"\r\n              (keyup)=\"doFilter($event.target.value)\" style=\"font-size: 12px;\"/>\r\n            <span class=\"input-group-btn btn btn-primary mr-2 btn-search\">\r\n                <i class=\"fas fa-search \" aria-hidden=\"true\" ></i>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Search View -->\r\n      <!-- Table View -->\r\n      <div class=\"col col-lg col-md col-sm m-0 p-0 justyfy-content-center align-items-center table-scroll\">\r\n      <table mat-table [dataSource]=\"dataSource\" matSort class=\" table-view\">\r\n        <ng-container matColumnDef=\"position\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-head\">Sl.No. </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.sl_num}} </td>\r\n        </ng-container>\r\n  \r\n        <ng-container matColumnDef=\"name\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-head\">Specialization Name </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.name | titlecase}} </td>\r\n        </ng-container>\r\n  \r\n        <ng-container matColumnDef=\"weight\">\r\n          <th mat-header-cell *matHeaderCellDef class=\"table-head\" style=\"text-align: center;\">Specialization Icon </th>\r\n          <td mat-cell *matCellDef=\"let element\" style=\"text-align: center;\">\r\n            <img src=\"{{element.icon}}\" alt=\"icon\" style=\"width: 20px; height: 20px; line-height: 20px;\"\r\n              aria-hidden=\"true\" /> </td>\r\n        </ng-container>\r\n  \r\n        <ng-container matColumnDef=\"symbol\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-head\">Status</th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.status | titlecase}} </td>\r\n        </ng-container>\r\n  \r\n        <ng-container matColumnDef=\"delete\">\r\n          <th mat-header-cell *matHeaderCellDef class=\"table-head text-center\"> Action </th>\r\n  \r\n          <td mat-cell *matCellDef=\"let element\" style=\"text-align: center;\">\r\n            <span class=\"edit text-center m-auto\">\r\n              <i class=\"far fa-edit  btn btn-primary text-center btn-sm p-1 mx-1\" (click)=\"editModal(element)\" data-toggle=\"tooltip\" title=\"Edit\"\r\n                aria-hidden=\"true\" style=\"font-size: 12px;\"></i>\r\n                <i class=\"fas fa-trash  btn btn-danger text-centerbtn-sm p-1 mx-1\" (click)=\"deleteModal()\"\r\n                (click)=\"removeSpeclization(element.name)\" aria-hidden=\"true\" style=\"font-size: 12px;\" data-toggle=\"tooltip\" title=\"Delete\"></i>\r\n              </span>\r\n          </td>\r\n        </ng-container>\r\n  \r\n  \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n      </div>\r\n      <!-- Table View -->\r\n      <!-- pagination -->\r\n      <mat-paginator [pageSizeOptions]=\"[10, 15, 20, 50]\" showFirstLastButtons></mat-paginator>\r\n      <!-- pagination -->\r\n    </div>\r\n    <!-- Table Box View -->\r\n  </div>\r\n</div>\r\n\r\n<!-- Specilazation View -->\r\n\r\n<div class=\"popup {{deleteit ?'pshow':''}}\">\r\n  <div class=\"centerbox\">\r\n    <div class=\"pclose\" ><i class=\"fa fa-times \" (click)=\"closealert()\" style=\"font-size: 20px;\"></i></div>\r\n    <section class=\"mx-2 mb-2 mt-2\">\r\n      <div class=\"col d-flex justify-content-center align-items-center p-0 m-0\">\r\n        <h5 class=\"p-0 m-0 mb-2\">Confirm</h5>\r\n      </div>\r\n      <div class=\"col text-left px-3 mb-1 p-0 m-0\">\r\n        <p class=\"p-0 m-0 mb-2\" ><strong></strong> <span style=\"padding-left: 5px;\"> Are you sure to delete Specialization  {{specialization_delete}} ?</span></p>\r\n        \r\n      </div>\r\n    </section>\r\n    <footer id=\"modal-footer\" style=\"padding-top: 100px;\" class=\"col-12 mb-2 d-flex justify-content-center align-items-center\">\r\n     \r\n      <div class=\"col m-0 p-0 px-3\" >\r\n\r\n        <button type=\"button\" class=\"btn btn-sm \"  (click)=\"deleteSpecialization()\" id=\"modal-action-button\">\r\n          Yes\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-sm \"  (click)=\"closealert()\" id=\"modal-cancel-button\">\r\n          No\r\n        </button>\r\n      </div>\r\n\r\n      \r\n    </footer>\r\n  </div>\r\n</div>","import { LanguageSpeakComponent } from './language-speak/language-speak.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { TablesComponent } from './tables.component';\r\nimport { SpecilizationComponent } from './specilization/specilization.component';\r\nimport { ContactListComponent } from './contact-list/contact-list.component';\r\nimport { PaymentSettingsComponent } from './payment-settings/payment-settings.component';\r\nimport { VerifiCheckListComponent } from './verifi-check-list/verifi-check-list.component';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { AccessControlComponent } from './access-control/access-control.component';\r\n\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: TablesComponent,\r\n  children: [\r\n    {\r\n      path: 'access-control',\r\n      component: AccessControlComponent,\r\n    },\r\n    {\r\n      path: 'contact-list',\r\n      component: ContactListComponent ,\r\n    },\r\n    {\r\n      path: 'specilization',\r\n      component: SpecilizationComponent,\r\n    },\r\n    {\r\n      path: 'language-speak',\r\n      component: LanguageSpeakComponent,\r\n    },\r\n    {\r\n      path: 'payment-settings',\r\n      component: PaymentSettingsComponent,\r\n    },\r\n    {\r\n      path: 'verifi-check-list',\r\n      component: VerifiCheckListComponent,\r\n    },\r\n    {\r\n      path: 'users',\r\n      component: UsersComponent,\r\n    },\r\n  ],\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TablesRoutingModule { }\r\n\r\nexport const routedComponents = [\r\n  TablesComponent,\r\n  ContactListComponent,\r\n  SpecilizationComponent,\r\n  LanguageSpeakComponent,\r\n];\r\n","\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-tables',\r\n  template: `<router-outlet>\r\n\r\n  </router-outlet>`,\r\n})\r\nexport class TablesComponent {\r\n\r\n}\r\n","\r\nimport { SpecilizationComponent } from './specilization/specilization.component';\r\nimport { ContactListComponent } from './contact-list/contact-list.component';\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { NbCardModule, NbIconModule, NbInputModule, NbTreeGridModule, NbSelectModule } from '@nebular/theme';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from './../../angular-material.module';\r\n\r\nimport { ThemeModule } from '../../@theme/theme.module';\r\nimport { TablesRoutingModule, routedComponents } from './tables-routing.module';\r\nimport { LanguageSpeakComponent } from './language-speak/language-speak.component';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { ModalComponent } from './specilization/modal/modal.component';\r\nimport { EditPopupComponent } from './language-speak/edit-popup/edit-popup.component';\r\nimport { DeletePopupComponent } from './language-speak/delete-popup/delete-popup.component';\r\nimport { PaymentSettingsComponent } from './payment-settings/payment-settings.component';\r\nimport { VerifiCheckListComponent } from './verifi-check-list/verifi-check-list.component';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { AccessControlComponent } from './access-control/access-control.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    NbCardModule,\r\n    NbTreeGridModule,\r\n    NbIconModule,\r\n    NbInputModule,\r\n    ThemeModule,\r\n    TablesRoutingModule,\r\n    Ng2SmartTableModule,\r\n    NbSelectModule,\r\n    FormsModule,\r\n    AngularMaterialModule,\r\n    MatToolbarModule,\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    ...routedComponents,\r\n    ContactListComponent,\r\n    SpecilizationComponent,\r\n    LanguageSpeakComponent,\r\n    ModalComponent,\r\n    EditPopupComponent,\r\n    DeletePopupComponent,\r\n    PaymentSettingsComponent,\r\n    VerifiCheckListComponent,\r\n    UsersComponent,\r\n    AccessControlComponent,\r\n  ],\r\n})\r\nexport class TablesModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { FormGroup,FormControl, Validators } from '@angular/forms';\r\nimport { DoctorService } from './../../../api/doctor.service';\r\nimport { MatPaginator, } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { HttpClient } from '@angular/common/http'; \r\nimport { PatientService } from './../../../api/patient.service';\r\n@Component({\r\n  selector: 'ngx-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.scss']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n\r\n  myForm = new FormGroup({\r\n    name: new FormControl('', [Validators.required, Validators.minLength(3)]),\r\n    file: new FormControl('', [Validators.required]),\r\n    fileSource: new FormControl('', [Validators.required])\r\n  });\r\n  displayedColumns: string[] = ['position', 'name', 'email', 'userType', 'delete']; \r\n \r\n  data: any;\r\n  dataSource: any;\r\n  displayFile:any = \"Enter Specialization File\"\r\n  fileupdate:boolean = false;\r\n  \r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n \r\n  status: boolean = false;\r\n  statusedit:boolean = false;\r\n  displayFileedit:any;\r\n  specializationEdit_id:any;\r\n  specializationnameeit:any;\r\n  specialization: any;\r\n  constructor(private http: HttpClient,\r\n    private doctorService: DoctorService,\r\n    public matDialog: MatDialog,\r\n    private patientService:PatientService\r\n\r\n  ) { }\r\n\r\n  get f(){\r\n    return this.myForm.controls;\r\n  }\r\n     \r\n  onFileChange(event) {\r\n  \r\n    if (event.target.files.length > 0) {\r\n      const file = event.target.files[0];\r\n      this.myForm.patchValue({\r\n        fileSource: file\r\n      });\r\n    }\r\n  }\r\n\r\n  handleFileInputedit(event){\r\n    this.fileupdate =true;\r\n    console.log(event.target.files.length)\r\n    this.displayFileedit = event.target.files[0].name;\r\n\r\n    if (event.target.files.length > 0) {\r\n      const file = event.target.files[0];\r\n      this.myForm.patchValue({\r\n        fileSource: file\r\n      });\r\n    }\r\n  }\r\n  handleFileInput(event:any) {\r\n    // this.fileToUpload = files.item(0);\r\n    console.log(event.target.files.length)\r\n    this.displayFile = event.target.files[0].name;\r\n\r\n    if (event.target.files.length > 0) {\r\n      const file = event.target.files[0];\r\n      this.myForm.patchValue({\r\n        fileSource: file\r\n      });\r\n      console.log(this.myForm)\r\n    }\r\n}\r\n  showhidebox() {\r\n    this.status = !this.status;\r\n  }\r\n  showhideboxedit(){\r\n    this.statusedit =!this.statusedit;\r\n  }\r\n  deleteid;\r\n  deleteuserType;\r\n  deleteModal(element){\r\nthis.callstatus=!this.callstatus;\r\nconsole.log(element)\r\nthis.deleteid= element.userID;\r\n  this.deleteuserType= element.loginType;\r\n  \r\n  }\r\n  leavechannel(){\r\n    this.callstatus=false;\r\n    this.deleteid=''\r\n    this.deleteuserType=''\r\n  }\r\n  callstatus:boolean=false\r\n\r\n  deleteit(){\r\n    this.doctorService.deleteuser(this.deleteid, this.deleteuserType).subscribe((res: any) => {\r\n      this.callstatus=false;\r\n      this.deleteid=''\r\n      this.deleteuserType=''\r\n      window.location.reload();\r\n\r\n        })\r\n\r\n  }\r\n  openModaledit(){\r\nconsole.log(this.edit_userid,this.edit_useremail, this.edit_username, this.edit_userpassword, this.edit_userphnum, this.edit_usertype );\r\nvar data;\r\nif(this.edit_usertype == \"hospitaladmin\"){\r\n  var hostdata = this.hospitalList.filter(ele => ele.hosp_name == this.edit_hospital);\r\n   data = {'userID': this.edit_userid, 'loginType':this.edit_usertype, \"useremail\":this.edit_useremail, \"username\":this.edit_username, \"userpassword\":this.edit_userpassword, \"userphnum\":this.edit_userphnum, 'hospital_id':hostdata[0].id}\r\n\r\n   \r\n}else if(this.edit_usertype == \"branchadmin\"){\r\n  var hostdata = this.hospitalList.filter(ele => ele.hosp_name == this.edit_hospital);\r\n  var branchdata  = hostdata[0].branches.filter(ele => ele.hosp_name == this.edit_branch);\r\n\r\n  data = {'userID': this.edit_userid, 'loginType':this.edit_usertype, \"useremail\":this.edit_useremail, \"username\":this.edit_username, \"userpassword\":this.edit_userpassword, \"userphnum\":this.edit_userphnum,'hospital_id':hostdata[0].id, 'branch_id' : branchdata[0].branch_id}\r\n}else{\r\n  data = {'userID': this.edit_userid, 'loginType':this.edit_usertype, \"useremail\":this.edit_useremail, \"username\":this.edit_username, \"userpassword\":this.edit_userpassword, \"userphnum\":this.edit_userphnum}\r\n} \r\n\r\n         this.doctorService.updateuserdetails(data).subscribe((res: any) => {\r\n           window.location.reload();\r\n\r\n         })\r\n\r\n         \r\n\r\n  //   if(!this.fileupdate){\r\n  //     var update={\"_id\":this.specializationEdit_id,\"name\":this.specializationnameeit}\r\n  //     this.doctorService.updatespecialization(update).subscribe((specialization: any) => {\r\n  //       this.specializationname=\"\";\r\n  //       this.specializationEdit_id =null;\r\n  //        window.location.reload();\r\n  //     })\r\n\r\n  //   }else{\r\n  //     console.log(\"--file to uplod--\")\r\n  //   const formData = new FormData();\r\n  //   formData.append('name', this.specializationnameeit);\r\n  //   formData.append('_id', this.specializationEdit_id);\r\n\r\n\r\n  //   this.doctorService.updatespecialization(formData).subscribe((specialization: any) => {\r\n  //     this.specializationname=\"\";\r\n  //      window.location.reload();\r\n  //   })\r\n\r\n  // }\r\n  }\r\n  openModal() {\r\n    const formData = new FormData();\r\n    let data =this.myForm.get('fileSource').value;\r\n    formData.append('specialization', this.specializationname);\r\n\r\n    \r\n\r\n    this.doctorService.addspecialization( formData).subscribe((specialization: any) => {\r\n      this.specializationname=\"\";\r\n       window.location.reload();\r\n    })\r\n  }\r\n\r\n  edit_userid:string;\r\n  edit_username:string=\"we\";\r\n  edit_useremail:string;\r\n  edit_userpassword:string;\r\n  edit_userphnum:number;\r\n  edit_usertype:string;\r\n  edit_hospital:string;\r\n  edit_branch:string;\r\n    editModal(element) {\r\n    console.log(element);\r\n    this.doctorService.getuserdetails(element.userID,element.loginType).subscribe((data) => {\r\n\r\n      console.log(data.response)\r\n      this.edit_userid=element.userID;\r\n      this.edit_username=data.response.name ||'';\r\n      this.edit_useremail=data.response.email;\r\n      // this.edit_userpassword=element.userpassword;\r\n      this.edit_userphnum=data.response.phnumber;\r\n      this.edit_usertype=element.loginType;\r\n      this.statusedit = !this.statusedit;\r\n      if(element.loginType == 'hospitaladmin'){\r\n        var hostdata = this.hospitalList.filter(ele => ele.id == data.response.hospital_id);\r\n        this.edit_hospital =hostdata[0].hosp_name;\r\n      }else if(element.loginType == 'branchadmin'){\r\n        console.log(this.hospitalList)\r\n        console.log(data.response.hospital_id)\r\n        var hostdata = this.hospitalList.filter(ele => ele.id == data.response.hospital_id);\r\n       console.log(hostdata)\r\n        this.edit_hospital =hostdata[0].hosp_name;\r\n        this.branchList = hostdata[0].branches;\r\n\r\n        var branchdata  = hostdata[0].branches.filter(ele => ele.branch_id == data.response.branch_id);\r\n        this.edit_branch =branchdata[0].hosp_name;\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n \r\n  specializationname: any;\r\n  specializationfile:File;\r\n  ngOnInit(): void {\r\n    this.getuserlist()\r\nthis.gethospitalList()\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n  }\r\n  public doFilter = (value: string) => {\r\n    this.dataSource.filter = value.trim().toLocaleLowerCase();\r\n  }\r\n  removeSpeclization(name: any) {\r\n\r\n    this.doctorService.removeSpeclization(name).subscribe(() => {\r\n       window.location.reload();\r\n\r\n    })\r\n  }\r\n  // getspecialitityList() {\r\n  //   this.doctorService.getspecialitityList().subscribe((specialization) => {\r\n  //   console.log(\"---specialization----\");\r\n  //   console.log(specialization.response);\r\n  //   console.log(\"---=====----\");\r\n\r\n  //   specialization.response.forEach((obj, index) => {\r\n      \r\n  //   });\r\n  //   this.specialization =specialization.response;\r\n  //   this.dataSource =specialization.response;\r\n  //   this.dataSource = new MatTableDataSource<PeriodicElement>(this.dataSource);\r\n  //   this.dataSource.sort = this.sort;\r\n  //   this.dataSource.paginator = this.paginator;\r\n      \r\n    \r\n  //   });\r\n  // }\r\ngethospitalList(){\r\n  this.patientService.gethospitalList().subscribe((hospital) => {\r\n    console.log(hospital.response)\r\nthis.hospitalList=hospital.response;\r\n\r\n  })\r\n}\r\n\r\n  getuserlist() {\r\n    this.doctorService.getuserlist().subscribe((access) => {\r\n\r\n      access.response.forEach((obj, index) => {\r\n        obj.sl_num = index+1;\r\n\r\n        if(obj.loginID2 == undefined){\r\n          // obj.loginID2= obj.loginID;\r\n        }else{\r\n          if(!obj.loginID2.includes('@')){\r\n            obj.loginID2= obj.loginID;\r\n\r\n          }\r\n\r\n        }\r\n        if(obj.loginType == \"hospitaladmin\") obj.showloginType = \"Hospital Admin\"\r\n        if(obj.loginType == \"verifiedauthority\") obj.showloginType = \"Verifying Authority\"\r\n        if(obj.loginType == \"madicalauthority\") obj.showloginType = \"Medical Authority\"\r\n        if(obj.loginType == \"branchadmin\") obj.showloginType = \"Branch Admin\"\r\n        if(obj.loginType == \"admin\") obj.showloginType = \"Admin\"\r\n\r\n      console.log(access.response);\r\n    });\r\n    this.dataSource =access.response;\r\n    this.dataSource = new MatTableDataSource<PeriodicElement>(this.dataSource);\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n      \r\n    \r\n    });\r\n  }\r\n \r\n   username:string;\r\n   useremail:string;\r\n   userpassword:string;\r\n   userphnum:number;\r\n   usertype:string;\r\n   branch:string;\r\n   hospitalList:any=[]\r\n   branchList:any=[]\r\n   hospital:any;\r\n   changeHospital(){\r\n      var data  = this.hospitalList.filter(ele => ele.hosp_name == this.hospital);\r\n      this.branchList = data[0].branches;\r\n\r\n   }\r\n   edit_changeHospital(){\r\n    var data  = this.hospitalList.filter(ele => ele.hosp_name == this.edit_hospital);\r\n    this.branchList = data[0].branches;\r\n\r\n }\r\n  createuser(){\r\n    // username= email\r\n    // loginType\r\n\r\n    // password\r\n    // email\r\n    // phnum\r\n    var data;\r\n    //db.user.insertOne({loginExist:false, phnum:userphnum, userID:\"875674674746\", logintype:\"email\", loginType:\"verifiedauthority\", loginID:\"verifiedauthority@doctorsetu.com\", \"password\" : \"fcea920f7412b5da7be0cf42b8c93759\"});\r\n    //db.madicalauthority.insertOne({id:\"875674674747\",name:\"madical Authority\", logintype:\"email\", email:\"madicalauthority@doctorsetu.com\", address:\"jp Nagar\", profilepic:\"/pictures/profile/user/default-doctor-profile-icon.jpg\"});\r\n    console.log(this.username, this.useremail, this.userpassword, this.userphnum, this.usertype)\r\nif(this.usertype == \"hospitaladmin\"){\r\n  var hostdata = this.hospitalList.filter(ele => ele.hosp_name == this.hospital);\r\n   data = {username:this.username,logintype:'email', loginType:this.usertype,phnum:this.userphnum,email:this.useremail, password:this.userpassword, hospital_id:hostdata[0].id }\r\n}else if(this.usertype == \"branchadmin\"){\r\n  var hostdata = this.hospitalList.filter(ele => ele.hosp_name == this.hospital);\r\n  var branchdata  = hostdata[0].branches.filter(ele => ele.hosp_name == this.branch);\r\n\r\n  data = {username:this.username,logintype:'email', loginType:this.usertype,phnum:this.userphnum,email:this.useremail, password:this.userpassword, hospital_id:hostdata[0].id, branch_id : branchdata[0].branch_id }\r\n}else{\r\n  data = {username:this.username,logintype:'email', loginType:this.usertype,phnum:this.userphnum,email:this.useremail, password:this.userpassword }\r\n}\r\n    this.doctorService.adduser(data).subscribe((adduser) => {\r\n\r\n      window.location.reload()\r\n\r\n    })\r\n  }\r\n\r\n}\r\n\r\nexport interface PeriodicElement {\r\n  _id: string;\r\n  name: string;\r\n  email: string;\r\n  userType: string;\r\n  createId: string;\r\n  id: string;\r\n  status: string;\r\n}\r\n","<!-- Specilazation View -->\r\n<div class=\"wrapper  m-1 position-relative\">\r\n    <div size=\"\" accent=\"info\" class=\"bg-none mx-1\">\r\n      <!-- Header -->\r\n      <div class=\"d-flex flex-direction-row justify-content-between w-100 align-items-center head\">\r\n        <div class=\"symptom-head\">\r\n          <span>Users</span>\r\n        </div>\r\n        <button type=\"button\" class=\"btn btn-primary button btn-sm\" mat-raised-button (click)=\"showhidebox()\"\r\n          [ngClass]=\"status ? 'hide' : 'show'\">\r\n          + Add New\r\n        </button>\r\n      </div>\r\n      <!-- Header -->\r\n      <!-- Add Fade in -->\r\n      <div class=\"p-1 bg-white mt-1 rounded mb-1 px-2 box-view\" [ngClass]=\"status ? 'show' : 'hide'\">\r\n        <div class=\"row\">\r\n          <div class=\"col-lg col-md col-sm col-12 mb-1\">\r\n            <p class=\"col-12 p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">User Name</p>\r\n            <div class=\"input-group\">\r\n              <input type=\"Text\" class=\"form-control inthight\"   [(ngModel)]=\"username\" placeholder=\"Enter User Name\"\r\n              style=\"font-size: 12px;\">\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg col-md col-sm col-12 mb-1\">\r\n            <p class=\"col-12  p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">Email Address</p>\r\n            <div class=\"input-group\">\r\n              <input type=\"email\" class=\"form-control inthight\" [(ngModel)]=\"useremail\" placeholder=\"Enter Email Address\"\r\n              style=\"font-size: 12px;\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-lg col-md col-sm col-12 mb-1\">\r\n            <p class=\"col-12 p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">Password</p>\r\n            <div class=\"input-group\">\r\n              <input type=\"password\" class=\"form-control inthight\" [(ngModel)]=\"userpassword\" placeholder=\"Enter Password\"\r\n              style=\"font-size: 12px;\">\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg col-md col-sm col-12 mb-1\">\r\n            <p class=\"col-12  p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">Mobile Number</p>\r\n            <div class=\"input-group\">\r\n              <input type=\"mobile\" class=\"form-control inthight\"  [(ngModel)]=\"userphnum\" placeholder=\"+ 91 -\"\r\n              style=\"font-size: 12px;\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-lg col-md col-sm col-12 mb-1\">\r\n            <p class=\"col-12  p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">Type</p>\r\n            <div class=\"input-group\">\r\n              <select class=\"custom-select inthight\" [(ngModel)]=\"usertype\" id=\"inputGroupSelect01 placeholder\" name=\"name\">\r\n                <option value=\"admin\"> Admin </option>\r\n              <!-- <option value=\"doctor\" selected> Doctor </option> -->\r\n              <option value=\"verifiedauthority\"> Verifying Authority </option>\r\n              <option value=\"madicalauthority\"> Medical Authority </option>\r\n              <option value=\"hospitaladmin\"> Hospital Admin</option>\r\n              <option value=\"branchadmin\"> Branch Admin</option> \r\n\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <!-- <div class=\"col-lg col-md col-sm col-12 mb-1\">\r\n            <p class=\"col-12 p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">Upload Profile Image</p>\r\n            <div class=\"input-group\">\r\n              <input type=\"file\" id=\"file\" accept=\"image/x-png,image/jpeg\"\r\n              class=\"custom-file-input inthight\" \r\n              id=\"inputGroupFile01\" aria-describedby=\"inputGroupFileAddon01\" style=\"font-size: 12px;\">\r\n            <span style=\"font-size:11px\">*Only jpg and Png Images allowed</span>\r\n            <label class=\"custom-file-label inthight\" for=\"inputGroupFile01\" style=\"font-size: 12px;\">{{displayFileedit }}</label>\r\n            </div>\r\n          </div> -->\r\n        </div>\r\n        <div class=\"row\">\r\n\r\n        <div class=\"col-lg col-md col-sm col-12 mb-1\" *ngIf=\"usertype =='hospitaladmin' || usertype == 'branchadmin'\">\r\n          <p class=\"col-12  p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">Hospital</p>\r\n          <div class=\"input-group\">\r\n            <select class=\"custom-select inthight\" [(ngModel)]=\"hospital\" (ngModelChange)=\"changeHospital()\" id=\"inputGroupSelect01 placeholder\">\r\n              <option>Choose a Hospital</option>\r\n              <option *ngFor=\"let hospital of hospitalList\">{{hospital.hosp_name}}</option>\r\n\r\n            </select> \r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg col-md col-sm col-12 mb-1\" *ngIf=\"usertype == 'branchadmin'\">\r\n          <p class=\"col-12  p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">Branch</p>\r\n          <div class=\"input-group\">\r\n            <select class=\"custom-select inthight\" [(ngModel)]=\"branch\" id=\"inputGroupSelect01 placeholder\">\r\n              <option>Choose a Branch</option>\r\n              <option *ngFor=\"let hospital of branchList\">{{hospital.hosp_name}}</option>\r\n\r\n            </select> \r\n          </div>\r\n        </div>\r\n        </div>\r\n        <footer id=\"modal-footer \" class=\"d-flex justify-content-end  mt-1\">\r\n          <button id=\"modal-action-button\" \r\n          class=\"btn btn-md button_action\" \r\n          type=\"button\" (click)=\"createuser()\" style=\"font-size: 12px;\">\r\n            Submit\r\n          </button>\r\n          <button class=\"btn btn-sm button_cancel\" \r\n          type=\"button\" id=\"modal-cancel-button\" \r\n          (click)=\"showhidebox()\" style=\"font-size: 12px;\">\r\n            Cancel\r\n          </button>\r\n        </footer>\r\n      </div>\r\n      <!-- Add Fade in -->\r\n      <!-- View Fade in -->\r\n      <div class=\"p-1 bg-white mt-1 rounded mb-1 px-2 box-view\" [ngClass]=\"statusedit ? 'show' : 'hide'\">\r\n        <div class=\"row\">\r\n          <div class=\"col-lg col-md col-sm col-12 mb-1\">\r\n            <p class=\"col-12 p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">User Name</p>\r\n            <div class=\"input-group\">\r\n              <input type=\"Text\" class=\"form-control inthight\" [(ngModel)]=\"edit_username\" placeholder=\"Enter User Name\"\r\n              style=\"font-size: 12px;\">\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg col-md col-sm col-12 mb-1\">\r\n            <p class=\"col-12  p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">Email Address</p>\r\n            <div class=\"input-group\">\r\n              <input type=\"email\" class=\"form-control inthight\"  [(ngModel)]=\"edit_useremail\" placeholder=\"Enter Email Address\"\r\n              style=\"font-size: 12px;\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-lg col-md col-sm col-12 mb-1\">\r\n            <p class=\"col-12 p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">Password</p>\r\n            <div class=\"input-group\">\r\n              <input type=\"password\" class=\"form-control inthight\" [(ngModel)]=\"edit_userpassword\" placeholder=\"Enter Password\"\r\n              style=\"font-size: 12px;\">\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg col-md col-sm col-12 mb-1\">\r\n            <p class=\"col-12  p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">Mobile Number</p>\r\n            <div class=\"input-group\">\r\n              <input type=\"mobile\" class=\"form-control inthight\"  [(ngModel)]=\"edit_userphnum\" placeholder=\"+ 91 -\"\r\n              style=\"font-size: 12px;\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-lg col-md col-sm col-12 mb-1\">\r\n            <p class=\"col-12  p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">Type</p>\r\n            <div class=\"input-group\">\r\n              <select class=\"custom-select inthight\" [(ngModel)]=\"edit_usertype\" id=\"inputGroupSelect01 placeholder\">\r\n                <option value=\"admin\"> Admin </option>\r\n                <!-- <option value=\"doctor\" selected> Doctor </option> -->\r\n                <option value=\"verifiedauthority\"> Verifying Authority </option>\r\n                <option value=\"madicalauthority\"> Medical Authority </option>\r\n                <option value=\"hospitaladmin\"> Hospital Admin</option>\r\n                <option value=\"branchadmin\"> Branch Admin</option> \r\n\r\n              </select> \r\n            </div>\r\n          </div>\r\n          <!-- <div class=\"col-lg col-md col-sm col-12 mb-1\" >\r\n            <p class=\"col-12 p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">Upload Profile Image</p>\r\n            <div class=\"input-group\">\r\n              <input type=\"file\" id=\"file\" accept=\"image/x-png,image/jpeg\"\r\n              class=\"custom-file-input inthight\" \r\n              id=\"inputGroupFile01\" aria-describedby=\"inputGroupFileAddon01\" style=\"font-size: 12px;\">\r\n            <span style=\"font-size:11px\">*Only jpg and Png Images allowed</span>\r\n            <label class=\"custom-file-label inthight\" for=\"inputGroupFile01\" style=\"font-size: 12px;\">{{displayFileedit }}</label>\r\n            </div>\r\n          </div> -->\r\n        </div>\r\n        <!-- <div class=\"row\"> -->\r\n          <div class=\"row\">\r\n\r\n            <div class=\"col-lg col-md col-sm col-12 mb-1\" *ngIf=\"edit_usertype =='hospitaladmin' || edit_usertype == 'branchadmin'\">\r\n              <p class=\"col-12  p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">Hospital</p>\r\n              <div class=\"input-group\">\r\n                <select class=\"custom-select inthight\" [(ngModel)]=\"edit_hospital\" (ngModelChange)=\"edit_changeHospital()\" id=\"inputGroupSelect01 placeholder\">\r\n                  <option>Choose a Hospital</option>\r\n                  <option *ngFor=\"let hospital of hospitalList\">{{hospital.hosp_name}}</option>\r\n    \r\n                </select> \r\n              </div>\r\n            </div>\r\n            <div class=\"col-lg col-md col-sm col-12 mb-1\" *ngIf=\"edit_usertype == 'branchadmin'\">\r\n              <p class=\"col-12  p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">Branch</p>\r\n              <div class=\"input-group\">\r\n                <select class=\"custom-select inthight\" [(ngModel)]=\"edit_branch\" id=\"inputGroupSelect01 placeholder\">\r\n                  <option>Choose a Branch</option>\r\n                  <option *ngFor=\"let hospital of branchList\">{{hospital.hosp_name}}</option>\r\n    \r\n                </select> \r\n              </div>\r\n            </div>\r\n            </div>\r\n\r\n          \r\n        <footer id=\"modal-footer \" class=\"d-flex justify-content-end  mt-1\">\r\n          <button id=\"modal-action-button\" class=\"btn btn-sm button_action\" \r\n          type=\"button\" (click)=\"openModaledit()\" style=\"font-size: 12px;\">\r\n            Update\r\n          </button>\r\n          <button class=\"btn btn-sm button_cancel\" \r\n          type=\"button\" id=\"modal-cancel-button\" (click)=\"showhideboxedit()\" style=\"font-size: 12px;\">\r\n            Cancel\r\n          </button>\r\n        </footer>\r\n      </div>\r\n      <!-- View Fade in -->\r\n      <!-- Table Box View -->\r\n      <div class=\"bg-white  table-top\">\r\n        <!-- Search View -->\r\n        <div class=\"main d-flex justyfy-content-end aligin-items-center\" style=\"float: right; padding-top: 5px;\">\r\n          <div id=\"custom-search-input mb-2\" style=\"z-index: 9999;\">\r\n            <div class=\"input-group mb-2\">\r\n              <input type=\"text\" class=\"  search-query form-control\" placeholder=\"Search\"\r\n                (keyup)=\"doFilter($event.target.value)\" style=\"font-size: 12px;\"/>\r\n              <span class=\"input-group-btn btn btn-primary mr-2 btn-search\">\r\n                  <i class=\"fas fa-search \" aria-hidden=\"true\" ></i>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- Search View -->\r\n        <!-- Table View -->\r\n        <div class=\"col col-lg col-md col-sm m-0 p-0 justyfy-content-center align-items-center table-scroll\">\r\n        <table mat-table [dataSource]=\"dataSource\" matSort class=\" table-view\">\r\n          <ng-container matColumnDef=\"position\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-head\">Sl.No. </th>\r\n            <td mat-cell *matCellDef=\"let element; let i=index;\"> {{element.sl_num}} </td>\r\n          </ng-container>\r\n    \r\n          <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-head\">User Name </th>\r\n            <td mat-cell *matCellDef=\"let element\" >{{element.username? element.username : \"\"}}</td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"email\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-head\">User Email ID </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.loginID2? element.loginID2 : element.loginID }} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"userType\">\r\n             <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-head\">User Type </th>\r\n            <td mat-cell *matCellDef=\"let element\">{{element.showloginType | titlecase}}  </td>\r\n          </ng-container>\r\n\r\n          <!-- <ng-container matColumnDef=\"symbol\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-head\">Status</th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.status | titlecase}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"createId\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-head\">Create Date </th>\r\n            <td mat-cell *matCellDef=\"let element\">  </td>\r\n          </ng-container> -->\r\n    \r\n    \r\n          <ng-container matColumnDef=\"delete\">\r\n            <th mat-header-cell *matHeaderCellDef class=\"table-head text-center\"> Action </th>\r\n    \r\n            <td mat-cell *matCellDef=\"let element\" style=\"text-align: center;\">\r\n              <span class=\"edit text-center m-auto\">\r\n                <i class=\"far fa-edit  btn btn-primary text-center btn-sm p-1 mx-1\" (click)=\"editModal(element)\"\r\n                  aria-hidden=\"true\" style=\"font-size: 12px;\" data-toggle=\"tooltip\" title=\"Edit\"></i>\r\n                  <!-- <i class=\"fas fa-trash  btn btn-danger text-centerbtn-sm p-1 mx-1\" (click)=\"deleteModal(element)\"\r\n                   aria-hidden=\"true\" style=\"font-size: 12px;\"></i> -->\r\n                </span>\r\n            </td>\r\n          </ng-container>\r\n    \r\n    \r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n        </div>\r\n        <!-- Table View -->\r\n        <!-- pagination -->\r\n        <mat-paginator [pageSizeOptions]=\"[10, 15, 20, 50]\" showFirstLastButtons></mat-paginator>\r\n        <!-- pagination -->\r\n      </div>\r\n      <!-- Table Box View -->\r\n    </div>\r\n  </div>\r\n  \r\n  <!-- Specilazation View -->\r\n\r\n  <div class=\"popup {{callstatus ?'pshow':''}}\">\r\n    <div class=\"centerbox\">\r\n      <div class=\"pclose\" (click)=\"leavechannel()\"><i class=\"fa fa-times \" style=\"font-size: 20px;\"></i></div>\r\n      <section class=\"mx-2 mb-2 mt-2\">\r\n        <div class=\"col d-flex justify-content-center align-items-center p-0 m-0\">\r\n          <h5 class=\"p-0 m-0 mb-2\">Confirm</h5>\r\n        </div>\r\n  \r\n        <span style=\"padding-left: 100px;\">Are you sure you want to delete user ?</span> \r\n      </section>\r\n      <footer id=\"modal-footer\" class=\"col-12 mb-2 d-flex justify-content-center align-items-center\">\r\n       \r\n        <div class=\"col m-0 p-0 px-3\">\r\n  \r\n          <button type=\"button\" class=\"btn btn-sm \" (click)=\"deleteit()\" id=\"modal-action-button\">\r\n            Yes\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-sm button_cancel\" id=\"modal-cancel-button\" (click)=\"leavechannel()\" >\r\n            No\r\n          </button>\r\n          \r\n        </div>\r\n  \r\n        \r\n      </footer>\r\n    </div>\r\n  </div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { FormGroup,FormControl, Validators } from '@angular/forms';\r\nimport { DoctorService } from './../../../api/doctor.service';\r\nimport { MatPaginator, } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { HttpClient } from '@angular/common/http'; \r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'ngx-verifi-check-list',\r\n  templateUrl: './verifi-check-list.component.html',\r\n  styleUrls: ['./verifi-check-list.component.scss']\r\n})\r\nexport class VerifiCheckListComponent implements OnInit {\r\n  myForm = new FormGroup({\r\n    name: new FormControl('', [Validators.required, Validators.minLength(3)]),\r\n    file: new FormControl('', [Validators.required]),\r\n    fileSource: new FormControl('', [Validators.required])\r\n  });\r\n  displayedColumns: string[] = ['position', 'name', 'symbol', 'delete'];\r\n  data: any;\r\n  dataSource: any;\r\n  displayFile:any = \"Enter Specialization File\"\r\n  fileupdate:boolean = false;\r\n  \r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  symptomlist: Array<any> = [\r\n    { code: 'p1', name: 'Covid19', status: 'Active' },\r\n    { code: 'p2', name: 'Cardio', status: 'Active' },\r\n    { code: 'p3', name: 'Cancer', status: 'Active' },\r\n    { code: 'p4', name: 'Urology', status: 'Active' },\r\n\r\n  ];\r\n  status: boolean = false;\r\n  statusedit:boolean = false;\r\n  displayFileedit:any;\r\n  specializationEdit_id:any;\r\n  specializationnameeit:any;\r\n  specialization: any;\r\n  constructor(private http: HttpClient,\r\n    private doctorService: DoctorService,\r\n    public matDialog: MatDialog,\r\n    private toastr: ToastrService\r\n\r\n  ) { }\r\n\r\n  get f(){\r\n    return this.myForm.controls;\r\n  }\r\n     \r\n  onFileChange(event) {\r\n  \r\n    if (event.target.files.length > 0) {\r\n      const file = event.target.files[0];\r\n      this.myForm.patchValue({\r\n        fileSource: file\r\n      });\r\n    }\r\n  }\r\n  verify:any\r\n  getverifiedlist(){\r\n    this.doctorService.getverifiedlist().subscribe((verify) => {\r\n      console.log(verify.response);\r\n      // this.verify.verifylist=verify.response;\r\n      // this.verify.verifylist.push({'name':'Other Documemts',verify:true})\r\n      this.specialization =verify.response;\r\n      this.dataSource =verify.response;\r\n      this.dataSource = new MatTableDataSource<PeriodicElement>(this.dataSource);\r\n      this.dataSource.sort = this.sort;\r\n      this.dataSource.paginator = this.paginator;\r\n\r\n      verify.response.forEach((obj, index) => {\r\n        obj.sl_num = index+1;\r\n\r\n      });\r\n\r\n    })\r\n  }\r\n  handleFileInputedit(event){\r\n    this.fileupdate =true;\r\n    console.log(event.target.files.length)\r\n    this.displayFileedit = event.target.files[0].name;\r\n\r\n    if (event.target.files.length > 0) {\r\n      const file = event.target.files[0];\r\n      this.myForm.patchValue({\r\n        fileSource: file\r\n      });\r\n    }\r\n  }\r\n  handleFileInput(event:any) {\r\n    // this.fileToUpload = files.item(0);\r\n    console.log(event.target.files.length)\r\n    this.displayFile = event.target.files[0].name;\r\n\r\n    if (event.target.files.length > 0) {\r\n      const file = event.target.files[0];\r\n      this.myForm.patchValue({\r\n        fileSource: file\r\n      });\r\n      console.log(this.myForm)\r\n    }\r\n}\r\n  showhidebox() {\r\n    this.status = !this.status;\r\n    this.statusedit =false;\r\n\r\n  }\r\n  showhideboxedit(){\r\n    this.statusedit =!this.statusedit;\r\n    this.status =false;\r\n\r\n  }\r\n\r\n  openModaledit(){\r\n    this.doctorService.updateverify(this.editverifysl, this.editverifyename,this.editverifystatus).subscribe((verify: any) => {\r\n      this.editverifyename=\"\";\r\n      this.editverifystatus=\"\";\r\n      this.editverifysl=''\r\n      window.location.reload();\r\n\r\n    })\r\n\r\n  }\r\n  verifyename:'';\r\n  verifystatus:'';\r\n  editverifyename:'';\r\n  editverifystatus:'';\r\n  editverifysl:''\r\n  openModal() {\r\n \r\n      this.doctorService.addverify(this.verifyename,this.verifystatus).subscribe((Language: any) => {\r\n        this.verifyename='';\r\n        this.verifystatus='';\r\n        window.location.reload();\r\n      })\r\n}\r\n\r\n  verification_delete:string;\r\n  deleteit:boolean=false;\r\n  editModal(element) {\r\n    this.statusedit = !this.statusedit;\r\n    this.status = false;\r\n\r\n    this.editverifyename =element.name;\r\n    this.editverifysl=element.id;\r\n    this.editverifystatus =element.status\r\n  }\r\n  closealert(){\r\n    this.deleteit=false;\r\n  }\r\n \r\n  specializationname: any;\r\n  specializationfile:File;\r\n  ngOnInit(): void {\r\n    this.getverifiedlist();\r\n    // this.getspecialitityList();\r\n\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n  }\r\n  public doFilter = (value: string) => {\r\n    this.dataSource.filter = value.trim().toLocaleLowerCase();\r\n  }\r\n  removeVerify(name: any) {\r\n    this.deleteit=true;\r\n    this.verification_delete=name;\r\n    // this.doctorService.removeVerify(name).subscribe(() => {\r\n    //    window.location.reload();\r\n\r\n    // })\r\n  }\r\n  deleteVerification(){\r\n    this.deleteit=false;\r\n\r\n    this.doctorService.removeVerify(this.verification_delete).subscribe(() => {\r\n      this.toastr.success('Succesfully Deleted');\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      \r\n      }, 1110);   \r\n     })\r\n   \r\n  }\r\n  \r\n  getspecialitityList() {\r\n    this.doctorService.getspecialitityList().subscribe((specialization) => {\r\n   \r\n    specialization.response.forEach((obj, index) => {\r\n      \r\n    });\r\n    this.specialization =specialization.response;\r\n    this.dataSource =specialization.response;\r\n    this.dataSource = new MatTableDataSource<PeriodicElement>(this.dataSource);\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n      \r\n    \r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\nexport interface PeriodicElement {\r\n  _id: string;\r\n  name: string;\r\n  icon: string;\r\n  id: string;\r\n  status: string;\r\n}\r\n","<!-- Specilazation View -->\r\n<div class=\"wrapper  m-1 position-relative\">\r\n    <div size=\"\" accent=\"info\" class=\"bg-none mx-1\">\r\n      <!-- Header -->\r\n      <div class=\"d-flex flex-direction-row justify-content-between w-100 align-items-center head\">\r\n        <div class=\"symptom-head\">\r\n          <span>Verification Check List</span>\r\n        </div>\r\n        <button type=\"button\" class=\"btn btn-primary button btn-sm\" mat-raised-button (click)=\"showhidebox()\"\r\n          [ngClass]=\"status ? 'hide' : 'show'\">\r\n          + Add New\r\n        </button>\r\n      </div>\r\n      <!-- Header -->\r\n      <!-- Add Fade in -->\r\n      <div class=\"p-1 bg-white mt-1 rounded mb-1 px-2 box-view\" [ngClass]=\"status ? 'show' : 'hide'\">\r\n        <div class=\"row\">\r\n          <div class=\"col-lg col-md col-sm col-12 mb-1\">\r\n            <p class=\"col-12 p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">Verification Checkpoint</p>\r\n            <div class=\"input-group\">\r\n              <input type=\"Text\" class=\"form-control inthight\" [(ngModel)]=\"verifyename\" placeholder=\"Enter Verification Checkpoint\"\r\n\r\n              style=\"font-size: 12px;\">\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg col-md col-sm col-12 mb-1\">\r\n            <p class=\"col-12  p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">Verification Status</p>\r\n            <div class=\"input-group\">\r\n              <select class=\"custom-select inthight\"[(ngModel)]=\"verifystatus\" id=\"inputGroupSelect01 placeholder\" placeholder=\"Status\">\r\n                <option value=\"Enable\">Enable</option>\r\n                <option value=\"Disable\">Disable</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <footer id=\"modal-footer \" class=\"d-flex justify-content-end  mt-1\">\r\n          <button id=\"modal-action-button\" \r\n          class=\"btn btn-md button_action\" \r\n          type=\"button\" (click)=\"openModal()\" style=\"font-size: 12px;\">\r\n            Submit\r\n          </button>\r\n          <button class=\"btn btn-sm button_cancel\" \r\n          type=\"button\" id=\"modal-cancel-button\" \r\n          (click)=\"showhidebox()\" style=\"font-size: 12px;\">\r\n            Cancel\r\n          </button>\r\n        </footer>\r\n      </div>\r\n      <!-- Add Fade in -->\r\n      <!-- View Fade in -->\r\n      <div class=\"p-1 bg-white mt-1 rounded mb-1 px-2 box-view\" [ngClass]=\"statusedit ? 'show' : 'hide'\">\r\n        <div class=\"row\">\r\n          <div class=\"col-lg col-md col-sm col-12\">\r\n            <p class=\"col-12 p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">Edit Verification Checkpoint</p>\r\n            <div class=\"input-group\">\r\n              <input type=\"Text\" class=\"form-control inthight\" [(ngModel)]=\"editverifyename\" placeholder=\"Enter Verification Name\"\r\n              style=\"font-size: 12px;\">\r\n            </div>\r\n          </div>\r\n    \r\n          <div class=\"col mb-1\">\r\n            <p class=\"col p-0 m-0 mb-1\" style=\"font-size: 14px; font-weight: 600;\">Edit Verification Status</p>\r\n            <div class=\"input-group\">\r\n              <select class=\"custom-select inthight\" id=\"inputGroupSelect01 placeholder\" [(ngModel)]=\"editverifystatus\">\r\n                <option value=\"Enable\">Enable</option>\r\n                <option value=\"Disable\">Disable</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <footer id=\"modal-footer \" class=\"d-flex justify-content-end  mt-1\">\r\n          <button id=\"modal-action-button\" class=\"btn btn-sm button_action\" \r\n          type=\"button\" (click)=\"openModaledit()\" style=\"font-size: 12px;\">\r\n            Update\r\n          </button>\r\n          <button class=\"btn btn-sm button_cancel\" \r\n          type=\"button\" id=\"modal-cancel-button\" (click)=\"showhideboxedit()\" style=\"font-size: 12px;\">\r\n            Cancel\r\n          </button>\r\n        </footer>\r\n      </div>\r\n      <!-- View Fade in -->\r\n      <!-- Table Box View -->\r\n      <div class=\"bg-white  table-top\">\r\n        <!-- Search View -->\r\n        <div class=\"main d-flex justyfy-content-end aligin-items-center\">\r\n          <div id=\"custom-search-input mb-2\" style=\"z-index: 9999;\">\r\n            <div class=\"input-group mb-2\">\r\n              <input type=\"text\" class=\"  search-query form-control\" placeholder=\"Search\"\r\n                (keyup)=\"doFilter($event.target.value)\" style=\"font-size: 12px;\"/>\r\n              <span class=\"input-group-btn btn btn-primary mr-2 btn-search\">\r\n                  <i class=\"fas fa-search \" aria-hidden=\"true\" ></i>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- Search View -->\r\n        <!-- Table View -->\r\n        <div class=\"col col-lg col-md col-sm m-0 p-0 justyfy-content-center align-items-center table-scroll\">\r\n        <table mat-table [dataSource]=\"dataSource\" matSort class=\" table-view\">\r\n          <ng-container matColumnDef=\"position\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-head\">Sl.No. </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.sl_num}} </td>\r\n          </ng-container>\r\n    \r\n          <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-head\">Verification Checkpoint </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.name | titlecase}} </td>\r\n          </ng-container>\r\n    \r\n    \r\n          <ng-container matColumnDef=\"symbol\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"table-head\">Status</th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.status | titlecase}} </td>\r\n          </ng-container>\r\n    \r\n          <ng-container matColumnDef=\"delete\">\r\n            <th mat-header-cell *matHeaderCellDef class=\"table-head text-center\"> Action </th>\r\n    \r\n            <td mat-cell *matCellDef=\"let element\" style=\"text-align: center;\">\r\n              <span class=\"edit text-center m-auto\">\r\n                <i class=\"far fa-edit  btn btn-primary text-center btn-sm p-1 mx-1\" (click)=\"editModal(element)\"\r\n                  aria-hidden=\"true\" style=\"font-size: 12px;\" data-toggle=\"tooltip\" title=\"Edit\"></i>\r\n                  <i class=\"fas fa-trash  btn btn-danger text-centerbtn-sm p-1 mx-1\" (click)=\"deleteModal()\"\r\n                  (click)=\"removeVerify(element.name)\" aria-hidden=\"true\" style=\"font-size: 12px;\" data-toggle=\"tooltip\" title=\"Delete\"></i>\r\n                </span>\r\n            </td>\r\n          </ng-container>\r\n    \r\n    \r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n        </div>\r\n        <!-- Table View -->\r\n        <!-- pagination -->\r\n        <mat-paginator [pageSizeOptions]=\"[10, 15, 20, 50]\" showFirstLastButtons></mat-paginator>\r\n        <!-- pagination -->\r\n      </div>\r\n      <!-- Table Box View -->\r\n    </div>\r\n  </div>\r\n  \r\n  <!-- Specilazation View -->\r\n\r\n  <div class=\"popup {{deleteit ?'pshow':''}}\">\r\n    <div class=\"centerbox\">\r\n      <div class=\"pclose\" ><i class=\"fa fa-times \" (click)=\"closealert()\" style=\"font-size: 20px;\"></i></div>\r\n      <section class=\"mx-2 mb-2 mt-2\">\r\n        <div class=\"col d-flex justify-content-center align-items-center p-0 m-0\">\r\n          <h5 class=\"p-0 m-0 mb-2\">Confirm</h5>\r\n        </div>\r\n        <div class=\"col text-left px-3 mb-1 p-0 m-0\">\r\n          <p class=\"p-0 m-0 mb-2\" ><strong></strong> <span style=\"padding-left: 5px;\"> Are you sure to delete Verification {{verification_delete}} ?</span></p>\r\n          \r\n        </div>\r\n      </section>\r\n      <footer id=\"modal-footer\" style=\"padding-top: 100px;\" class=\"col-12 mb-2 d-flex justify-content-center align-items-center\">\r\n       \r\n        <div class=\"col m-0 p-0 px-3\" >\r\n  \r\n          <button type=\"button\" class=\"btn btn-sm \"  (click)=\"deleteVerification()\" id=\"modal-action-button\">\r\n            Yes\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-sm \"  (click)=\"closealert()\" id=\"modal-cancel-button\">\r\n            No\r\n          </button>\r\n        </div>\r\n  \r\n        \r\n      </footer>\r\n    </div>\r\n  </div>"],"sourceRoot":"webpack:///"}