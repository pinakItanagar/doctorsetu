{"version":3,"sources":["webpack:///src/app/pages/payment/payment-option/payment-option.component.ts","webpack:///src/app/pages/payment/payment-option/payment-option.component.html","webpack:///src/app/pages/payment/payment-routing.module.ts","webpack:///src/app/pages/payment/payment.component.ts","webpack:///src/app/pages/payment/payment.module.ts"],"names":["PaymentOptionComponent","matDialog","patientService","popupstatus","cstatus","displayedColumns","bankCtrl","banks","filteredBanks","bankFilterCtrl","_onDestroy","doFilter","value","dataSource","filter","trim","toLocaleLowerCase","getpayementlist","next","slice","valueChanges","pipe","subscribe","filterBanks","element","console","log","status","currentediting","capture","id","amount","response","window","location","reload","listpayments","res","items","sort","paginator","doctorlist","search","toLowerCase","bank","name","first","indexOf","closepopup","selector","templateUrl","styleUrls","routes","path","component","children","PaymentRoutingModule","forChild","imports","exports","PaymentComponent","template","PaymentModule","declarations"],"mappings":"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","file":"payment-payment-module-es5.js","sourcesContent":["import { Component, OnInit,ViewChild, TemplateRef } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { MatPaginator,  } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport {  MatSort } from '@angular/material/sort';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { PatientService } from './../../../api/patient.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'ngx-payment-option',\r\n  templateUrl: './payment-option.component.html',\r\n  styleUrls: ['./payment-option.component.scss']\r\n})\r\nexport class PaymentOptionComponent implements OnInit {\r\n\r\n  constructor( public matDialog: MatDialog,  private patientService:PatientService) {}\r\n \r\n\r\n  symptoms:any;\r\n  dataSource:any;\r\n  doctorlist:any;\r\n  popupstatus:boolean=false;\r\n\r\n  cstatus: any = { \"captured\": \"btn-primary\", \"refunded\": \"btn-success\", \"cancled\": \"btn-danger\", \"authorized\": \"btn-primary\"}\r\n\r\n  displayedColumns: string[] = ['paymentid', 'amount', 'email', 'contact','creat', 'status'];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  public bankCtrl: FormControl = new FormControl();\r\n \r\n  private banks: any[] = [{\"id\":\"All\",\"name\":{\"first\":\"All Doctor's\",\"middle\":\"\",\"last\":\"\"}}];\r\n\r\n  public filteredBanks: ReplaySubject<any[]> = new ReplaySubject<any[]>(1);\r\n  public bankFilterCtrl: FormControl = new FormControl();\r\n  private _onDestroy = new Subject<void>();\r\n\r\n \r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.getpayementlist();\r\n    this.filteredBanks.next(this.banks.slice());\r\n    this.bankFilterCtrl.valueChanges\r\n    .pipe(takeUntil(this._onDestroy))\r\n    .subscribe(() => {\r\n\r\n      this.filterBanks();\r\n    });\r\n  }\r\n\r\n  \r\n  ngAfterViewInit(): void {\r\n  }\r\n\r\n  currentediting:any;\r\n  showpopup(element){\r\nconsole.log(element)\r\nif(element.status == 'authorized'){\r\n  this.popupstatus=true;\r\nthis.currentediting= element;\r\n}\r\n\r\n\r\n  }\r\n\r\n  capture(){\r\n    this.popupstatus=false;\r\n\r\n    this.patientService.capture(this.currentediting.id, this.currentediting.amount).subscribe((response) => {\r\n      this.currentediting='';\r\n      window.location.reload();\r\n\r\n    })\r\n\r\n  }\r\n  public doFilter = (value: string) => {\r\n    this.dataSource.filter = value.trim().toLocaleLowerCase();\r\n  }\r\n\r\n  \r\n  closepopup(){\r\n    this.popupstatus=false;\r\n    this.currentediting= \"\";\r\n\r\n  }\r\n  getpayementlist(){\r\n    this.patientService.listpayments().subscribe((response) => {\r\n    console.log(response.res.items)\r\n    this.dataSource=response.res.items;\r\n    this.dataSource = new MatTableDataSource<PeriodicElement>(this.dataSource);\r\n\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n  })\r\n\r\n}\r\nprivate filterBanks() {\r\n  this.banks=this.doctorlist\r\n  if (!this.banks) {\r\n    // return;\r\n    this.banks=this.doctorlist\r\n  }\r\n  // get the search keyword\r\n  let search = this.bankFilterCtrl.value;\r\n  if (!search) {\r\n    this.filteredBanks.next(this.banks.slice());\r\n    return;\r\n  } else {\r\n    search = search.toLowerCase();\r\n  }\r\n  // filter the banks\r\n  this.filteredBanks.next(\r\n    this.banks.filter(bank => bank.name.first.toLowerCase().indexOf(search) > -1)\r\n  );\r\n}\r\n}\r\n\r\nexport interface PeriodicElement {\r\n  _id:string;\r\n  sym_name: string;\r\n  sym_desc: string;\r\n  sym_icon: string;\r\n  sym_status:string;\r\n}","<!-- Payment View -->\r\n<div class=\"wrapper  m-1 position-relative\">\r\n    <!-- Dash Board head -->\r\n    <div class=\"row mx-1\">\r\n      <div class=\" payment-head\">\r\n        <span>Payment</span>\r\n      </div>\r\n    </div>\r\n  \r\n    <!-- Dash Board head -->\r\n  \r\n    <!-- option list -->\r\n    <div class=\"row mx-1 box-view rounded \">\r\n        <div class=\"w-100 shadow-sm p-2 mb-3 bg-white rounded\">\r\n        <!-- Date list -->\r\n        <!-- <div class=\"row m-0 p-0\">\r\n          <div class=\"col-lg col-md col-sm col-12\">\r\n            <div class=\"column\">\r\n              <div class=\"card-body p-0\">\r\n                <p class=\"pb-1 px-0 m-0\" style=\"font-size: 14px; font-weight: 600;\">Payment ID</p>\r\n                <div class=\"input-group\">\r\n                  <input type=\"text\" class=\"form-control inthight\" style=\"font-size: 12px; box-shadow: none;\"\r\n                    id=\"inlineFormInputGroupUsername2\" value=\"Pay_Egjgdefb\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg col-md col-sm col-12 mb-1\">\r\n            <div class=\"column\">\r\n              <div class=\"card-body p-0\">\r\n                <p class=\"pb-1 px-0 m-0\" style=\"font-size: 14px; font-weight: 600;\">Amount</p>\r\n                <div class=\"input-group  \">\r\n                  <input type=\"text\"  class=\"form-control inthight\" style=\"font-size: 12px; box-shadow: none;\"\r\n                    id=\"inlineFormInputGroupUsername2\" value=\"&#x20B9;200.00\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg col-md col-sm col-12 mb-1 \">\r\n            <div class=\"column\">\r\n              <div class=\"card-body p-0\">\r\n                <p class=\"pb-1 px-0 m-0\" style=\"font-size: 14px; font-weight: 600;\">Email ID </p>\r\n                <div class=\"input-group  \">\r\n                    <input type=\"text\"  class=\"form-control inthight\" style=\"font-size: 12px; box-shadow: none;\"\r\n                      id=\"inlineFormInputGroupUsername2\" value=\"info@gmail.com\">\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg col-md col-sm col-12 mb-1\">\r\n            <div class=\"column\">\r\n              <div class=\"card-body p-0\">\r\n                <p class=\"pb-1 px-0 m-0\" style=\"font-size: 14px; font-weight: 600;\">Contact </p>\r\n                <div class=\"input-group  \">\r\n                    <input type=\"text\"  class=\"form-control inthight\" style=\"font-size: 12px; box-shadow: none;\"\r\n                      id=\"inlineFormInputGroupUsername2\" value=\"+91 9908907755\">\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg col-md col-sm col-12 mb-1\">\r\n            <div class=\"column\">\r\n              <div class=\"card-body p-0\">\r\n                <p class=\"pb-1 px-0 m-0\" style=\"font-size: 14px; font-weight: 600;\">Creat At </p>\r\n                <div class=\"input-group  \">\r\n                    <input type=\"datetime-local\"  class=\"form-control inthight\" style=\"font-size: 12px; box-shadow: none;\"\r\n                      id=\"inlineFormInputGroupUsername2\" value=\"06 Oct 2020, 05:10.00 PM\">\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div> -->\r\n      \r\n        <!-- <div class=\"row m-0 p-0 mb-1\">\r\n          <div class=\"col-lg col-md col-sm col-12\">\r\n            <div class=\"column\">\r\n              <div class=\"card-body p-0\">\r\n                <button type=\"submit\" class=\"btn btn-primary btn-sm btnhight float-right text-center\"\r\n                  >Submit</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div> -->\r\n        <div class=\"main d-flex justyfy-content-end aligin-items-center\" style=\"float: right;\">\r\n            <div id=\"custom-search-input mb-2\" style=\"z-index: 9999;\">\r\n              <div class=\"input-group mb-2\">\r\n                <input type=\"text\" class=\"search-query form-control\" (keyup)=\"doFilter($event.target.value)\"placeholder=\"Search\"\r\n                   style=\"font-size: 12px;\"/>\r\n                <span class=\"input-group-btn btn btn-primary mr-3 btn-search\">\r\n                  <i class=\"fas fa-search \" aria-hidden=\"true\"></i>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        \r\n        <div class=\"col col-lg col-md col-sm m-0 p-0 justyfy-content-center align-items-center table-scroll\">\r\n            <table mat-table [dataSource]=\"dataSource\" matSort class=\" table-view \">\r\n      \r\n                <ng-container matColumnDef=\"paymentid\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Payment ID </th>\r\n                  <td mat-cell *matCellDef=\"let element; let i=index;\"> {{element.id | titlecase}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"amount\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Amount </th>\r\n                  <td mat-cell *matCellDef=\"let element\">&#x20B9;{{element.amount/100}}</td>  \r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"email\">\r\n                  <th mat-header-cell *matHeaderCellDef> Email ID </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element.email | titlecase}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"contact\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Contact </th>\r\n                  <td mat-cell *matCellDef=\"let element\">  {{element.contact}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"creat\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Created At </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.created_at}} </td>\r\n                </ng-container>\r\n\r\n                <!-- <ng-container matColumnDef=\"status\">\r\n                  <th mat-header-cell *matHeaderCellDef> Status </th>\r\n                  <td mat-cell *matCellDef=\"let element\">\r\n                    <div class=\"btn  btn-sm {{cstatus[element.status]}}\"\r\n                      style=\"padding: 2px 6px;font-size: 12px;\">\r\n                      {{element.status | titlecase}}</div>\r\n                  </td>\r\n                </ng-container> -->\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                  <th mat-header-cell *matHeaderCellDef class=\"table-head\"> Status </th>\r\n                  <td mat-cell *matCellDef=\"let element\">\r\n                    <div class=\"btn  btn-sm {{cstatus[element.status]}}\"\r\n                      style=\"padding: 2px 6px;font-size: 12px;\" (click)=\"showpopup(element)\">\r\n                      {{element.status | titlecase}} </div>\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n              </table>\r\n            \r\n              <!-- Angular 8 pagination -->\r\n              <mat-paginator [pageSizeOptions]=\"[5, 10, 15]\" showFirstLastButtons style=\"background-color: #FFF !important;\"></mat-paginator>\r\n        </div>\r\n        <!-- Table View -->\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n<div class=\"popup {{popupstatus ?'pshow':''}}\">\r\n  <div class=\"centerbox\">\r\n    <div class=\"pclose\" (click)=\"closepopup()\"><i class=\"fa fa-times \" style=\"font-size: 20px;\"></i></div>\r\n    <section class=\"mx-2 mb-2 mt-2\">\r\n      <div class=\"col d-flex justify-content-center align-items-center p-0 m-0\">\r\n        <h5 class=\"p-0 m-0 mb-2\">Status Update</h5>\r\n      </div>\r\n      \r\n      <div class=\"col text-left px-3 mb-1 p-0 m-0\">\r\n        <p class=\"p-0 m-0 mb-2\"><strong>Action:</strong> capture this payment  </p>\r\n        \r\n      </div>\r\n      \r\n    </section>\r\n    <footer id=\"modal-footer\" class=\"col-12 mb-2 d-flex justify-content-center align-items-center\">\r\n      \r\n      <div class=\"col m-0 p-0 px-3 \">\r\n\r\n        <button type=\"button\" class=\"btn btn-sm \" (click)=\"capture()\" id=\"modal-action-button\">\r\n          Confirm\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-sm\" id=\"modal-cancel-button\" (click)=\"closepopup()\">\r\n          Cancel\r\n        </button>\r\n      </div>\r\n\r\n      \r\n    </footer>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PaymentOptionComponent } from './payment-option/payment-option.component';\r\nimport { PaymentComponent } from './payment.component';\r\n\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: PaymentComponent,\r\n  children: [\r\n    {\r\n      path: 'payment-option', \r\n      component: PaymentOptionComponent,\r\n    },\r\n  ],\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PaymentRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-components',\r\n  template: `\r\n    <router-outlet></router-outlet>\r\n  `,\r\n})\r\nexport class PaymentComponent {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PaymentRoutingModule } from './payment-routing.module';\r\nimport { PaymentComponent } from './payment.component';\r\nimport { PaymentOptionComponent } from './payment-option/payment-option.component';\r\nimport { AngularMaterialModule } from '../../angular-material.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [PaymentComponent, PaymentOptionComponent],\r\n  imports: [\r\n    CommonModule,\r\n    PaymentRoutingModule,\r\n    AngularMaterialModule,\r\n  ]\r\n})\r\nexport class PaymentModule { }\r\n"]}